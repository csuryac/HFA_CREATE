<?xml version="1.0" encoding="UTF-8"?>
<!--Created by TIBCO WSDL-->
<wsdl:definitions xmlns:ns14="http://channeltype.common.n2.tibco.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns9="http://www.tibco.com/XPD/ScriptDescriptor/" xmlns:ns12="http://exception.api.common.n2.tibco.com" xmlns:ns5="http://directory.api.de.bpm.tibco.com" xmlns:ns13="http://api.de.n2.tibco.com" xmlns:ns6="http://www.tibco.com/bx/2009/management/processManagerType" xmlns:ns10="http://base.api.ec.n2.tibco.com" xmlns:ns7="http://orgmodel.api.de.bpm.tibco.com" xmlns:ns11="http://base.api.de.bpm.tibco.com" xmlns:ns8="http://resolver.api.de.n2.tibco.com" xmlns:ns2="http://xmlns.example.com/unique/default/namespace/1344674220961" xmlns:ns1="http://api.brm.n2.tibco.com" xmlns:ns4="http://api.ec.n2.tibco.com" xmlns:ns3="http://resource.api.de.bpm.tibco.com" xmlns:tns="http://xmlns.example.com/1429342289226" xmlns:ns0="http://www.dbs.com/schema/header" xmlns:orgdto="http://api.organisation.common.n2.tibco.com" xmlns:dm="http://datamodel.common.n2.tibco.com" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" name="Untitled" targetNamespace="http://xmlns.example.com/1429342289226">
    <wsdl:types>
        <xs:schema xmlns="http://base.api.ec.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://base.api.ec.n2.tibco.com" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:complexType name="Action">
                <xs:sequence>
                    <xs:element name="actionName" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ActionOptions">
                <xs:sequence>
                    <xs:element name="advancedOption" type="ns10:AdvancedActionOption" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ActionResult">
                <xs:sequence>
                    <xs:element name="statusMessage" type="xs:string"/>
                    <xs:element name="start" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="end" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="resultValue" type="ns10:ActionResultValue" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ActionResultValue">
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="value" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AdditionalAttributes">
                <xs:sequence>
                    <xs:element name="attribute" type="ns10:BaseEntryAttribute" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AdvancedActionOption">
                <xs:sequence>
                    <xs:element name="optionName" type="xs:string"/>
                    <xs:element name="optionValue" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AdvancedConfigurationOption">
                <xs:sequence>
                    <xs:element name="optionName" type="xs:string"/>
                    <xs:element name="optionValue" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AdvancedMeasureOption">
                <xs:annotation>
                    <xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="optionName" type="xs:string"/>
                    <xs:element name="optionValue" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AdvancedPurgeOption">
                <xs:annotation>
                    <xs:documentation>Advanced options for the Purge operation</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="optionName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name of an advanced option</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="optionValue" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The value of an advanced option</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AdvancedQueryOption">
                <xs:annotation>
                    <xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="optionName" type="xs:string"/>
                    <xs:element name="optionValue" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Attribute">
                <xs:annotation>
                    <xs:documentation>Definition of a specific attribute/value pairing.  

The attributeId can be referenced to an AttributeDefinition using the following operations:

- getAttributes 
- getAllAttributes </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attributeId" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Attribute ID that this value refers to.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>(Optional) Name of this attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeDisplayName" type="xs:string" minOccurs="0"/>
                    <xs:element name="value" type="xs:string" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Value of this attribute in the context of this event.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AttributeDefinition">
                <xs:annotation>
                    <xs:documentation>Definition of an attribute.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="category" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Category of this AttributeDefinition.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="componentId" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Component against which this AttributeDefinition is registered.  

This value is only populated when calling getAllAttributes. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="id" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Identifier of this attribute.  

(When registering attributes this property should be left blank.  The result of the registration operation is the same list of AttributeDefinitions passed in but with the id property filled out.)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="isPrimary" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether this attribute can be used in a query string.
Attributes that do not have this flag set can be returned as part of a query result, but cannot be used in a query filter.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="length" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Length of this attribute (as defined by Hibernate mappings).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="name" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Name of this AttributeDefinition.

(The Name must be unique for a specific component and version.)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="type" type="ns10:AttributeType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Type of this AttributeDefinition, for possible options see AttributeType</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="isFilterable" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether this attribute can be used for filtering.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="isSortable" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether this attribute can be used for sorting.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="isArray" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Whether or not this attribute is able to store arrays of values</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="displayName" type="xs:string" minOccurs="0"/>
                    <xs:element name="attributeGroup" type="ns10:AttributeGroup" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AttributeDefinitions">
                <xs:sequence>
                    <xs:element name="definition" type="ns10:AttributeDefinition" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="AttributeGroup">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="PRIMARY"/>
                    <xs:enumeration value="GENERIC"/>
                    <xs:enumeration value="EXTENDED"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="AttributeType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the AttributeTypes for specific AttributeDefinitions. One of: DATE, INT, STRING, BOOLEAN, LONG or DOUBLE.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DATE"/>
                    <xs:enumeration value="INT"/>
                    <xs:enumeration value="STRING"/>
                    <xs:enumeration value="BOOLEAN"/>
                    <xs:enumeration value="LONG"/>
                    <xs:enumeration value="DOUBLE"/>
                    <xs:enumeration value="BIGDECIMAL"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="Audit">
                <xs:complexContent>
                    <xs:extension base="ns10:BaseAuditInformation"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AverageMeasure" abstract="true">
                <xs:annotation>
                    <xs:documentation>Specific type of MeasureEntry that returns an average value for each entry.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasureEntry">
                        <xs:sequence>
                            <xs:element name="value" type="xs:long"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="AveragesMeasureType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the type of an AverageMeasure. One of the following:

- PROCESS_TOTAL: Total number of instances of this process template started during this ProcessDurationMeasurePeriod.

- PROCESS_TOTAL_TIME: Total time that instances of this process template were active during this ProcessDurationMeasurePeriod.

- PROCESS_AVERAGE_TIME: Average time that an instance of this process template was active during this ProcessDurationMeasurePeriod.

- WORKITEM_TOTAL: Total number of work items generated by this process template that were active during this ProcessDurationMeasurePeriod.

- WORKITEM_ACTIVE_AVERAGE_TIME: Average time that a work item generated by this process template was active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_ACTIVE_TOTAL_TIME: Total time that work items generated by this process template were active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_WAIT_TOTAL_TIME: Total time that work items generated by this process template were waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_WAIT_AVERAGE_TIME: Average time that a work item generated by this process template was waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_ACTION_TOTAL_TIME: Total time that work items generated by this process template were being actioned during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_ACTION_AVERAGE_TIME: Average time that a work item generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_WORKINGTIME_TOTAL_TIME: Total time that users spent processing work items generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. 

- WORKITEM_WORKINGTIME_AVERAGE_TIME: Average time that a work item generated by this process template was worked on by users during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="PROCESS_TOTAL">
                        <xs:annotation>
                            <xs:documentation>Total number of processes started for this duration</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="PROCESS_TOTAL_TIME"/>
                    <xs:enumeration value="PROCESS_AVERAGE_TIME"/>
                    <xs:enumeration value="WORKITEM_TOTAL"/>
                    <xs:enumeration value="WORKITEM_ACTIVE_AVERAGE_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Active Duration (Average)
All AMX BPM tasks will emit a READY and COMPLETE event. The time interval between the emission of these events will determine the Task Instance Active duration.
The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st offer / allocate (firstOfferTime) and workItem completion (completionTime) disregarding any intermediate states.
			</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_ACTIVE_TOTAL_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Active Duration (Total)
All AMX BPM tasks will emit a READY and COMPLETE event. The time interval between the emission of these events will determine the Task Instance Active duration.
The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st offer / allocate (firstOfferTime) and workItem completion (completionTime) disregarding any intermediate states.
			</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_WAIT_TOTAL_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Wait Duration (Total)
All AMX BPM tasks will emit a READY and OPEN event. The time interval between the emission of these events will determine the Task Instance Wait duration.
The Process Duration will be calculated when the task's (first) OPEN audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Offer / Allocate (firstOfferTime)and 1st Open (firstOpenTime)</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_WAIT_AVERAGE_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Wait Duration (Average)
All AMX BPM tasks will emit a READY and OPEN event. The time interval between the emission of these events will determine the Task Instance Wait duration.
The Process Duration will be calculated when the task's (first) OPEN audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Offer / Allocate (firstOfferTime)and 1st Open (firstOpenTime)</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_ACTION_TOTAL_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Action Duration (Total)
All AMX BPM tasks will emit an OPEN and COMPLETE event. The time interval between the emission of (the first OPEN of) these events will determine the Task Instance
Action duration. The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Open (firstOpenTime) and form submission (completionTime)</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_ACTION_AVERAGE_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Action Duration (Average)
All AMX BPM tasks will emit an OPEN and COMPLETE event. The time interval between the emission of (the first OPEN of) these events will determine the Task Instance
Action duration. The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Open (firstOpenTime) and form submission (completionTime)</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_WORKINGTIME_TOTAL_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Working Time Duration (Total)
All AMX BPM tasks will emit an OPEN and various user interaction end events, namely CLOSE, PEND, CANCEL and COMPLETE events.
The User Task Instance Working Time Duration will be incremented by the time interval between each OPEN and work item end event pairing,
each time one of these event pairings completes. Thus giving a total working time for a task instance, regardless of the number of times
it is opened/closed and by how many different users.
We interpret this as we need to calculate the cumulative time for between first and last (form submission) activities.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WORKITEM_WORKINGTIME_AVERAGE_TIME">
                        <xs:annotation>
                            <xs:documentation>User Task Instance Working Time Duration (Average)
All AMX BPM tasks will emit an OPEN and various user interaction end events, namely CLOSE, PEND, CANCEL and COMPLETE events.
The User Task Instance Working Time Duration will be incremented by the time interval between each OPEN and work item end event pairing,
each time one of these event pairings completes. Thus giving a total working time for a task instance, regardless of the number of times
it is opened/closed and by how many different users.
We interpret this as we need to calculate the cumulative time for between first and last (form submission) activities.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="BaseAuditInformation" abstract="true">
                <xs:annotation>
                    <xs:documentation>Audit Information returned for any Audit Trail</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="endPosition" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Index of the last event returned by the query.

This will either correlate with either:

- the numberOfItems+startPosition properties specified in the QueryOptions for the query, or

- the end of the results returned by the query.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="startPosition" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Index of the first event returend by the query. 

This will correlate with the startPosition  specified in QueryOptions in the query request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="totalItems" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Total number of items the query could have returned (if it had specified its startPosition as 0 and numberOfItems as -1).  

For performance reasons, 
totalItems is only returned if the getTotalItems flag was specified in QueryOptions in the query request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BaseEntryAttribute" abstract="true">
                <xs:annotation>
                    <xs:documentation>Specific attribute that is set on an entry returned by a query.

This entity is abstract and provides the id and name (where requested/applicable) for the query. It is then extended by each specific type supported, which provides a hard-typed value for the attribute.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attributeId" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Unique identifier for this attribute (where applicable, else -1).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Name of this attribute. 

This value is not set if populateAttributeNames is set to false.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeDisplayName" type="xs:string" minOccurs="0"/>
                    <xs:element name="type" type="ns10:AttributeType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BaseQueryOptions" abstract="true">
                <xs:annotation>
                    <xs:documentation>Execution-time options to be used with this query. These include:

- paging options for the query.

- runtime QueryParameters that should be used for any late-bound parameters specified in the query.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="getTotalCount" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether to return a count of the total number of items the query could return (if startPosition was specified as 0 and numberOfItems as -1). 

Setting this flag has some performance impact.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="numberOfItems" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Maximum number of events to return.

A value of  -1 specifies that all events (matching the filter) should be returned.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="populateAttributeNames" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>This option controls whether attribute names will be included in all returned attributes from the query. Where the QueryTarget refers to a table where id's are not applicable, this option will be ignored.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="startPosition" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Index of the first required event.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="advancedOption" type="ns10:AdvancedQueryOption" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BasicMeasure">
                <xs:annotation>
                    <xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:Measure">
                        <xs:sequence>
                            <xs:element name="id" type="ns10:BasicMeasureId"/>
                            <xs:element name="period" type="ns10:BasicMeasurePeriod" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="BasicMeasureId">
                <xs:annotation>
                    <xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasureId">
                        <xs:sequence>
                            <xs:element name="id" type="xs:string"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="BasicMeasurePeriod">
                <xs:annotation>
                    <xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasurePeriod">
                        <xs:sequence>
                            <xs:element name="entry" type="ns10:BasicValueMeasure" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="BasicValueMeasure">
                <xs:annotation>
                    <xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:IntMeasure">
                        <xs:sequence>
                            <xs:element name="type" type="xs:string"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="BigDecimalEntryAttribute">
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:decimal" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="BooleanEntryAttribute">
                <xs:annotation>
                    <xs:documentation>A boolean-typed entry attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:boolean" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="Case">
                <xs:annotation>
                    <xs:documentation>An entity representing a Case.  This is generally one of 2 options:
- CaseDetails. In this option the Case is referenced by the common constituent components: className, majorVersion, managedObjectId
- CaseReference.  In this option the Case is reference by the Case Reference Id</xs:documentation>
                </xs:annotation>
                <xs:choice>
                    <xs:element name="caseDetails" type="ns10:CaseDetails"/>
                    <xs:element name="reference" type="xs:string"/>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="CaseAudit">
                <xs:annotation>
                    <xs:documentation>The Audit Trail for a specified Case</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:Audit">
                        <xs:sequence>
                            <xs:element name="case" type="ns10:Case"/>
                            <xs:element name="entry" type="ns10:CaseAuditEntry" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="CaseAuditDetail">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="INSTIGATOR"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="CaseAuditEntry">
                <xs:annotation>
                    <xs:documentation>A specific entry within the Case Audit Trail</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:CommonAuditEntry">
                        <xs:sequence>
                            <xs:element name="instigator" type="ns10:CommonAuditEntry" minOccurs="0"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="CaseAuditReportOptions">
                <xs:complexContent>
                    <xs:extension base="ns10:ReportOptions">
                        <xs:sequence>
                            <xs:element name="detail" type="ns10:CaseAuditDetail" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="CaseDetails">
                <xs:annotation>
                    <xs:documentation>A reference to the case using the common constituent components: className, majorVersion, managedObjectId</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="className" type="xs:string"/>
                    <xs:element name="majorVersion" type="xs:int"/>
                    <xs:element name="managedObjectId" type="xs:long"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseReferences">
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CommonAuditEntry">
                <xs:annotation>
                    <xs:documentation>Audit Information which is common to all the Reporting API Operations</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="id" type="xs:long" minOccurs="0"/>
                    <xs:element name="creationTime" type="xs:dateTime"/>
                    <xs:element name="componentId" type="xs:string"/>
                    <xs:element name="messageId" type="xs:string"/>
                    <xs:element name="severity" type="xs:string"/>
                    <xs:element name="message" type="xs:string"/>
                    <xs:element name="priority" type="xs:string"/>
                    <xs:element name="correlationId" type="xs:string" minOccurs="0"/>
                    <xs:element name="contextId" type="xs:string" minOccurs="0"/>
                    <xs:element name="parentContextId" type="xs:string" minOccurs="0"/>
                    <xs:element name="messageCategory" type="xs:string" minOccurs="0"/>
                    <xs:element name="principalId" type="xs:string" minOccurs="0"/>
                    <xs:element name="principalName" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectId" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectName" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectType" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectVersion" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectStatus" type="xs:string" minOccurs="0"/>
                    <xs:element name="parentObjectId" type="xs:string" minOccurs="0"/>
                    <xs:element name="applicationActivityName" type="xs:string" minOccurs="0"/>
                    <xs:element name="applicationActivityInstanceId" type="xs:string" minOccurs="0"/>
                    <xs:element name="applicationActivityModelId" type="xs:string" minOccurs="0"/>
                    <xs:element name="applicationName" type="xs:string" minOccurs="0"/>
                    <xs:element name="priorStepId" type="xs:string" minOccurs="0"/>
                    <xs:element name="iteration" type="xs:int" minOccurs="0"/>
                    <xs:element name="iterationId" type="xs:string" minOccurs="0"/>
                    <xs:element name="hostTaskName" type="xs:string" minOccurs="0"/>
                    <xs:element name="hostTaskType" type="xs:string" minOccurs="0"/>
                    <xs:element name="entityId" type="xs:string" minOccurs="0"/>
                    <xs:element name="entityType" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectUrl" type="xs:string" minOccurs="0"/>
                    <xs:element name="managedObjectDetails" type="xs:string" minOccurs="0"/>
                    <xs:element name="modelMajorVersion" type="xs:string" minOccurs="0"/>
                    <xs:element name="modelVersion" type="xs:string" minOccurs="0"/>
                    <xs:element name="resourceId" type="xs:string" minOccurs="0"/>
                    <xs:element name="subprocessInstanceId" type="xs:string" minOccurs="0"/>
                    <xs:element name="subprocessName" type="xs:string" minOccurs="0"/>
                    <xs:element name="subprocessVersion" type="xs:string" minOccurs="0"/>
                    <xs:element name="moduleName" type="xs:string" minOccurs="0"/>
                    <xs:element name="processPriority" type="xs:string" minOccurs="0"/>
                    <xs:element name="caseReferences" type="ns10:CaseReferences" minOccurs="0"/>
                    <xs:element name="additionalAttributes" type="ns10:AdditionalAttributes" minOccurs="0"/>
                    <xs:element name="instigatedCaseEvents" type="ns10:CaseAuditEntry" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="genericAttributes" type="ns10:GenericAttributes" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Component">
                <xs:annotation>
                    <xs:documentation>Definition of a component.  

(When registering components the id property should not be filled in, instead the system will return a component object which contains the passed in values and also the id property.)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="componentClass" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>A class name associated with this component</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="componentName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Name of this component.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="description" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Description of this component.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="id" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Unique identifier of this component.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="implementationType" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Implementation type of this component (for example, SpringIT).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of this component (for example BRM, DE or EC).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="parentId" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>ParentId of this component (as defined by the CLMD file - for example, BRM has an implicit parentId of Common).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="revision" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Plug-in revision number of this component.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="version" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Version number of this component.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Components">
                <xs:sequence>
                    <xs:element name="component" type="ns10:Component" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Configuration">
                <xs:choice>
                    <xs:element name="entries" type="ns10:ConfigurationEntries"/>
                    <xs:element name="xmlDocument" type="ns10:ConfigurationXML"/>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="ConfigurationArea">
                <xs:sequence>
                    <xs:element name="target" type="xs:string"/>
                    <xs:element name="type" type="ns10:ConfigurationType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ConfigurationEntries">
                <xs:sequence>
                    <xs:element name="entry" type="ns10:ConfigurationEntry" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ConfigurationEntry">
                <xs:choice>
                    <xs:element name="mapEntry" type="ns10:MapConfigurationEntry"/>
                    <xs:element name="primitiveEntry" type="ns10:PrimitiveConfigurationEntry"/>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="ConfigurationOptions">
                <xs:sequence>
                    <xs:element name="advancedOption" type="ns10:AdvancedConfigurationOption" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ConfigurationType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="HIBERNATE_MAPPING"/>
                    <xs:enumeration value="RULES_CONFIGURATION"/>
                    <xs:enumeration value="PROPERTY_CONFIGURATION"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="ConfigurationUpdateDetails">
                <xs:sequence>
                    <xs:element name="status" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ConfigurationXML">
                <xs:sequence>
                    <xs:element name="document" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ConfigurationXMLDocument"/>
            <xs:simpleType name="ConsolidationType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the consolidation modes available for the measure request. One of: NO_CONSOLIDATION, CONSOLIDATE or BOTH.

See MeasureOptions.consolidation for more information.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="NO_CONSOLIDATION"/>
                    <xs:enumeration value="CONSOLIDATE"/>
                    <xs:enumeration value="BOTH"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="DateEntryAttribute">
                <xs:annotation>
                    <xs:documentation>A date-typed entry attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:dateTime" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DoubleEntryAttribute">
                <xs:annotation>
                    <xs:documentation>A double-typed entry attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:double" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="Environment">
                <xs:sequence>
                    <xs:element name="id" type="xs:long" minOccurs="0"/>
                    <xs:element name="hostName" type="xs:string"/>
                    <xs:element name="nodeName" type="xs:string"/>
                    <xs:element name="hostIpAddress" type="xs:string"/>
                    <xs:element name="environmentName" type="xs:string"/>
                    <xs:element name="compositeApplicationName" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Event">
                <xs:annotation>
                    <xs:documentation>Details of a specific event contained in or submitted to Event Collector.  </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="correlationId" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>CorrelationID assigned to this event.

The correlationID is used with the contextID and parentContextID to determine the series of events that have occurred. 

The correlationID will be set when a service request is received from an external source and remains the same for the duration of that request (including any child service calls made).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="eventTimestamp" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Timestamp of this event.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="id" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Unique id for this Event</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="message" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>String representation of this event.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="messageId" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Identifier for this event.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="priority" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Priority of this event (LOW, MEDIUM or HIGH).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="severity" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Severity of this event (DEBUG, SERVICE, INFO, AUDIT, WARN, ERROR or TRACE).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="isNormalized" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="attribute" type="ns10:Attribute" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EventBatch">
                <xs:annotation>
                    <xs:documentation>A batch of events for submission to Event Collector</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="event" type="ns10:Event" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GenericAttributes">
                <xs:sequence>
                    <xs:element name="attribute1" type="xs:long" minOccurs="0"/>
                    <xs:element name="attribute2" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute3" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute4" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute5" type="xs:decimal" minOccurs="0"/>
                    <xs:element name="attribute6" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="attribute7" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="attribute8" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute9" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute10" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute11" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute12" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute13" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute14" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute15" type="xs:long" minOccurs="0"/>
                    <xs:element name="attribute16" type="xs:decimal" minOccurs="0"/>
                    <xs:element name="attribute17" type="xs:decimal" minOccurs="0"/>
                    <xs:element name="attribute18" type="xs:decimal" minOccurs="0"/>
                    <xs:element name="attribute19" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="attribute20" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="attribute21" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute22" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute23" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute24" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute25" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute26" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute27" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute28" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute29" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute30" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute31" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute32" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute33" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute34" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute35" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute36" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute37" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute38" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute39" type="xs:string" minOccurs="0"/>
                    <xs:element name="attribute40" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GenericResult">
                <xs:annotation>
                    <xs:documentation>Information returned by an executeGenericQueryResponse message.
The GenericResult object contains summary information for this query, as well as the entries returned by the query.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseAuditInformation">
                        <xs:sequence>
                            <xs:element name="resultEntry" type="ns10:ResultEntry" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetAttributeOptions">
                <xs:sequence>
                    <xs:element name="requiredExtendedData" type="ns10:RequiredExtendedDataOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="IntMeasure" abstract="true">
                <xs:annotation>
                    <xs:documentation>Specific type of MeasureEntry that returns an integer value for each entry.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasureEntry">
                        <xs:sequence>
                            <xs:element name="value" type="xs:int"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="IntegerEntryAttribute">
                <xs:annotation>
                    <xs:documentation>An integer-typed entry attribute</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:int" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="LongEntryAttribute">
                <xs:annotation>
                    <xs:documentation>A long-typed entry attribute</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:long" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="LongMeasure">
                <xs:annotation>
                    <xs:documentation>Specific type of MeasureEntry that returns a long value for each entry.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasureEntry">
                        <xs:sequence>
                            <xs:element name="value" type="xs:long"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="MapConfigurationEntry">
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="values" type="ns10:MapConfigurationEntryValues" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MapConfigurationEntryValues">
                <xs:sequence>
                    <xs:element name="value" type="ns10:PrimitiveConfigurationEntry" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Measure" abstract="true">
                <xs:annotation>
                    <xs:documentation>Base entity returned when requesting a measure.  

When making a request, an array of identifiers can be passed in. For example, an array of ProcessTemplateIds can be supplied when calling the requestProcessTemplateMeasure operation.

The number of measures returned depends on the consolidation mode selected in the MeasureOptions.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="index" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Zero-based numeric index for each measure returned. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="isConsolidatedMeasure" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether the measure contains:

- data for a single id.

- consolidated data for all the ids passed in by the request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MeasureDuration">
                <xs:annotation>
                    <xs:documentation>A specific duration within a MeasurePeriod. This is used:

- in a request, to provide the required start date, end date and granularity. 

- in a response, to describe the time a MeasurePeriod refers to.  

See MeasurePeriod for more details.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="endDate" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>End date for this MeasureDuration.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="startDate" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Start date for this MeasureDuration.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="granularity" type="ns10:MeasureGranularity" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Enumerated value defining the unit of time represented by a MeasurePeriod that is either required (in a request) or returned (in a response).

One of: HOUR, DAY, MONTH, YEAR or WEEK.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MeasureEntry" abstract="true">
                <xs:annotation>
                    <xs:documentation>Generic MeasureEntry. Within a MeasurePeriod an entry will be returned for each entry type available. 

For example, when using a ProcessTemplate measure, one entry will be returned for each of: STARTED, COMPLETED, SUSPENDED and CANCELLED.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="index" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Zero-based numeric index for each entry returned. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="MeasureGranularity">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the unit of time represented by a MeasurePeriod that is either required (in a request) or returned (in a response).

One of: HOUR, DAY, MONTH, YEAR or WEEK.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="HOUR">
                        <xs:annotation>
                            <xs:documentation>Hourly granularity</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="DAY">
                        <xs:annotation>
                            <xs:documentation>Daily granularity</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="MONTH">
                        <xs:annotation>
                            <xs:documentation>Monthly granularity</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="YEAR">
                        <xs:annotation>
                            <xs:documentation>Yearly granularity</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="WEEK">
                        <xs:annotation>
                            <xs:documentation>Weekly granularity</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="MeasureId" abstract="true">
                <xs:annotation>
                    <xs:documentation>Basic MeasureId. The id used by a measure depends on the type of measure being referred to. For example, in the case of ProcessTemplate measures the id is defined by the name, version and module of the process template.

In all cases, the MeasureId uniquely identifies a specific entity in the EventCollectorMeasuresService.  </xs:documentation>
                </xs:annotation>
            </xs:complexType>
            <xs:complexType name="MeasureOptions">
                <xs:annotation>
                    <xs:documentation>Options to apply to this measure request.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="consolidation" type="ns10:ConsolidationType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Enumerated value defining the consolidation mode to use for this measure request. Either:

- NO_CONSOLIDATION: One measure is returned for each id passed in by the request. Each measure returned will specify the id to which it refers (see the non-abstract extensions of Measure for details).

- CONSOLIDATE: A single measure is returned, containing the consolidated data for all the ids passed in by the request.

- BOTH: One measure is returned for each id passed in by the request. An additional measure is also returned, containing the consolidated data for all the ids passed in by the request. (The isConsolidation attribute can be used to recognize which entry contains the consolidated data.)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="advancedOption" type="ns10:AdvancedMeasureOption" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MeasurePeriod" abstract="true">
                <xs:annotation>
                    <xs:documentation>Definition of a specific time period used by a measure.

When requesting a measure, a startDate, endDate and granularity value (HOUR, DAY, MONTH, YEAR, WEEK) must be specified. A MeasurePeriod will then be returned for each "unit" defined by this time period. 

For example if start and end dates defining 1 day of time are specified, with a granularity of HOUR, 24 MeasurePeriods will be returned.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="index" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Zero-based index for each measure period. The index will provide chronological ordering of the measures.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="duration" type="ns10:MeasureDuration"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="MeasureType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the type of measure to return. 

** PRIVATE API - Reserved for internal use **.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="PROCESS_TEMPLATE_MEASURE"/>
                    <xs:enumeration value="PROCESS_DURATION_MEASURE"/>
                    <xs:enumeration value="WORK_ITEM_FOR_RESOURCE_MEASURE"/>
                    <xs:enumeration value="WORK_ITEM_FOR_TEMPLATE_MEASURE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="PrimitiveConfigurationEntry">
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="value" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProcessDurationMeasure">
                <xs:annotation>
                    <xs:documentation>Entity returned by a requestProcessDurationMeasureResponse message.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:Measure">
                        <xs:sequence>
                            <xs:element name="id" type="ns10:ProcessTemplateId" minOccurs="0"/>
                            <xs:element name="period" type="ns10:ProcessDurationMeasurePeriod" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessDurationMeasureEntry">
                <xs:annotation>
                    <xs:documentation>Measure entry for the ProcessDurationMeasure type.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:LongMeasure">
                        <xs:sequence>
                            <xs:element name="type" type="ns10:AveragesMeasureType">
                                <xs:annotation>
                                    <xs:documentation>Enumerated value defining the type of an AverageMeasure. One of the following:

- PROCESS_TOTAL: Total number of instances of this process template started during this ProcessDurationMeasurePeriod.

- PROCESS_TOTAL_TIME: Total time that instances of this process template were active during this ProcessDurationMeasurePeriod.

- PROCESS_AVERAGE_TIME: Average time that an instance of this process template was active during this ProcessDurationMeasurePeriod.

- WORKITEM_TOTAL: Total number of work items generated by this process template that were active during this ProcessDurationMeasurePeriod.

- WORKITEM_ACTIVE_AVERAGE_TIME: Average time that a work item generated by this process template was active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_ACTIVE_TOTAL_TIME: Total time that work items generated by this process template were active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_WAIT_TOTAL_TIME: Total time that work items generated by this process template were waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_WAIT_AVERAGE_TIME: Average time that a work item generated by this process template was waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_ACTION_TOTAL_TIME: Total time that work items generated by this process template were being actioned during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_ACTION_AVERAGE_TIME: Average time that a work item generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_WORKINGTIME_TOTAL_TIME: Total time that users spent processing work items generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. 

- WORKITEM_WORKINGTIME_AVERAGE_TIME: Average time that a work item generated by this process template was worked on by users during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessDurationMeasurePeriod">
                <xs:annotation>
                    <xs:documentation>MeasurePeriod for ProcessDurationMeasure objects.  See MeasurePeriod for more information.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasurePeriod">
                        <xs:sequence>
                            <xs:element name="entry" type="ns10:ProcessDurationMeasureEntry" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessDurationMeasures">
                <xs:sequence>
                    <xs:element name="measure" type="ns10:ProcessDurationMeasure" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProcessInstanceAudit">
                <xs:annotation>
                    <xs:documentation>The Audit Trail for a specified Process Instance</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:Audit">
                        <xs:sequence>
                            <xs:element name="processInstanceRef" type="ns10:ProcessInstanceReference"/>
                            <xs:element name="entry" type="ns10:ProcessInstanceAuditEntry" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="ProcessInstanceAuditDetail">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="WORKITEM"/>
                    <xs:enumeration value="CASE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="ProcessInstanceAuditEntry">
                <xs:annotation>
                    <xs:documentation>A specific entry within the Audit Trail for a Process Instance</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:CommonAuditEntry">
                        <xs:sequence>
                            <xs:element name="workItemAudit" type="ns10:WorkItemAudit" minOccurs="0"/>
                            <xs:element name="subProcessAudit" type="ns10:ProcessInstanceAudit" minOccurs="0"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessInstanceAuditReportOptions">
                <xs:complexContent>
                    <xs:extension base="ns10:ReportOptions">
                        <xs:sequence>
                            <xs:element name="processDepth" type="xs:int" minOccurs="0"/>
                            <xs:element name="detail" type="ns10:ProcessInstanceAuditDetail" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessInstanceReference">
                <xs:annotation>
                    <xs:documentation>An entity representing a reference to a ProcessInstance, using the Process Instance Id</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="instanceId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateId">
                <xs:annotation>
                    <xs:documentation>Id of a valid process template.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasureId">
                        <xs:sequence>
                            <xs:element name="moduleName" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>(Optional) ModuleName of this process template.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="processTemplateName" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Name of this process template.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="processTemplateVersion" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>(Optional) Version number of this process template.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateIdIdentifier">
                <xs:annotation>
                    <xs:documentation>A Process Template identified by the id associated with it.  </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="processTemplateId" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The Id for this Process Template</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateIds">
                <xs:sequence>
                    <xs:element name="id" type="ns10:ProcessTemplateId" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateMeasure">
                <xs:annotation>
                    <xs:documentation>Entity returned by a requestProcessTemplateMeasureResponse message.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:Measure">
                        <xs:sequence>
                            <xs:element name="id" type="ns10:ProcessTemplateId" minOccurs="0"/>
                            <xs:element name="period" type="ns10:ProcessTemplateMeasurePeriod" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateMeasureEntry">
                <xs:annotation>
                    <xs:documentation>Measure entry for the ProcessTemplateMeasure type.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:IntMeasure">
                        <xs:sequence>
                            <xs:element name="type" type="ns10:ProcessTemplateStatusType">
                                <xs:annotation>
                                    <xs:documentation>Enumerated value defining the state of a process instance. One of: STARTED, COMPLETED, SUSPENDED or CANCELLED.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateMeasurePeriod">
                <xs:annotation>
                    <xs:documentation>MeasurePeriod for ProcessTemplateMeasure objects.  See MeasurePeriod for more information.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasurePeriod">
                        <xs:sequence>
                            <xs:element name="entry" type="ns10:ProcessTemplateMeasureEntry" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateMeasures">
                <xs:sequence>
                    <xs:element name="measure" type="ns10:ProcessTemplateMeasure" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ProcessTemplateNameIdentifier">
                <xs:annotation>
                    <xs:documentation>A Process Template identified by name, and optionally moduleName/version. Note: This option must uniquely identify a Process Template.  Name can be used alone provided there is only one template on the system with it.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="moduleName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>(Optional) The module name for this Process Template.  If not specified there must be only one Process Template on the system with the given processTemplateName</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="processTemplateName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name of this process template</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="version" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>(Optional) The version of this Process Template.   If not specified there must be only one Process Template on the system with the given processTemplateName</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ProcessTemplateStatusType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the state of a process instance. One of: STARTED, COMPLETED, SUSPENDED, HALTED, CANCELLED or FAILED.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="STARTED">
                        <xs:annotation>
                            <xs:documentation>Process started status</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="COMPLETED">
                        <xs:annotation>
                            <xs:documentation>Process completed status</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="SUSPENDED">
                        <xs:annotation>
                            <xs:documentation>Process suspended status</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="HALTED">
                        <xs:annotation>
                            <xs:documentation>Process halted status</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="CANCELLED">
                        <xs:annotation>
                            <xs:documentation>Process cancelled status</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="FAILED">
                        <xs:annotation>
                            <xs:documentation>Process failed status</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="ProcessTemplates">
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="processTemplateIdIdentifier" type="ns10:ProcessTemplateIdIdentifier"/>
                    <xs:element name="processTemplateNameIdentifier" type="ns10:ProcessTemplateNameIdentifier"/>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="PurgeOptions">
                <xs:annotation>
                    <xs:documentation>Provides options to control how a purge is carried out</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="batchSize" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>(Optional) Number of process instances that should be deleted before the transaction is committed.

Default value: 100</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="runInBackground" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>(Optional) Boolean value specifying whether the purge runs in the background. If:
- True: The purge will run in the background and the operation returns immediately. This is the default value.
- False: The operation waits for the purge to complete before returning (subject to timeouts).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="threshold" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>(Optional) Date before which process instances must have been completed, cancelled or failed for them to be purged in this operation.

If this value is omitted, all completed, cancelled and failed instances will be deleted.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="advancedOption" type="ns10:AdvancedPurgeOption" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="processTemplates" type="ns10:ProcessTemplates" minOccurs="0"/>
                    <xs:element name="requiredExtendedData" type="ns10:RequiredExtendedDataOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PurgeStatus">
                <xs:annotation>
                    <xs:documentation>The status of a purge operation</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="statusMessage" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A message indicating further information on the last purge operation</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="start" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The time the purge operation started</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="end" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The time the purge operation ended</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="details" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Any additional details for this purge</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="currentInstanceCount" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The current number of instances purged</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="totalInstanceCount" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The total number of instances matched for this purge</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="purgeOperationName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The name of the purge operation being referred to</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="status" type="ns10:PurgeStatusType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="PurgeStatusType">
                <xs:annotation>
                    <xs:documentation>An enumerated status indicator for the last purge operation</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="PURGE_IN_PROGRESS">
                        <xs:annotation>
                            <xs:documentation>A purge action is currently being executed</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="PURGE_COMPLETED">
                        <xs:annotation>
                            <xs:documentation>The last purge operation completed successfully</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="PURGE_STOPPED">
                        <xs:annotation>
                            <xs:documentation>The last purge operation was stopped manually</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="PURGE_FAILED">
                        <xs:annotation>
                            <xs:documentation>The last purge operation failed.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="Query">
                <xs:annotation>
                    <xs:documentation>Definition of a query to execute on the system, to obtain data from the Event Collector database.  

Queries can either be executed directly, or registered for later execution (recommended  when repeatedly calling the same query).</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="correlate" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether this query should be correlated. 

When this flag is set, the correlation ID of each returned event is examined. Every event that has the same correlation ID is then also returned.

Setting this flag can be useful for tracing the events triggered by a specific action. However, it can also result in large amounts of data being returned. It should therefore only be used where necessary.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="filter" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Filter string to use for this query.  

See the BPM Developer's Guide for more information about which attributes can be used in the filter and how to specify the filter string.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="requireAllAttributes" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether all attributes should be returned.  

This setting overrides any "requiredAttribute" elements.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="requiredAttribute" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>List of attributes that should be returned for each event found by this query.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="sortOrder" type="ns10:SortElement" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="target" type="ns10:QueryTarget" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="QueryIdentifier">
                <xs:annotation>
                    <xs:documentation>Definition of the identifier for a query registered in Event Collector.

The QueryIdentifier can contain either a guid or a tag to identify the query. A guid is generally recommended for better performance.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="guid" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Globally unique identifier for this query.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="tag" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Unique string identifier for this query.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="QueryInfo">
                <xs:annotation>
                    <xs:documentation>Details of a query, including its QueryIdentifier.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="query" type="ns10:Query"/>
                    <xs:element name="identifier" type="ns10:QueryIdentifier"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="QueryOptions">
                <xs:complexContent>
                    <xs:extension base="ns10:BaseQueryOptions">
                        <xs:sequence>
                            <xs:element name="parameter" type="ns10:QueryParameter" minOccurs="0" maxOccurs="unbounded"/>
                            <xs:element name="version" type="ns10:Version" minOccurs="0"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="QueryParameter">
                <xs:annotation>
                    <xs:documentation>Definition of a QueryParameter, which can be used when late-binding values into a query filter string.

This can make it easier to re-use an existing query, where only certain values will change within the query.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="parameterName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the parameter to use.  

This should match the name of a late-bound parameter literal used as part of a filter for a registered query.

See the BPM Developer's Guide for more information about the use of late-bound parameter literals with registered query.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="parameterValue" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Value to use with this parameter.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="QueryPayload">
                <xs:sequence>
                    <xs:element name="query" type="ns10:Query"/>
                    <xs:element name="options" type="ns10:QueryOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="QueryTarget">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="AUDIT"/>
                    <xs:enumeration value="PROCESS_METRICS"/>
                    <xs:enumeration value="PROCESS_STATS"/>
                    <xs:enumeration value="WORKITEM_STATS"/>
                    <xs:enumeration value="USER_ACTIVITY"/>
                    <xs:enumeration value="REGISTERED_QUERIES"/>
                    <xs:enumeration value="REGISTERED_COMPONENTS"/>
                    <xs:enumeration value="REGISTERED_ATTRIBUTES"/>
                    <xs:enumeration value="PROCESS_ACTIVITY"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="RegisterAttributeOptions">
                <xs:sequence>
                    <xs:element name="requiredExtendedData" type="ns10:RequiredExtendedDataOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ReportOptions">
                <xs:annotation>
                    <xs:documentation>The options available when generating the report</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseQueryOptions">
                        <xs:sequence>
                            <xs:element name="requireAllAttributes" type="xs:boolean" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Boolean value defining whether all attributes should be returned.  
This setting overrides any "requiredAttribute" elements.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="requiredAttribute" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>List of attributes that should be returned for each event found by this query.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="sortOrder" type="ns10:SortElement" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="RequiredExtendedDataOptions">
                <xs:annotation>
                    <xs:documentation>The extended data that the response should return (see documentation for more details on the extended data available for the requests)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="requireAllExtendedData" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>If set, all extended data available will be returned in the response.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="requiredExtendedData" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Requests that a given piece of extended data be returned in the response.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="version" type="ns10:Version" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ResourceId">
                <xs:annotation>
                    <xs:documentation>ResourceId implementation of the MeasureId. </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasureId">
                        <xs:sequence>
                            <xs:element name="resourceId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Unique ID of a valid resource to use as the identifier for this request.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="Result">
                <xs:annotation>
                    <xs:documentation>Information returned by an executeQueryResponse message.
The Result object contains summary information followed by a list of the events returned by the query.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="endPosition" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Index of the last event returned by the query.

This will correlate with either:

- the numberOfItems + startPosition properties specified in the QueryOptions for the query, or

- the end of the results returned by the query.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="startPosition" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Index of the first event returned by the query. 

This will correlate with the startPosition specified in QueryOptions in the query request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="totalItems" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Total number of items the query could have returned (if it had specified its startPosition as 0 and numberOfItems as -1).  

For performance reasons, totalItems is only returned if the getTotalItems flag was specified in QueryOptions in the query request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="event" type="ns10:Event" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ResultEntry">
                <xs:annotation>
                    <xs:documentation>ResultEntry contains the id and ref for this entry, as well as the attributes set for this entry</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="id" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Unique id for this result entry</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ref" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Reference used for this entry</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attribute" type="ns10:BaseEntryAttribute" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SortElement">
                <xs:annotation>
                    <xs:documentation>Definition of a specific SortElement (used to build up the SortOrder on a query).</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attribute" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the attribute to sort on.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="type" type="ns10:SortType">
                        <xs:annotation>
                            <xs:documentation>Type (direction) the sort should take.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="SortType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the type of sort which can be used for each element of a SortOrder.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DESCENDING"/>
                    <xs:enumeration value="ASCENDING"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="StringEntryAttribute">
                <xs:annotation>
                    <xs:documentation>String-typed entry attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:BaseEntryAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:string" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="Target">
                <xs:annotation>
                    <xs:documentation>Specifies the target table in the Event Collector database against which the query should be executed. One of:

- AUDIT: This is the default option if QueryTarget is not specified.

- PROCESS_METRICS: 

- PROCESS_STATS: 

- WORKITEM_STATS:  

- REGISTERED_QUERIES: 

- REGISTERED_COMPONENTS

- REGISTERED_ATTRIBUTES

- USER_ACTIVITY</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="AUDIT"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="Version">
                <xs:annotation>
                    <xs:documentation>Determine the version of the API to respond with.  See individual entities for more information</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="2.2">
                        <xs:annotation>
                            <xs:documentation>&lt;Default&gt; 2.2 version of the API.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="3.0">
                        <xs:annotation>
                            <xs:documentation>3.0 version of the API.  Introduces the following: 
- All BaseEntryAttribute derived entities (such as IntegerEntryAttribute) can now return multiple "value" entities if the source Attribute is an array type
- BaseEntryAttribute can return a label for an Attribute if one has been defined</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="WorkItemAudit">
                <xs:complexContent>
                    <xs:extension base="ns10:Audit">
                        <xs:sequence>
                            <xs:element name="entry" type="ns10:WorkItemAuditEntry" minOccurs="0" maxOccurs="unbounded"/>
                            <xs:element name="workItemRef" type="ns10:WorkItemReference"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="WorkItemAuditDetail">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CASE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="WorkItemAuditEntry">
                <xs:complexContent>
                    <xs:extension base="ns10:CommonAuditEntry"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkItemAuditReportOptions">
                <xs:complexContent>
                    <xs:extension base="ns10:ReportOptions">
                        <xs:sequence>
                            <xs:element name="detail" type="ns10:WorkItemAuditDetail" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkItemMeasure">
                <xs:annotation>
                    <xs:documentation>Entity returned by a requestWorkItemPerformanceForTemplateResponse or requestWorkItemPerformanceForResourceResponse message.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:Measure">
                        <xs:sequence>
                            <xs:element name="id" type="ns10:MeasureId" minOccurs="0"/>
                            <xs:element name="period" type="ns10:WorkItemMeasurePeriod" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkItemMeasureEntry">
                <xs:annotation>
                    <xs:documentation>Measure entry for the WorkItemMeasure type.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:IntMeasure">
                        <xs:sequence>
                            <xs:element name="type" type="ns10:WorkItemStatusType">
                                <xs:annotation>
                                    <xs:documentation>Enumerated value defining the state of a work item. One of: OFFERED, ALLOCATED, PENDED, COMPLETED, SUSPENDED or CANCELLED.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkItemMeasurePeriod">
                <xs:annotation>
                    <xs:documentation>MeasurePeriod for WorkItemMeasure objects. See MeasurePeriod for more information</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns10:MeasurePeriod">
                        <xs:sequence>
                            <xs:element name="entry" type="ns10:WorkItemMeasureEntry" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkItemMeasures">
                <xs:sequence>
                    <xs:element name="measure" type="ns10:WorkItemMeasure" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkItemReference">
                <xs:sequence>
                    <xs:element name="workItemId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="WorkItemStatusType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the state of a work item. One of: OFFERED, ALLOCATED, PENDED, COMPLETED, SUSPENDED, CANCELLED or OPENED.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="OFFERED">
                        <xs:annotation>
                            <xs:documentation>Work Item Offered State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="ALLOCATED">
                        <xs:annotation>
                            <xs:documentation>Work Item Allocated State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="PENDED">
                        <xs:annotation>
                            <xs:documentation>Work Item Pended State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="COMPLETED">
                        <xs:annotation>
                            <xs:documentation>Work Item Completed State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="SUSPENDED">
                        <xs:annotation>
                            <xs:documentation>Work Item Suspended State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="CANCELLED">
                        <xs:annotation>
                            <xs:documentation>Work Item Cancelled State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="OPENED">
                        <xs:annotation>
                            <xs:documentation>Work Item Opened State</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:element name="Action" type="ns10:Action"/>
            <xs:element name="ActionOptions" type="ns10:ActionOptions"/>
            <xs:element name="ActionResult" type="ns10:ActionResult"/>
            <xs:element name="ActionResultValue" type="ns10:ActionResultValue"/>
            <xs:element name="AdditionalAttributes" type="ns10:AdditionalAttributes"/>
            <xs:element name="AdvancedActionOption" type="ns10:AdvancedActionOption"/>
            <xs:element name="AdvancedConfigurationOption" type="ns10:AdvancedConfigurationOption"/>
            <xs:element name="AdvancedMeasureOption" type="ns10:AdvancedMeasureOption"/>
            <xs:element name="AdvancedPurgeOption" type="ns10:AdvancedPurgeOption"/>
            <xs:element name="AdvancedQueryOption" type="ns10:AdvancedQueryOption"/>
            <xs:element name="Attribute" type="ns10:Attribute"/>
            <xs:element name="AttributeDefinition" type="ns10:AttributeDefinition"/>
            <xs:element name="AttributeDefinitions" type="ns10:AttributeDefinitions"/>
            <xs:element name="Audit" type="ns10:Audit"/>
            <xs:element name="AverageMeasure" type="ns10:AverageMeasure"/>
            <xs:element name="BaseAuditInformation" type="ns10:BaseAuditInformation"/>
            <xs:element name="BaseEntryAttribute" type="ns10:BaseEntryAttribute"/>
            <xs:element name="BaseQueryOptions" type="ns10:BaseQueryOptions"/>
            <xs:element name="BasicMeasure" type="ns10:BasicMeasure"/>
            <xs:element name="BasicMeasureId" type="ns10:BasicMeasureId"/>
            <xs:element name="BasicMeasurePeriod" type="ns10:BasicMeasurePeriod"/>
            <xs:element name="BasicValueMeasure" type="ns10:BasicValueMeasure"/>
            <xs:element name="BigDecimalEntryAttribute" type="ns10:BigDecimalEntryAttribute"/>
            <xs:element name="BooleanEntryAttribute" type="ns10:BooleanEntryAttribute"/>
            <xs:element name="Case" type="ns10:Case"/>
            <xs:element name="CaseAudit" type="ns10:CaseAudit"/>
            <xs:element name="CaseAuditEntry" type="ns10:CaseAuditEntry"/>
            <xs:element name="CaseAuditReportOptions" type="ns10:CaseAuditReportOptions"/>
            <xs:element name="CaseDetails" type="ns10:CaseDetails"/>
            <xs:element name="CaseReferences" type="ns10:CaseReferences"/>
            <xs:element name="CommonAuditEntry" type="ns10:CommonAuditEntry"/>
            <xs:element name="Component" type="ns10:Component"/>
            <xs:element name="Components" type="ns10:Components"/>
            <xs:element name="Configuration" type="ns10:Configuration"/>
            <xs:element name="ConfigurationArea" type="ns10:ConfigurationArea"/>
            <xs:element name="ConfigurationEntries" type="ns10:ConfigurationEntries"/>
            <xs:element name="ConfigurationEntry" type="ns10:ConfigurationEntry"/>
            <xs:element name="ConfigurationOptions" type="ns10:ConfigurationOptions"/>
            <xs:element name="ConfigurationUpdateDetails" type="ns10:ConfigurationUpdateDetails"/>
            <xs:element name="ConfigurationXML" type="ns10:ConfigurationXML"/>
            <xs:element name="ConfigurationXMLDocument" type="ns10:ConfigurationXMLDocument"/>
            <xs:element name="DateEntryAttribute" type="ns10:DateEntryAttribute"/>
            <xs:element name="DoubleEntryAttribute" type="ns10:DoubleEntryAttribute"/>
            <xs:element name="Environment" type="ns10:Environment"/>
            <xs:element name="Event" type="ns10:Event"/>
            <xs:element name="EventBatch" type="ns10:EventBatch"/>
            <xs:element name="GenericAttributes" type="ns10:GenericAttributes"/>
            <xs:element name="GenericResult" type="ns10:GenericResult"/>
            <xs:element name="GetAttributeOptions" type="ns10:GetAttributeOptions"/>
            <xs:element name="IntMeasure" type="ns10:IntMeasure"/>
            <xs:element name="IntegerEntryAttribute" type="ns10:IntegerEntryAttribute"/>
            <xs:element name="LongEntryAttribute" type="ns10:LongEntryAttribute"/>
            <xs:element name="LongMeasure" type="ns10:LongMeasure"/>
            <xs:element name="MapConfigurationEntry" type="ns10:MapConfigurationEntry"/>
            <xs:element name="MapConfigurationEntryValues" type="ns10:MapConfigurationEntryValues"/>
            <xs:element name="Measure" type="ns10:Measure"/>
            <xs:element name="MeasureDuration" type="ns10:MeasureDuration"/>
            <xs:element name="MeasureEntry" type="ns10:MeasureEntry"/>
            <xs:element name="MeasureId" type="ns10:MeasureId"/>
            <xs:element name="MeasureOptions" type="ns10:MeasureOptions"/>
            <xs:element name="MeasurePeriod" type="ns10:MeasurePeriod"/>
            <xs:element name="PrimitiveConfigurationEntry" type="ns10:PrimitiveConfigurationEntry"/>
            <xs:element name="ProcessDurationMeasure" type="ns10:ProcessDurationMeasure"/>
            <xs:element name="ProcessDurationMeasureEntry" type="ns10:ProcessDurationMeasureEntry"/>
            <xs:element name="ProcessDurationMeasurePeriod" type="ns10:ProcessDurationMeasurePeriod"/>
            <xs:element name="ProcessDurationMeasures" type="ns10:ProcessDurationMeasures"/>
            <xs:element name="ProcessInstanceAudit" type="ns10:ProcessInstanceAudit"/>
            <xs:element name="ProcessInstanceAuditEntry" type="ns10:ProcessInstanceAuditEntry"/>
            <xs:element name="ProcessInstanceAuditReportOptions" type="ns10:ProcessInstanceAuditReportOptions"/>
            <xs:element name="ProcessInstanceReference" type="ns10:ProcessInstanceReference"/>
            <xs:element name="ProcessTemplateId" type="ns10:ProcessTemplateId"/>
            <xs:element name="ProcessTemplateIdIdentifier" type="ns10:ProcessTemplateIdIdentifier"/>
            <xs:element name="ProcessTemplateIds" type="ns10:ProcessTemplateIds"/>
            <xs:element name="ProcessTemplateMeasure" type="ns10:ProcessTemplateMeasure"/>
            <xs:element name="ProcessTemplateMeasureEntry" type="ns10:ProcessTemplateMeasureEntry"/>
            <xs:element name="ProcessTemplateMeasurePeriod" type="ns10:ProcessTemplateMeasurePeriod"/>
            <xs:element name="ProcessTemplateMeasures" type="ns10:ProcessTemplateMeasures"/>
            <xs:element name="ProcessTemplateNameIdentifier" type="ns10:ProcessTemplateNameIdentifier"/>
            <xs:element name="ProcessTemplates" type="ns10:ProcessTemplates"/>
            <xs:element name="PurgeOptions" type="ns10:PurgeOptions"/>
            <xs:element name="PurgeStatus" type="ns10:PurgeStatus"/>
            <xs:element name="Query" type="ns10:Query"/>
            <xs:element name="QueryIdentifier" type="ns10:QueryIdentifier"/>
            <xs:element name="QueryInfo" type="ns10:QueryInfo"/>
            <xs:element name="QueryOptions" type="ns10:QueryOptions"/>
            <xs:element name="QueryParameter" type="ns10:QueryParameter"/>
            <xs:element name="QueryPayload" type="ns10:QueryPayload"/>
            <xs:element name="RegisterAttributeOptions" type="ns10:RegisterAttributeOptions"/>
            <xs:element name="ReportOptions" type="ns10:ReportOptions"/>
            <xs:element name="RequiredExtendedDataOptions" type="ns10:RequiredExtendedDataOptions"/>
            <xs:element name="ResourceId" type="ns10:ResourceId"/>
            <xs:element name="Result" type="ns10:Result"/>
            <xs:element name="ResultEntry" type="ns10:ResultEntry"/>
            <xs:element name="SortElement" type="ns10:SortElement"/>
            <xs:element name="StringEntryAttribute" type="ns10:StringEntryAttribute"/>
            <xs:element name="WorkItemAudit" type="ns10:WorkItemAudit"/>
            <xs:element name="WorkItemAuditEntry" type="ns10:WorkItemAuditEntry"/>
            <xs:element name="WorkItemAuditReportOptions" type="ns10:WorkItemAuditReportOptions"/>
            <xs:element name="WorkItemMeasure" type="ns10:WorkItemMeasure"/>
            <xs:element name="WorkItemMeasureEntry" type="ns10:WorkItemMeasureEntry"/>
            <xs:element name="WorkItemMeasurePeriod" type="ns10:WorkItemMeasurePeriod"/>
            <xs:element name="WorkItemMeasures" type="ns10:WorkItemMeasures"/>
            <xs:element name="WorkItemReference" type="ns10:WorkItemReference"/>
        </xs:schema>
        <xs:schema xmlns="http://resolver.api.de.n2.tibco.com" xmlns:de="http://api.de.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://resolver.api.de.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://api.organisation.common.n2.tibco.com"/>
            <xs:import namespace="http://api.de.n2.tibco.com"/>
            <xs:element name="describeEntity">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
                    Request to describe the identified model entity.
                    Extends XmlOrgModelVersion which provides the org-model version attribute.
                </xs:documentation>
                    </xs:annotation>
                    <xs:complexContent>
                        <xs:extension base="orgdto:XmlOrgModelVersion">
                            <xs:sequence minOccurs="0">
                                <xs:element name="dynamic-id-attr" type="orgdto:XmlDynamicIdField" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>Provides a collection of name/value pairs that identify a Dynamic Organisational Instance.</xs:documentation>
                                    </xs:annotation>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="entity-type" type="orgdto:OrganisationalEntityType">
                                <xs:annotation>
                                    <xs:documentation>Identifies the category of the org-entity, and used to improve and validate the search.
                            </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="guid" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Globally, unique identifier for the org-entity. Although this value is unique across all entities, if the entity exists within more than one major version, it will share the same GUID.
                            </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="describeEntityResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Describes the identified model entity.
        </xs:documentation>
                    </xs:annotation>
                    <xs:complexContent>
                        <xs:extension base="de:XmlEntityDetail"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEntityName">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Returns the name(s) of the entities identified by the given model
                        version and guid.</xs:documentation>
                    </xs:annotation>
                    <xs:complexContent>
                        <xs:extension base="orgdto:XmlOrgModelVersion">
                            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="guid" type="xs:string"/>
                            </xs:sequence>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEntityNameResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Returns the name(s) of the entities identified by the given model
                version and guid.</xs:documentation>
                    </xs:annotation>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="entity" type="orgdto:XmlParticipantId">
                            <xs:annotation>
                                <xs:documentation>Gives the summary information for each entity identified in the request.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNamedEntity">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Request to retrieve a list of the entities, of a given type, identified by the given name.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="participant" type="orgdto:XmlParticipantId" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNamedEntityResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The collection of entity identifiers that match the given name.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="entity" type="orgdto:XmlParticipantId" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNamedResource">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Request to list the Resources identified by the given name.
        </xs:documentation>
                    </xs:annotation>
                    <xs:attribute name="model-version" default="-1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Major version number of the organization model from which the resources' associations ()position, group, capability, etc) are to be reported.

If not specified, the default value will be the latest version of the organization model.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name uniquely identifying the resource whose details are to be returned.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNamedResourceResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The collection of Resources with the given name.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="resource" type="de:XmlEntityDetail" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getResourceDetail">
                <xs:annotation>
                    <xs:documentation>Request element for getResourceDetail operation. 

This operation returns the details of a resource identified by its GUID.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Request to retrieve a summary of the Groups, Positions, Privileges and Capabilities
          associated with the identified Resource.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="resource" type="orgdto:XmlModelEntityId" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>IDs of the resources for which details are required.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getResourceDetailResponse">
                <xs:annotation>
                    <xs:documentation>Response element for getResourceDetail operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The collection of Resources with the given name.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="resource" type="de:XmlResourceDetail" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Details of the specified resource(s).</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUndeliveredEntity">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="de:EmptyRequest"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUndeliveredEntityResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="orgdto:XmlModelEntityId"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="listAssociatedResources">
                <xs:annotation>
                    <xs:documentation>Request element for listAssociatedResources operation. 

This operation returns the resources associated with the organisaional entity identified by its GUID and major model version. If no organization model version is specified (or -1) then the organization model with the greatest majorversion value is assumed.

If a resource is associated with more than one of the specified organization model entities, it will only be listed once. If the identified entity is:

- a group, the result will also include those resources associated with any sub-groups.

- an organization unit. the result will include those resources associated with all positions within that organization unit.

- a privilege, the result will include those resources that inherit that privilege from the groups, positions and organization units to which they are associated.
            
- a capability, the result will include those resources that hold that capability directly. It will not take into account the capabilities of the positions and groups with which the resources are associated</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="orgdto:XmlOrgModelVersion">
                            <xs:sequence>
                                <xs:element name="entity-guid" type="xs:string" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>Unique IDs of the organization model entities for whom associated resources should be returned.</xs:documentation>
                                    </xs:annotation>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="soft-limit" default="0" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>Maxmimum number of resources to return. (This value will not exceed any system imposed limit.)</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="start-index" default="0" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>Start position for the return data.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="listAssociatedResourcesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for listAssociatedResources operation. 

For a group, the response also includes those resources associated with the group's  sub-groups. 

If a resource is associated with more than one of the specified organization model entities, it will only be listed once.
            
For an organization unit, the response includes those resources that hold positions in the organization unit. 

For a group, the response also includes those resources associated with the group's sub-groups</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The collection of Resources associated with the identified model entity.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="resource" type="de:XmlLdapEntity" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Details of each resource associated with the specified organization model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="listResources">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Request to list the Resources contained by the identified model entity.
          A sub-set of the possible values can be returned using the "start-index"
          and "soft-limit" attributes.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="entity" type="orgdto:XmlDynOrgEntityId"/>
                    </xs:sequence>
                    <xs:attribute name="soft-limit" default="0" type="xs:int"/>
                    <xs:attribute name="start-index" default="0" type="xs:int"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="listResourcesResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The collection of Resources associated with the identified model entity.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="resource" type="orgdto:XmlModelEntityId" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="lookupUser">
                <xs:annotation>
                    <xs:documentation>Request element for lookupUser operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Request to verify that the name Resource entity is known to Directory
                Engine.
                The request can either be by name or LDAP entry. If the request is by LDAP entry, the
                caller may supply the LDAP Alias in order to reduce the search results.
                The caller may optionally specify that the response should include detailed information
                on those users that match the critieria (the default is to only return a count of
                the users that match the criteria.</xs:documentation>
                    </xs:annotation>
                    <xs:attribute name="get-detail" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value defining whether to return the details of each matching resource.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-alias" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>LDAP alias to search against for a matching resource.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-dn" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>LDAP DN to search against for a matching resource.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="model-version" default="-1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Major version number of the organization model from which the resources' associations ()position, group, capability, etc) are to be reported.
This attribute is only applied if the attribute "get-detail" is true.

If not specified, the default value will be the latest version of the organization model.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Login name to search against for a matching resource.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="lookupUserResponse">
                <xs:annotation>
                    <xs:documentation>Response element for lookupUser operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Describes the identified Resource entity(ies).</xs:documentation>
                    </xs:annotation>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="detail" type="de:XmlEntityDetail">
                            <xs:annotation>
                                <xs:documentation>Details of each matching resource.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="user-count" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Number of resources that match the specified criteria.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="resolveResource">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Request to return a Resource from a collection contained by the identified
          model entity. If there is more than one Resource available, the given selection
          mode is used to determine which one should be selected.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="entity" type="orgdto:XmlDynOrgEntityId">
                            <xs:annotation>
                                <xs:documentation>Identifier for a participant, by either GUID or name. 

Extension of XmlOrgModelVersion, which provides the organization model version in which the participant resides.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="selection-mode" type="de:SelectionMode" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If specified will override the selection mode determined by the entity.

If not specified the selection mode will be determined by the entity, If the entity does not contain a selection mode then the default will be ANY.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="resolveResourceResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The identifier for the Resource determined by the request parameters.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="entity" type="orgdto:XmlParticipantId" minOccurs="0"/>
                    </xs:sequence>
                    <xs:attribute name="hasPushDestinations" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>True if the entity specified has any push destinations set.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="resourcesRemaining">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Requests the number of resources remaining in a collection defined by a series of
          containing organisational entities, after the identified resources have been
          accounted for. For example, if an identified Position holds 10 Resources, two of
          which are identified in the request, the result will be 8.
          </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="resource" type="xs:string" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>List of resource GUID's that have already been identified.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="container" type="orgdto:XmlParticipantId" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="resourcesRemainingResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          The number of Resources remaining in a defined collection, after an identified set
          of Resources have been accounted for.
        </xs:documentation>
                    </xs:annotation>
                    <xs:attribute name="remainder" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>The number of resources that the caller has not yet  identified.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="validateEntity">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Request to validate the given model entity identifier.
        </xs:documentation>
                    </xs:annotation>
                    <xs:complexContent>
                        <xs:extension base="orgdto:XmlDynOrgEntityId"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="validateEntityResponse">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
          Response indicating whether the given model entity identifier was valid or not.
        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="resolved-entity" type="orgdto:XmlModelEntityId" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If the given entity identifier is for a dynamic model-template entity, this value will be the GUID of the model entity to which the dynamic reference resolves.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="dynamic" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>True if the given entity identifier is for a dynamic model-template entity.
					If this value is not given, or false, the entity identifier is NOT for a dynamic model-template entity.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="hasPushDestinations" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>True if the entity specified has any push destinations set.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="valid" use="required" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>True if the entity specified is valid.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pm="http://www.tibco.com/bx/2009/management/processManagerType" targetNamespace="http://www.tibco.com/bx/2009/management/processManagerType" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="ActivityInstanceStatus">
                <xsd:annotation>
                    <xsd:documentation>Type to summarize the current status of an instance of an activity in a process.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="activityID" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
						Unique ID assigned to the activity, for example
						XPDL ID assigned by BusinessStudio's BPMN
						Process Editor.
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="activityName" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
						Optional name of the activity
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="activityState" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
						Current state of an activity instance, for
						example WAITING
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="startTime" nillable="true" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
						When the activity instance starts execution
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="completionTime" nillable="true" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
						When the activity instance finishes execution
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="deadlineExpirationTime" nillable="true" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
						A timer intermediate event can be attached to
						any activity. This field keeps track of when
						time-out would occur if the activity did not
						complete.
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="retries" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ApplicationTemplate">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="processTemplates" type="pm:ProcessTemplatesType" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the application which contains the following process templates.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="ApplicationTemplates">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="application" type="pm:ApplicationTemplate">
                        <xsd:annotation>
                            <xsd:documentation>application set containing the process templates.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="Applications">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="applicationName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) specified the applications to query.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="AttributeType">
                <xsd:annotation>
                    <xsd:documentation>Enumeration values used to tag process template attributes and process instance attributes into different categories. 

(Do not delete or re-position any of the enumeration values. If a value must be removed, simply replace it with a "dummy" value.)</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="FILTERABLE"/>
                    <xsd:enumeration value="SORTABLE"/>
                    <xsd:enumeration value="DISPLAYABLE"/>
                    <xsd:enumeration value="HALT_ONLY"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="BasicFaultType">
                <xsd:annotation>
                    <xsd:documentation>Type for all fault elements.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="reason" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reason for the exception.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="BasicProcessTemplate">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a process template.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processQName" type="pm:QualifiedProcessName">
                        <xsd:annotation>
                            <xsd:documentation>Fully qualified name of the process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="description" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Description of the process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CreateProcessInstanceOptions">
                <xsd:annotation>
                    <xsd:documentation>Provides options to control how a purge is carried out</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="priority" type="xsd:short" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) Priority value used to schedule the execution of this process instance</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DatabaseIdType">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="databaseId" type="xsd:long"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ExtendedPage">
                <xsd:complexContent>
                    <xsd:extension base="pm:Page">
                        <xsd:sequence>
                            <xsd:element name="totalCount" type="xsd:int" minOccurs="0">
                                <xsd:annotation>
                                    <xsd:documentation>total number of items returned from the query.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:element>
                            <xsd:element name="pageNumber" type="xsd:int" minOccurs="0">
                                <xsd:annotation>
                                    <xsd:documentation>page number.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:element>
                            <xsd:element name="isLastPage" type="xsd:boolean" minOccurs="0">
                                <xsd:annotation>
                                    <xsd:documentation>is last page indicator.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
            <xsd:complexType name="GeneralStatusType">
                <xsd:annotation>
                    <xsd:documentation>The status of a purge operation</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="statusMessage" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>A message indicating further information on the last purge operation</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="start" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The time the purge operation started</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="end" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The time the purge operation ended</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="details" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Any additional details for this purge</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="count" type="xsd:long" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The current number of instances executed</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="operationName" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The name of the  operation being referred to</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="status" type="pm:StatusCode"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="InstanceAttribute">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a process instance attribute.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexContent>
                    <xsd:extension base="pm:NameTypePair">
                        <xsd:sequence>
                            <xsd:element name="processQName" type="pm:QualifiedProcessName">
                                <xsd:annotation>
                                    <xsd:documentation>Fully qualified name of the parent process template.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:element>
                            <xsd:element name="viewtype" nillable="true" type="xsd:string">
                                <xsd:annotation>
                                    <xsd:documentation>View type of the attribute, as a combination of the values FILTERABLE (1), SORTABLE (2), DISPLAYABLE (3) and HALT_ONLY (4)

For example, the value "23" indicates that the attribute is SORTABLE and DISPLAYABLE, but not FILTERABLE.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
            <xsd:complexType name="MigrationPointModuleType">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration points for a module/version set.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="process" type="pm:MigrationPointProcessType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration points for this module and version.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of module.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="version" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Version number of module.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationPointProcessType">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration points for a process template.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="task" type="pm:MigrationPointTaskType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration points for this process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of process template.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationPointTaskType">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a task that is a valid migration point.</xsd:documentation>
                </xsd:annotation>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of a task that is a valid migration point for this process template.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationPointTypes">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration points. Each migration point consists of a unique set of module name, module version, process template name and task name.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="module" type="pm:MigrationPointModuleType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration points.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleModuleType">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration rules for: a module, and the module version from which migration is to take place.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="process" type="pm:MigrationRuleProcessType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration rules for this module and version.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the module from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="version" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Version number of the module from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleModuleTypeList">
                <xsd:annotation>
                    <xsd:documentation>Type to describe module-level migration rules.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="process" type="pm:MigrationRuleProcessTypeList" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration rules for this module/version set.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the module from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="version" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Version number (of the module) from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleProcessType">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration rules for a process template from which migration is to take place.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="migrate" type="pm:MigrationRuleTaskType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration rules for this process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the process template from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleProcessTypeList">
                <xsd:annotation>
                    <xsd:documentation>Type to describe process template-level migration rules.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="migrate" type="pm:MigrationRuleTaskTypeList" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration rules for this process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="name" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the process template from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleTaskType">
                <xsd:annotation>
                    <xsd:documentation>Type to describe the task from which migration is to take place, and the version number of the module to which the process instance should be migrated.</xsd:documentation>
                </xsd:annotation>
                <xsd:attribute name="description" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>(Optional) Explanation of this migration rule.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="fromTask" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the task defining the point in the process from which the process instance should be migrated. (This task must be a valid migration point.)</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="toVersion" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Version number of the module (process template) to which the process instance should be migrated.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleTaskTypeList">
                <xsd:annotation>
                    <xsd:documentation>Type to describe task-level migration rules.</xsd:documentation>
                </xsd:annotation>
                <xsd:attribute name="creationTime" use="required" type="xsd:dateTime">
                    <xsd:annotation>
                        <xsd:documentation>Date/time on which the rule was created.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="description" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>(Optional) Explanation of the migration rule.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="fromTask" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Name of the task from which migration is to take place.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="toVersion" use="required" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Version number (of the module) to which a process instance is to migrate.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleTypes">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration rules. 

Each migration rule consists of a unique set of module name, module version from which to migrate, process template name, task name from which to migrate, and module version to which to migrate.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="module" type="pm:MigrationRuleModuleType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration rules.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="MigrationRuleTypesList">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of migration rules. Each migration rule consists of unique set of module name, module version from which to migrate, process template name, task name from which to migrate, and module version to which to migrate.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="module" type="pm:MigrationRuleModuleTypeList" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>List of migration rules.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="NameTypePair">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a name/type pair.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the item.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="type" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Data type of the item.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="NameValuePair">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a name/value pair.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="value" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Value</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="OperationInfo">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a starter operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="operationName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the starter operation.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="parameters" nillable="true" type="pm:TemplateAttributes">
                        <xsd:annotation>
                            <xsd:documentation>List of parameters for this starter operation.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="Page">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a page of data.</xsd:documentation>
                </xsd:annotation>
                <xsd:choice>
                    <xsd:element name="processInstances" nillable="true" type="pm:ProcessInstances">
                        <xsd:annotation>
                            <xsd:documentation>
						List of process instances.
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="processTemplates" nillable="true" type="pm:ProcessTemplates">
                        <xsd:annotation>
                            <xsd:documentation>
						List of process templates.
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
            <xsd:complexType name="ProcessIdDBInfo">
                <xsd:annotation>
                    <xsd:documentation>Type to describe the PVM database information corresponding to a PVM ID.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processId" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Process ID</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="objectSpace" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Identifies the space (PROCESS,TASK, ...) of the process ID.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="dbId" nillable="true" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>Identifies the database ID corresponding to the process ID.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ProcessInstance">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a process instance.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processQName" type="pm:QualifiedProcessName" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Fully qualified name of the process template from which the process instance was created.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="id" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Unique ID assigned to the process instance.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="state" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Current state of the process instance - for example ACTIVE or SUSPENDED.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="startTime" nillable="true" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Date/time when the process instance first became active.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="completionTime" nillable="true" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Date/time the process instance reached one of the terminal states.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="priority" nillable="true" type="xsd:int" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Priority of the process instance, used to schedule its execution.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="waitingWorkCount" nillable="true" type="xsd:int" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Count of the number of user task instances waiting for a response from Business Resource Management (BRM).

This indirectly provides a count of the number of outstanding work items associated with the process instance.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="parentProcessID" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Unique ID of the parent process instance, in cases where the process instance was created via a sub-process call.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="userID" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>ID of the user who sent the request that results in the creation of the process instance. This ID is determined from the user/security-context.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="failedActivityName" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Name of the failed activity.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="activityFaultName" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Activity fault name.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="activityFaultData" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Activity fault data.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="customAttributes" nillable="true" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>List of user-defined attributes.</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="customAttribute" type="pm:NameValuePair" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:annotation>
                                        <xsd:documentation>Attribute definitions.</xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ProcessInstances">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of process instances.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processInstance" type="pm:ProcessInstance" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>Details of process instances.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ProcessInstancesType">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="processInstance" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ProcessTemplate">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a process template.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="basicTemplate" type="pm:BasicProcessTemplate">
                        <xsd:annotation>
                            <xsd:documentation>Basic/core attributes of this process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="state" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>State of the process template, for example ACTIVE.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="priority" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Default scheduling priority to be assigned to process instances created from this process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="creationTime" nillable="true" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Date/time when this process template was created.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="willSave" nillable="true" type="xsd:boolean" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>flag to indicate whether terminated process instances should be saved</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="saveDuration" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>duration string to indicate how long the terminated process instances should be saved</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ProcessTemplates">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of process templates.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processTemplate" type="pm:ProcessTemplate" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>Details of process templates.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="ProcessTemplatesType">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="processQName" type="pm:QualifiedProcessName"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PurgeOptions">
                <xsd:annotation>
                    <xsd:documentation>Provides options to control how a purge is carried out</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="states" type="pm:TerminalStates" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) purge those process instances with specified state(s).  If no state(s) are specified, then process instances that are in a terminal state will be purged. </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="batchSize" type="xsd:int" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) Number of process instances that should be deleted before the transaction is committed.

Default value: 100</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="runInBackground" type="xsd:boolean" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) Boolean value specifying whether the purge runs in the background. If:
- True: The purge will run in the background and the operation returns immediately. This is the default value.
- False: The operation waits for the purge to complete before returning (subject to timeouts).</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="threshold" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) Date before which process instances must have been completed, cancelled or failed for them to be purged in this operation.

If this value is omitted, all completed, cancelled and failed instances will be deleted.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="applications" type="pm:Applications" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) specified the applications for which all the process instances in the contained process templates are to be purged.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="processTemplates" type="pm:ProcessTemplatesType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) specified the tagged process templates for which the corresponding instances are to be purged.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="processInstances" type="pm:ProcessInstancesType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) specified the tagged process instances to be purged.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PurgeStatus">
                <xsd:annotation>
                    <xsd:documentation>The status of a purge operation</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="statusMessage" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>A message indicating further information on the last purge operation</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="start" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The time the purge operation started</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="end" type="xsd:dateTime" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The time the purge operation ended</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="details" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>Any additional details for this purge</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="currentInstanceCount" type="xsd:long" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The current number of instances purged</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="totalInstanceCount" type="xsd:long" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The total number of instances matched for this purge</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="purgeOperationName" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The name of the purge operation being referred to</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="status" type="pm:PurgeStatusType"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="PurgeStatusType">
                <xsd:annotation>
                    <xsd:documentation>An enumerated status indicator for the last purge operation</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="PURGE_IN_PROGRESS">
                        <xsd:annotation>
                            <xsd:documentation>A purge action is currently being executed</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="PURGE_COMPLETED">
                        <xsd:annotation>
                            <xsd:documentation>The last purge operation completed successfully</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="PURGE_STOPPED">
                        <xsd:annotation>
                            <xsd:documentation>The last purge operation was stopped manually</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="PURGE_FAILED">
                        <xsd:annotation>
                            <xsd:documentation>The last purge operation failed.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="QualifiedProcessName">
                <xsd:annotation>
                    <xsd:documentation>Type to describe the fully qualified name of a process template.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="moduleName" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the module to which the process template belongs.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="processName" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the process template.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="version" nillable="true" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>OSGi-style version number of the process template. 

(This version number is the same as that of the module.)</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="QualifiedProcessNames">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of qualified process names.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="qualifiedProcessName" type="pm:QualifiedProcessName" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>Details of qualified process name.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="QualifiedTaskName">
                <xsd:annotation>
                    <xsd:documentation>Type to describe the fully qualified name of a task.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="moduleName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the module to which the process template belongs.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="processName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the process template to which the task belongs.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="version" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>OSGi-style version number of the process template. 
(This version number is the same as that of the module.)</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="taskName" nillable="true" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the task.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="QueryApplicationsRequestType">
                <xsd:sequence>
                    <xsd:element name="applications" type="pm:Applications"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="QueryApplicationsResponseType">
                <xsd:sequence>
                    <xsd:element name="applications" type="pm:ApplicationTemplates" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="StarterOperation">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a starter operation. 

A starter operation is a way for an external (to Process Manager) application to create a process instance from a process template that has one and only one starter event, which must be a none starter event. </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processQName" type="pm:QualifiedProcessName">
                        <xsd:annotation>
                            <xsd:documentation>Fully qualified name of the process template from which the process instance is to be created.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="operation" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Name of the starter operation.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="StateModeType">
                <xsd:annotation>
                    <xsd:documentation>An enumerated indicating status mode for query on process instances</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="TERMINATED">
                        <xsd:annotation>
                            <xsd:documentation>TERMINATED states</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ACTIVE">
                        <xsd:annotation>
                            <xsd:documentation>ACTIVE states</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ACTIVE_AND_TERMINATED">
                        <xsd:annotation>
                            <xsd:documentation>ACTIVE AND TERMINATED states</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType name="StatusCode">
                <xsd:annotation>
                    <xsd:documentation>An enumerated status indicator for an operation</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="IN_PROGRESS">
                        <xsd:annotation>
                            <xsd:documentation>operation is currently being executed</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="COMPLETED">
                        <xsd:annotation>
                            <xsd:documentation>Toperation completed successfully</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FAILED">
                        <xsd:annotation>
                            <xsd:documentation>failed status code</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="TemplateAttribute">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a process template attribute.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexContent>
                    <xsd:extension base="pm:NameTypePair"/>
                </xsd:complexContent>
            </xsd:complexType>
            <xsd:complexType name="TemplateAttributes">
                <xsd:annotation>
                    <xsd:documentation>Type to describe a list of template attributes.</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="templateAttribute" type="pm:TemplateAttribute" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>Details of template attributes.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="TerminalStateType">
                <xsd:annotation>
                    <xsd:documentation>An enumerated status indicator for the last purge operation</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="COMPLETED">
                        <xsd:annotation>
                            <xsd:documentation>COMPLETED state</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="CANCELLED">
                        <xsd:annotation>
                            <xsd:documentation>CANCELLED state</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="FAULTED">
                        <xsd:annotation>
                            <xsd:documentation>FAULTED state</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="TerminalStates">
                <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                    <xsd:element name="state" type="pm:TerminalStateType"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="Void"/>
            <xsd:complexType name="bulkCancelOptions">
                <xsd:annotation>
                    <xsd:documentation>Provides options on specifying list of process instances</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="processInstances" type="pm:ProcessInstancesType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) specified the process instances to be cancelled.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="databaseIds" type="pm:DatabaseIdType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>(Optional) specified the database id(internal pvm ids) to be cancelled.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="bulkCancelProcessInstancesRequestType">
                <xsd:sequence>
                    <xsd:element name="options" type="pm:bulkCancelOptions"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="checkPurgeTerminatedProcessInstancesResponseType">
                <xsd:sequence>
                    <xsd:element name="status" type="pm:PurgeStatus"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="purgeTerminatedProcessInstancesRequestType">
                <xsd:sequence>
                    <xsd:element name="options" type="pm:PurgeOptions"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="saveTerminatedProcessInstancesRequestType">
                <xsd:sequence>
                    <xsd:element name="willSave" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>true means to save and false means not to save terminated processes</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="saveDuration" type="xsd:duration" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>the duration for which the terminated process will be saved</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="processTemplates" type="pm:ProcessTemplatesType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>specifies which process templates does the setting apply to</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="applications" type="pm:Applications" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>specifies which applications does the setting apply to</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="activityInstanceStatus" type="pm:ActivityInstanceStatus">
                <xsd:annotation>
                    <xsd:documentation>Response element for getActivityInstanceStatus operation.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="availableProcessInstanceVariables">
                <xsd:annotation>
                    <xsd:documentation>Response element for getAvailableProcessInstanceVariables operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="variable" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>Variable definitions.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:complexContent>
                                    <xsd:extension base="pm:NameValuePair">
                                        <xsd:sequence>
                                            <xsd:element name="Type" type="xsd:string">
                                                <xsd:annotation>
                                                    <xsd:documentation>Data type of the variable.</xsd:documentation>
                                                </xsd:annotation>
                                            </xsd:element>
                                        </xsd:sequence>
                                    </xsd:extension>
                                </xsd:complexContent>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="basicProcessTemplates">
                <xsd:annotation>
                    <xsd:documentation>Response element for listProcessTemplates operation, returning a list of process templates.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="basicProcessTemplate" type="pm:BasicProcessTemplate" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>Basic process template descriptions.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="bulkCancelProcessInstancesRequest" type="pm:bulkCancelProcessInstancesRequestType"/>
            <xsd:element name="bulkCancelProcessInstancesResponse" type="pm:GeneralStatusType"/>
            <xsd:element name="checkPurgeTerminatedProcessInstancesRequest" type="pm:Void"/>
            <xsd:element name="checkPurgeTerminatedProcessInstancesResponse" type="pm:PurgeStatus"/>
            <xsd:element name="createProcessInstanceInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for createProcessInstance operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processQName" type="pm:QualifiedProcessName">
                            <xsd:annotation>
                                <xsd:documentation>Qualified name of the process template from which a process instance is to be created.

A starter operation is derived from a process template's none starter event. This element names the module to which the process template belongs.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="operationName" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Name of the starter operation used to create the process instance.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="options" type="pm:CreateProcessInstanceOptions">
                            <xsd:annotation>
                                <xsd:documentation>create options</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="parameterMap">
                            <xsd:annotation>
                                <xsd:documentation>Details of the parameters associated with this starter operation.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="parameter" type="pm:NameValuePair" minOccurs="0" maxOccurs="unbounded">
                                        <xsd:annotation>
                                            <xsd:documentation>Details of parameters (as name/value pairs).</xsd:documentation>
                                        </xsd:annotation>
                                    </xsd:element>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getActivityInstanceStatusInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for getActivityInstanceStatus operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processID" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Unique ID of the process instance.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="activityName" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Name of the activity in this process instance.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getAvailableProcessInstanceVariablesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for getAvailableProcessInstanceVariables operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processID" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Unique ID of the process instance.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="variableName" type="xsd:string" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>(Optional) Name of the variable for which a value should be returned.

If this parameter is omitted, data is returned for all variables available to the specified process.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getParameterValueInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for getParameterValue operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processID" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Unique ID of the process instance.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="parameterName" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Name of the parameter whose value is to be retrieved.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getParameterValueOutput">
                <xsd:annotation>
                    <xsd:documentation>Response element for getParameterValue operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="parameterValue" type="xsd:anyType">
                            <xsd:annotation>
                                <xsd:documentation>Parameter value.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getProcessInstanceStatusOutput" type="pm:ProcessInstance">
                <xsd:annotation>
                    <xsd:documentation>Response element for getProcessInstanceStatus operation, to summarize the current status of one process instance. 

Note that:

-  getProcessInstanceStatus is a convenience operation. It is possible to obtain the same data by calling queryProcessInstances with more complex inputs. 

- The ProcessInstance type is re-used. Some elements (namely, customAttributes) would never contain any data when returned in a getProcessInstanceStatus call.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="illegalArgumentFault" type="pm:BasicFaultType">
                <xsd:annotation>
                    <xsd:documentation>Fault element for illegal or missing input argument(s) exception.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="illegalStateFault" type="pm:BasicFaultType">
                <xsd:annotation>
                    <xsd:documentation>Fault element for illegal state exception.

This exception is returned when the requested operation cannot be performed because the target is not in the correct state.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="instanceAttributes">
                <xsd:annotation>
                    <xsd:documentation>Response element for the listProcessInstanceAttributes and listSetofProcessInstanceAttributes operations, returning a list of process instance attributes.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="instanceAttribute" type="pm:InstanceAttribute" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>Details of the process instance attributes associated with the process template(s) specified in the request.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="isSet" type="xsd:boolean">
                <xsd:annotation>
                    <xsd:documentation>Element (mostly response) for many operations that return a true/false indication.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="itemCount" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Element (mostly response) for many operations that return a count of certain items.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="listProcessInstanceAttributesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for listProcessInstanceAttributes operation.

Attributes include process parameters, process data fields and pre-defined/system variables. 

These attributes can also be used in process instance queries - see queryProcessInstances.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processQName" type="pm:QualifiedProcessName">
                            <xsd:annotation>
                                <xsd:documentation>Criteria identifying the process template(s) for which process instance attributes are to be listed.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="attributeType" type="pm:AttributeType">
                            <xsd:annotation>
                                <xsd:documentation>(Optional) Enumerated value which, if specified, filters the result set to include only those attributes which belong to the specified type (FILTERABLE, SORTABLE, DISPLAYABLE or HALT_ONLY).</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="listProcessTemplateAttributesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for listProcessTemplateAttributes operation.

Process template attributes, which are pre-defined variables and are the same for all process templates, can be used in process template queries - see the queryProcessTemplates operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="attributeType" type="pm:AttributeType">
                            <xsd:annotation>
                                <xsd:documentation>(Optional) Enumerated value which, if specified, filters the result set to include only those attributes which belong to the specified type (FILTERABLE, SORTABLE or DISPLAYABLE).</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="listSetofProcessInstanceAttributesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for listSetofProcessInstanceAttributes operation.

Attributes include process parameters, process data fields and pre-defined/system variables. 

These attributes can also be used in process instance queries - see queryProcessInstances.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="qualifiedProcessNames" type="pm:QualifiedProcessNames">
                            <xsd:annotation>
                                <xsd:documentation>List of qualified process names.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="attributeType" type="pm:AttributeType">
                            <xsd:annotation>
                                <xsd:documentation>(Optional) Enumerated value which, if specified, filters the result set to include only those attributes which belong to the specified type (FILTERABLE, SORTABLE, DISPLAYABLE or HALT_ONLY).</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="migrationPoints" type="pm:MigrationPointTypes">
                <xsd:annotation>
                    <xsd:documentation>Response element for getMigrationPoints operation.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="migrationRuleList" type="pm:MigrationRuleTypesList">
                <xsd:annotation>
                    <xsd:documentation>Response element for listMigrationRules operation.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="migrationRules" type="pm:MigrationRuleTypes">
                <xsd:annotation>
                    <xsd:documentation>Request element for setMigrationRules and unsetMigrationRules operations.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="operationFailedFault" type="pm:BasicFaultType">
                <xsd:annotation>
                    <xsd:documentation>Fault element for various exceptions.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="operationInfo" type="pm:OperationInfo">
                <xsd:annotation>
                    <xsd:documentation>Response element for getStarterOperationInfo operation.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="page" type="pm:ExtendedPage">
                <xsd:annotation>
                    <xsd:documentation>Response element for queryFirstPage, queryPreviousPage, queryNextPage and queryLastPage operations.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="pagingID" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Request element for many operations supporting paging of query result sets. 

A pagingID identifies a particular set of data that can be paged (like a database cursor).</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="processID" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Unique ID assigned to a process instance.

This element is the request or response element for many operations.

</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="processIdDBInfo" type="pm:ProcessIdDBInfo">
                <xsd:annotation>
                    <xsd:documentation>PVM database information corresponding to a process (PVM) ID.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="processInstanceSummary">
                <xsd:annotation>
                    <xsd:documentation>Response element for getProcessInstanceSummary operation, to capture the summary information about a process instance. 

This operation is mainly used for debugging purposes.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="summary" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Summary of all information relevant to the process instance (as a formatted string), including a snapshot of all process variables' values.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="processInstances" type="pm:ProcessInstances">
                <xsd:annotation>
                    <xsd:documentation>Response element for listProcessInstances, queryProcessInstances and queryProcessInstancesAlt operations.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="processTemplates" type="pm:ProcessTemplates">
                <xsd:annotation>
                    <xsd:documentation>Response element for queryProcessTemplates and queryProcessTemplatesAlt operations.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="purgeTerminatedProcessInstancesRequest" type="pm:purgeTerminatedProcessInstancesRequestType"/>
            <xsd:element name="purgeTerminatedProcessInstancesResponse" type="pm:PurgeStatus"/>
            <xsd:element name="qualifiedProcessName" type="pm:QualifiedProcessName">
                <xsd:annotation>
                    <xsd:documentation>Element (mostly request) for many operations that require the fully qualified name of a process template.

Wildcard characters can be used when specifying moduleName or processName, as follows:

- An asterisk '*' can be used to match zero or more characters. 
- A question mark '?' can be used to match any single character.

- A preceding backslash can be used to escape a wild-card character (i.e. to match a '*' or '?' character).
- Using double backslash escapes the escape character (i.e. to match the backslash character).

version must either specify an exact version, or can be left blank to return information about all versions.

The response message will then include data for all process templates whose fully qualified names match the defined input criteria.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="qualifiedProcessNames" type="pm:QualifiedProcessNames">
                <xsd:annotation>
                    <xsd:documentation>qualified process names</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="qualifiedTaskName" type="pm:QualifiedTaskName">
                <xsd:annotation>
                    <xsd:documentation>Request element for isSetMigrationRule operation.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="queryApplicationsRequest" type="pm:QueryApplicationsRequestType"/>
            <xsd:element name="queryApplicationsResponse" type="pm:QueryApplicationsResponseType"/>
            <xsd:element name="queryProcessInstancesAltInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for queryProcessInstancesAlt operation. 

This operation works the same way as queryProcessInstances, except the query string is broken into multiple parts. 

See also: listProcessInstanceAttributes operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="select" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Attributes to be selected for each process instance in the result set. The "FROM process" clause should be included.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="where" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Filter criteria to be used in the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="orderBy" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Sorting/grouping criteria to be used in the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="statusMode" type="pm:StateModeType" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>status Mode - ACTIVE only, COMPLETED only, or ACTIVE and COMPLETED</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pageSize" type="xsd:int">
                            <xsd:annotation>
                                <xsd:documentation>Page size to be used to return the list of process instances. One of the following values:

 0:  Return the entire result set in a single, non-paged list.

-1:  Return the result set in a paged list, using the default page size.

&gt;0: return the result set in a paged list, with the specified number of items on each page.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="attributeMap" type="pm:TemplateAttributes">
                            <xsd:annotation>
                                <xsd:documentation>(Optional) Specification of the types of user-defined attributes to be included in the query.

Specifying this parameter will make the query more efficient.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryProcessInstancesCountAltInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for queryProcessInstancesCountAlt operation. </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="queryString" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Request element for queryProcessInstanceCount and queryProcessTemplateCount operations, which require a query string (in SQL syntax) as their input.

The query can be either a full SQL query string, or just the WHERE clause. If a full query string is used, the "FROM process" clause should be included.

(The underlying code knows whether to count process templates or process instances, depending on the calling operation.)</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="statusMode" type="pm:StateModeType" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>status Mode - ACTIVE only, COMPLETED only, or ACTIVE and COMPLETED</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryProcessInstancesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for queryProcessInstances, queryProcessInstancesAlt, queryHaltedProcessInstances operations. 

See also: listProcessInstanceAttributes operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="query" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Full (SQL syntax) query string. The "FROM process" clause should be included in the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="statusMode" type="pm:StateModeType" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>status Mode - ACTIVE only, COMPLETED only, or ACTIVE and COMPLETED</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pageSize" type="xsd:int">
                            <xsd:annotation>
                                <xsd:documentation>Page size to be used to return the list of process instances. One of the following values:

 0:  Return the entire result set in a single, non-paged list.

-1:  Return the result set in a paged list, using the default page size.

positive integer: return the result set in a paged list, with the specified number of items on each page.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="attributeMap" type="pm:TemplateAttributes">
                            <xsd:annotation>
                                <xsd:documentation>(Optional) Specification of the types of user-defined attributes to be included in the query.

Specifying this parameter will make the query more efficient.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryProcessInstancesOutput">
                <xsd:annotation>
                    <xsd:documentation>Response element for queryProcessInstances, queryProcessInstancesAlt, queryHaltedProcessInstances operations.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processInstances" type="pm:ProcessInstances">
                            <xsd:annotation>
                                <xsd:documentation>Details of process instances that match the query specified in the request. 

This will be either the full list or the first page of the list, depending on the pageSize value specified in the request.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="totalCount" type="xsd:int" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>total number of items returned from the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pageNumber" type="xsd:int" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>page number.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="isLastPage" type="xsd:boolean" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>is last page indicator.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pagingID" type="xsd:int" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>Paging ID which can be used to get individual pages of the (paged) list.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryProcessTemplatesAltInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for queryProcessTemplatesAlt operation. Works the same way as queryProcessTemplates, except the query string is broken into multiple parts. See also listProcessTemplateAttributes.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="select" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Data fields to be selected for each process template in the result set. The "FROM process" clause should be included.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="where" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Filter criteria to be used in the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="orderBy" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Sorting/grouping criteria to be used in the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pageSize" type="xsd:int">
                            <xsd:annotation>
                                <xsd:documentation>Page size to be used to return the list of process templates. One of the following values:

 0:  Return the entire result set in a single, non-paged list.

-1:  Return the result set in a paged list, using the default page size.

&gt;0: return the result set in a paged list, with the specified number of items on each page.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryProcessTemplatesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for queryProcessTemplates operation. 

See also: listProcessTemplateAttributes operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="query" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Full (SQL syntax) query string. The "FROM process" clause should be included in the query.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pageSize" type="xsd:int">
                            <xsd:annotation>
                                <xsd:documentation>Page size to be used to return the list of process templates. One of the following values:

 0:  Return the entire result set in a single, non-paged list.

-1:  Return the result set in a paged list, using the default page size.

&gt;0: return the result set in a paged list, with the specified number of items on each page.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryProcessTemplatesOutput">
                <xsd:annotation>
                    <xsd:documentation>Response element for queryProcessTemplates and queryProcessTemplatesAlt operations.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processTemplates" type="pm:ProcessTemplates">
                            <xsd:annotation>
                                <xsd:documentation>Details of process templates that match the query specified in the request. 

This will be either the full list or the first page of the list, depending on the pageSize value specified in the request.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="pagingID" type="xsd:int" minOccurs="0">
                            <xsd:annotation>
                                <xsd:documentation>Paging ID which can be used to get individual pages of the (paged) list.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="queryString" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Request element for queryProcessInstanceCount and queryProcessTemplateCount operations, which require a query string (in SQL syntax) as their input.

The query can be either a full SQL query string, or just the WHERE clause. If a full query string is used, the "FROM process" clause should be included.

(The underlying code knows whether to count process templates or process instances, depending on the calling operation.)</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="saveTerminatedProcessInstancesRequest" type="pm:saveTerminatedProcessInstancesRequestType"/>
            <xsd:element name="saveTerminatedProcessInstancesResponse" type="pm:PurgeStatus"/>
            <xsd:element name="setAvailableProcessInstanceVariablesInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for setAvailableProcessInstanceVariables operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processID" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Unique ID of the process instance for which variable values are to be set.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="variableMap">
                            <xsd:annotation>
                                <xsd:documentation>Details of the variable values to be set.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="variable" type="pm:NameValuePair" maxOccurs="unbounded">
                                        <xsd:annotation>
                                            <xsd:documentation>Variable settings (as name/value pairs).</xsd:documentation>
                                        </xsd:annotation>
                                    </xsd:element>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setDeadlineExpirationInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for setDeadlineExpiration operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="activityID" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Unique ID of the activity for which the deadline expiration is to be set.

(For example, the XPDL ID assigned by TIBCO Business Studio's Process Editor.)</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="expirationTime" type="xsd:dateTime">
                            <xsd:annotation>
                                <xsd:documentation>Expiration date/time for the specified activity.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="setPriorityInput">
                <xsd:annotation>
                    <xsd:documentation>Request element for setPriority operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="processID" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>Unique ID of the process instance for which the priority is to be set.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="priority" type="xsd:short">
                            <xsd:annotation>
                                <xsd:documentation>Priority value used to schedule the execution of this process instance.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="starterOperation" type="pm:StarterOperation">
                <xsd:annotation>
                    <xsd:documentation>Request element for any operation, such as getStarterOperationInfo, that needs starter operation information</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="starterOperations">
                <xsd:annotation>
                    <xsd:documentation>Response element for listStarterOperations operation.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="starterOperation" type="pm:StarterOperation" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>Details of all defined starter operations.</xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="stopPurgeTerminatedProcessInstancesRequest" type="pm:Void"/>
            <xsd:element name="stopPurgeTerminatedProcessInstancesResponse" type="pm:PurgeStatus"/>
            <xsd:element name="success" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Element (mostly response) for many operations that return a success indication.

This is a work-around so that WSDL 1.1 allows fault message(s) to be declared and thrown.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="templateAttributes" type="pm:TemplateAttributes">
                <xsd:annotation>
                    <xsd:documentation>Response element for listProcessTemplateAttributes operation, returning a list of process template attributes</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="test" type="xsd:string"/>
        </xsd:schema>
        <xs:schema xmlns="http://api.ec.n2.tibco.com" xmlns:base="http://base.api.ec.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://api.ec.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://base.api.ec.n2.tibco.com"/>
            <xs:complexType name="attributesResponseObject">
                <xs:sequence>
                    <xs:element ref="base:AttributeDefinition" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="batchEventObject">
                <xs:sequence>
                    <xs:element ref="base:EventBatch"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="checkPurgeAuditRequestObject">
                <xs:sequence>
                    <xs:element name="options" type="base:PurgeOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="checkPurgeAuditResponseObject">
                <xs:sequence>
                    <xs:element name="status" type="base:PurgeStatus"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="doPurgeAuditRequestObject">
                <xs:sequence>
                    <xs:element name="options" type="base:PurgeOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="doPurgeAuditResponseObject">
                <xs:sequence>
                    <xs:element name="status" type="base:PurgeStatus"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="eventObject">
                <xs:sequence>
                    <xs:element ref="base:Event"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="eventResponseObject">
                <xs:sequence>
                    <xs:element name="id" type="xs:long"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="executeActionRequestObject">
                <xs:sequence>
                    <xs:element name="action" type="base:Action"/>
                    <xs:element name="options" type="base:ActionOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="executeActionResponseObject">
                <xs:sequence>
                    <xs:element ref="base:ActionResult"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="executeQueryObject">
                <xs:sequence>
                    <xs:element ref="base:Query"/>
                    <xs:element ref="base:QueryOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="executeRegisteredQueryObject">
                <xs:sequence>
                    <xs:element ref="base:QueryIdentifier"/>
                    <xs:element ref="base:QueryOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="genericQueryResponseObject">
                <xs:sequence>
                    <xs:element ref="base:GenericResult"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getAllAttributesObject">
                <xs:sequence>
                    <xs:element ref="base:GetAttributeOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getAttributesObject">
                <xs:sequence>
                    <xs:element name="componentId" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>ID of the component for which attributes should be returned.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="base:GetAttributeOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getCaseAuditObject">
                <xs:sequence>
                    <xs:element ref="base:Case"/>
                    <xs:element ref="base:CaseAuditReportOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getCaseAuditResponseObject">
                <xs:sequence>
                    <xs:element ref="base:CaseAudit"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getComponentsObject"/>
            <xs:complexType name="getComponentsResponseObject">
                <xs:sequence>
                    <xs:element ref="base:Component" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getConfigurationRequestObject">
                <xs:sequence>
                    <xs:element name="area" type="base:ConfigurationArea"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getConfigurationResponseObject">
                <xs:sequence>
                    <xs:element name="configuration" type="base:Configuration"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getProcessInstanceAuditObject">
                <xs:sequence>
                    <xs:element ref="base:ProcessInstanceReference"/>
                    <xs:element ref="base:ProcessInstanceAuditReportOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getProcessInstanceAuditResponseObject">
                <xs:sequence>
                    <xs:element ref="base:ProcessInstanceAudit"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getWorkItemAuditObject">
                <xs:sequence>
                    <xs:element ref="base:WorkItemReference"/>
                    <xs:element ref="base:WorkItemAuditReportOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getWorkItemAuditResponseObject">
                <xs:sequence>
                    <xs:element ref="base:WorkItemAudit"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="isQueryRegisteredObject">
                <xs:sequence>
                    <xs:element ref="base:QueryIdentifier"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="lookupQueryByTagObject">
                <xs:sequence>
                    <xs:element name="tag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>String identifier for the query to be looked up.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="lookupQueryByTagResponseObject">
                <xs:sequence>
                    <xs:element ref="base:QueryInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="queryRegisteredResponseObject">
                <xs:sequence>
                    <xs:element name="result" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value specifying whether the query is registered with Event Collector.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="queryResponseObject">
                <xs:sequence>
                    <xs:element ref="base:Result"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerAttributesObject">
                <xs:sequence>
                    <xs:element name="componentId" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Specify the id of the already-registered component against which you are registering the attributes</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="base:AttributeDefinition" maxOccurs="unbounded"/>
                    <xs:element ref="base:RegisterAttributeOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerAttributesResponseObject">
                <xs:sequence>
                    <xs:element ref="base:AttributeDefinition" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerComponentObject">
                <xs:sequence>
                    <xs:element ref="base:Component"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerComponentResponseObject">
                <xs:sequence>
                    <xs:element ref="base:Component"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerEnvironmentObject">
                <xs:sequence>
                    <xs:element ref="base:Environment"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerEnvironmentResponseObject">
                <xs:sequence>
                    <xs:element ref="base:Environment"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerQueryObject">
                <xs:sequence>
                    <xs:element name="tag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>String identifier for this query.

The string must be unique (i.e. not already used by another registered query on the system).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="base:Query"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="registerQueryResponseObject">
                <xs:sequence>
                    <xs:element ref="base:QueryIdentifier"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestGenericMeasureObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="measureType" type="xs:string"/>
                    <xs:element name="id" type="base:BasicMeasureId" maxOccurs="unbounded"/>
                    <xs:element name="duration" type="base:MeasureDuration"/>
                    <xs:element name="options" type="base:MeasureOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestGenericMeasureResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="measure" type="base:Measure" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestMeasureObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="measureType" type="base:MeasureType"/>
                    <xs:element name="id" type="base:MeasureId" maxOccurs="unbounded"/>
                    <xs:element name="duration" type="base:MeasureDuration"/>
                    <xs:element name="options" type="base:MeasureOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestMeasureResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="measure" type="base:Measure" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestProcessDurationMeasureObject">
                <xs:annotation>
                    <xs:documentation/>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="id" type="base:ProcessTemplateId" maxOccurs="unbounded"/>
                    <xs:element name="duration" type="base:MeasureDuration"/>
                    <xs:element name="options" type="base:MeasureOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestProcessDurationMeasureResponseObject">
                <xs:sequence>
                    <xs:element name="measure" type="base:ProcessDurationMeasure" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestProcessTemplateMeasureObject">
                <xs:sequence>
                    <xs:element name="id" type="base:ProcessTemplateId" maxOccurs="unbounded"/>
                    <xs:element name="duration" type="base:MeasureDuration"/>
                    <xs:element name="options" type="base:MeasureOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestProcessTemplateMeasureResponseObject">
                <xs:sequence>
                    <xs:element name="measure" type="base:ProcessTemplateMeasure" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestWorkItemPerformanceForResourceObject">
                <xs:sequence>
                    <xs:element name="id" type="base:ResourceId" maxOccurs="unbounded"/>
                    <xs:element name="duration" type="base:MeasureDuration"/>
                    <xs:element name="options" type="base:MeasureOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestWorkItemPerformanceForResourceResponseObject">
                <xs:sequence>
                    <xs:element name="measure" type="base:WorkItemMeasure" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestWorkItemPerformanceForTemplateObject">
                <xs:sequence>
                    <xs:element name="id" type="base:ProcessTemplateId" maxOccurs="unbounded"/>
                    <xs:element name="duration" type="base:MeasureDuration"/>
                    <xs:element name="options" type="base:MeasureOptions"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="requestWorkItemPerformanceForTemplateResponseObject">
                <xs:sequence>
                    <xs:element name="measure" type="base:WorkItemMeasure" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="setConfigurationRequestObject">
                <xs:sequence>
                    <xs:element name="area" type="base:ConfigurationArea"/>
                    <xs:element name="configuration" type="base:Configuration"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="setConfigurationResponseObject">
                <xs:sequence>
                    <xs:element ref="base:ConfigurationUpdateDetails"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="stopPurgeAuditRequestObject">
                <xs:sequence>
                    <xs:element name="options" type="base:PurgeOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="stopPurgeAuditResponseObject">
                <xs:sequence>
                    <xs:element name="status" type="base:PurgeStatus"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="unRegisterQueryObject">
                <xs:sequence>
                    <xs:element ref="base:QueryIdentifier"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="unRegisterQueryResponseObject"/>
            <xs:element name="batchEventRequest" type="ns4:batchEventObject">
                <xs:annotation>
                    <xs:documentation>Request element for batchEvent operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="checkPurgeAuditRequest" type="ns4:checkPurgeAuditRequestObject">
                <xs:annotation>
                    <xs:documentation>Request element for the checkPurgeAudit operation. This request takes no parameters.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="checkPurgeAuditResponse" type="ns4:checkPurgeAuditResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for the checkPurgeAudit operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="doPurgeAuditRequest" type="ns4:doPurgeAuditRequestObject">
                <xs:annotation>
                    <xs:documentation>Request element for the doPurgeAudit operation. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="doPurgeAuditResponse" type="ns4:doPurgeAuditResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for the doPurgeAudit operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="eventRequest" type="ns4:eventObject">
                <xs:annotation>
                    <xs:documentation>Request element for event and errorEvent operations</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="eventResponse" type="ns4:eventResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for event operations</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="executeActionRequest" type="ns4:executeActionRequestObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="executeActionResponse" type="ns4:executeActionResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="executeGenericQueryRequest" type="ns4:executeQueryObject">
                <xs:annotation>
                    <xs:documentation>Request element for executeGenericQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="executeGenericQueryResponse" type="ns4:genericQueryResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for executeGenericQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="executeRegisteredGenericQueryRequest" type="ns4:executeRegisteredQueryObject">
                <xs:annotation>
                    <xs:documentation>Request element for executeRegisteredGenericQuery operation.

The specified QueryIdentifier can contain either a guid or a tag to identify the query. A guid is recommended for better performance.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="executeRegisteredGenericQueryResponse" type="ns4:genericQueryResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for executeRegisteredGenericQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getAllAttributesRequest" type="ns4:getAllAttributesObject">
                <xs:annotation>
                    <xs:documentation>Request element for getAllAttributes operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getAllAttributesResponse" type="ns4:attributesResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for getAllAttributes operation.

The list of attributes returned may contain different versions of attributes - each version will be identifieed by a unique ID.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getAttributesRequest" type="ns4:getAttributesObject">
                <xs:annotation>
                    <xs:documentation>Request element for getAttributes operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getAttributesResponse" type="ns4:attributesResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for getAttributes operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getCaseAuditRequest" type="ns4:getCaseAuditObject">
                <xs:annotation>
                    <xs:documentation>Request element for getCaseAudit operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getCaseAuditResponse" type="ns4:getCaseAuditResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for getCaseAudit operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getComponentsRequest" type="ns4:getComponentsObject">
                <xs:annotation>
                    <xs:documentation>Request element for getComponent operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getComponentsResponse" type="ns4:getComponentsResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for getComponents operation.

(Due to versioning multiple components can be returned with similar details and duplicate attribute definitions.)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getConfigurationRequest" type="ns4:getConfigurationRequestObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getConfigurationResponse" type="ns4:getConfigurationResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getProcessInstanceAuditRequest" type="ns4:getProcessInstanceAuditObject">
                <xs:annotation>
                    <xs:documentation>Request element for getProcessInstanceAudit operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getProcessInstanceAuditResponse" type="ns4:getProcessInstanceAuditResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for getProcessInstanceAudit operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getWorkItemAuditRequest" type="ns4:getWorkItemAuditObject">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkItemAudit operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getWorkItemAuditResponse" type="ns4:getWorkItemAuditResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for getWorkItemAudit operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="isQueryRegisteredRequest" type="ns4:isQueryRegisteredObject">
                <xs:annotation>
                    <xs:documentation>Request element for isQueryRegistered operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="isQueryRegisteredResponse" type="ns4:queryRegisteredResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for isQueryRegistered operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="lookupQueryByTagRequest" type="ns4:lookupQueryByTagObject">
                <xs:annotation>
                    <xs:documentation>Request element for lookupQueryByTag operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="lookupQueryByTagResponse" type="ns4:lookupQueryByTagResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for lookupQueryByTag operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerAttributesRequest" type="ns4:registerAttributesObject">
                <xs:annotation>
                    <xs:documentation>Request element for registerAttributes operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerAttributesResponse" type="ns4:registerAttributesResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for registerAttributes operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerComponentRequest" type="ns4:registerComponentObject">
                <xs:annotation>
                    <xs:documentation>Request element for registerComponent operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerComponentResponse" type="ns4:registerComponentResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for registerComponent operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerEnvironmentRequest" type="ns4:registerEnvironmentObject">
                <xs:annotation>
                    <xs:documentation>Request element for registerEnvironment operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerEnvironmentResponse" type="ns4:registerEnvironmentResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for registerEnvironment operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerQueryRequest" type="ns4:registerQueryObject">
                <xs:annotation>
                    <xs:documentation>Request element for registerQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="registerQueryResponse" type="ns4:registerQueryResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for registerQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestGenericMeasureRequest" type="ns4:requestGenericMeasureObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestGenericMeasureResponse" type="ns4:requestGenericMeasureResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestMeasureRequest" type="ns4:requestMeasureObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestMeasureResponse" type="ns4:requestMeasureResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestProcessDurationMeasureRequest" type="ns4:requestProcessDurationMeasureObject">
                <xs:annotation>
                    <xs:documentation>Request element for requestProcessDurationMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestProcessDurationMeasureResponse" type="ns4:requestProcessDurationMeasureResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for requestProcessDurationMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestProcessTemplateMeasureRequest" type="ns4:requestProcessTemplateMeasureObject">
                <xs:annotation>
                    <xs:documentation>Request element for requestProcessTemplateMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestProcessTemplateMeasureResponse" type="ns4:requestProcessTemplateMeasureResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for requestProcessTemplateMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestWorkItemPerformanceForResourceRequest" type="ns4:requestWorkItemPerformanceForResourceObject">
                <xs:annotation>
                    <xs:documentation>Request element for requestWorkItemPerformanceForResourceMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestWorkItemPerformanceForResourceResponse" type="ns4:requestWorkItemPerformanceForResourceResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for requestWorkItemPerformanceForResourceMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestWorkItemPerformanceForTemplateRequest" type="ns4:requestWorkItemPerformanceForTemplateObject">
                <xs:annotation>
                    <xs:documentation>Request element for requestWorkItemPerformanceForTemplateMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestWorkItemPerformanceForTemplateResponse" type="ns4:requestWorkItemPerformanceForTemplateResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for requestWorkItemPerformanceForTemplateMeasure operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="setConfigurationRequest" type="ns4:setConfigurationRequestObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="setConfigurationResponse" type="ns4:setConfigurationResponseObject">
                <xs:annotation>
                    <xs:documentation>**PRIVATE API - Reserved for internal use**</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="stopPurgeAuditRequest" type="ns4:stopPurgeAuditRequestObject">
                <xs:annotation>
                    <xs:documentation>Request element for the stopPurgeAudit operation. This request takes no parameters.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="stopPurgeAuditResponse" type="ns4:stopPurgeAuditResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for the stopPurgeAudit operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="unRegisterQueryRequest" type="ns4:unRegisterQueryObject">
                <xs:annotation>
                    <xs:documentation>Request element for unRegisterQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="unRegisterQueryResponse" type="ns4:unRegisterQueryResponseObject">
                <xs:annotation>
                    <xs:documentation>Response element for unRegisterQuery operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://orgmodel.api.de.bpm.tibco.com" xmlns:de="http://base.api.de.bpm.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:channel="http://channeltype.common.n2.tibco.com" targetNamespace="http://orgmodel.api.de.bpm.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://api.organisation.common.n2.tibco.com"/>
            <xs:import namespace="http://base.api.de.bpm.tibco.com"/>
            <xs:import namespace="http://channeltype.common.n2.tibco.com"/>
            <xs:complexType name="XmlPushDestinationList">
                <xs:annotation>
                    <xs:documentation>Identifies an organization model entity and and the push destinations that it currently holds.
      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlModelEntityId">
                        <xs:sequence>
                            <xs:element ref="ns7:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Definition of a push destination. When using these XML elements to set a push destination, if both the "desc-guid" attribute and "value" elements are specified, the "value" elements will be ignored. The value elements are used to pass the values of the push destination. If the push destination:

- retrieves its value from an LDAP attribute (via a desc-guid parameter descriptor) it can hold multiple values, so the value element can occur several times.

- does not take its value from an LDAP attribute, it can hold only one value.

If multiple values are given when setting the push destination, only the first value is recorded.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlUpdatePushDestinations">
                <xs:annotation>
                    <xs:documentation>Modifies the push destination for an identified entity.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlModelEntityId">
                        <xs:sequence>
                            <xs:element name="set-destination" type="de:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Assigns a new, or updates an existing, push destination to the identified entity.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="remove-destination" type="de:XmlPushDestinationId" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Removes the identified push destination from the identified entity. If no such push destination exists, no action is taken.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:element name="XmlPushDestination">
                <xs:annotation>
                    <xs:documentation>Definition of a push destination. When using these XML elements to set a push destination, if both the "desc-guid" attribute and "value" elements are specified, the "value" elements will be ignored. The value elements are used to pass the values of the push destination. If the push destination:

- retrieves its value from an LDAP attribute (via a desc-guid parameter descriptor) it can hold multiple values, so the value element can occur several times.

- does not take its value from an LDAP attribute, it can hold only one value.

If multiple values are given when setting the push destination, only the first value is recorded.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="value" type="xs:string" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Value to be used for this push destination. 

For a:

- setPushDestinations operation, this value is only used if no desc-guid attribute is supplied.

- getPushDestinations operation, this value is the current value of the desc-guid attribute.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                    <xs:attribute name="channel-id" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Unique ID of the channel associated with this push destination.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="channel-type" use="required" type="channel:ChannelType">
                        <xs:annotation>
                            <xs:documentation>Enumerated type defining the presentation technology used by the channel associated with this push destination.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="desc-guid" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Unique ID of a prameter descriptor whose value should be used for the push destination. The parameter descriptor must be assigned to the organization model entity for whom the push destination is being set.

 If a value is assigned to both this attribute and the "value" element below, the value of this element will be used.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="enabled" use="required" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value indicating whether this push destination is currently enabled (TRUE) or not (FALSE).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Unique name of this push destination.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCalendarReferences" type="orgdto:XmlModelEntityId">
                <xs:annotation>
                    <xs:documentation>Request to obtain the calendar references for the identified model entity. The response is an ordered collection of calendar references obtained by navigating the organization model hierarchy to which the identified model entity belongs. Each entry identifies the organization model entity that holds the calendar reference.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getCalendarReferencesResponse">
                <xs:annotation>
                    <xs:documentation>Response element returning the calendar references for the identified model entity. The result is an ordered collection of calendar references obtained by navigating the organization model hierarchy to which the identified model entity belongs. Each entry identifies the organization model entity that holds the calendar reference.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="calendar" type="orgdto:XmlCalendarRef" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgModel">
                <xs:annotation>
                    <xs:documentation>Requests the details of the entities that form the organzational model identified by the given major version.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="include-calendar-alias" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Specifies whether the calendar aliases assigned to positions, groups, organizaiton units, and organizations should be included in the response. For performance, it may be preferable not to include this information.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="include-candidate-queries" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Specifies whether the candidate queries assigned to positions and groups should be included in the response. For performance, it may be preferable not to include this information.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="include-ext-points" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Specifies whether the extension point and model template configurations should be included in the response. For performance, it may be preferable not to include this information.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="include-resource-counts" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Specifies whether the number of resources assigned to positions, groups and capabilities should be included in the response. For performance, it may be preferable not to include this information.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="model-version" default="-1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Specifies the major organization model version from which entities are to be returned. A value of -1 returns entities from the highest major organization model version.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgModelEntity">
                <xs:annotation>
                    <xs:documentation>Requests the details of the model entities identified by the given major version and their GUID.
			If the identified entity has associations with other entities (e.g. positions associated with an org-unit), the GUID of those entities will be included in the response.
			This allows details of those entities to be retrieved.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="guid" type="xs:string" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>The collection of GUIDs that uniquely identify the entities to be retrieved.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="model-version" default="-1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Specifies the major organization model version from which entities are to be returned. A value of -1 returns entities from the highest major organization model version.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgModelEntityResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getOrgModelEntity operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="capability" type="de:XmlCapability" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="group" type="de:XmlGroup" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="location" type="de:XmlLocation" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="model-org-unit" type="de:XmlModelOrgUnit" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="model-position" type="de:XmlModelPosition" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="org-unit" type="de:XmlOrgUnit" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="organization" type="de:XmlOrganization" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="position" type="de:XmlPosition" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="privilege" type="de:XmlPrivilege" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="resource-attribute" type="de:XmlOrgAttribute" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:choice>
                    <xs:attribute name="model-version" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Major version number of the organization model. The contained organization model deployment records make up this version.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgModelResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getOrgModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="capability" type="de:XmlCapability" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="privilege" type="de:XmlPrivilege" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="group" type="de:XmlGroup" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="location" type="de:XmlLocation" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="organization" type="de:XmlOrganization" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="model-template" type="de:XmlModelOrgUnit" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="resource-attribute" type="de:XmlOrgAttribute" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="model-version" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Major version number of the organization model. The contained organization model deployment records make up this version.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgModelRoots">
                <xs:annotation>
                    <xs:documentation>Requests the details of the model root entities identified by the given major version.
			These will include; Organisations, Groups, Locations, Capabilities, Privileges, Resource Attributes and Model Templates.
			Using these root entities, it will be possible for the client to navgate the entire org-model in a "drill-down" fashion.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="model-version" default="-1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Specifies the major organization model version from which entities are to be returned. A value of -1 returns entities from the highest major organization model version.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgModelRootsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getOrgModelRoots operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="capability" type="de:XmlCapability" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="privilege" type="de:XmlPrivilege" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="group" type="de:XmlGroup" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="location" type="de:XmlLocation" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="organization" type="de:XmlOrganization" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="model-template" type="de:XmlModelOrgUnit" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="resource-attribute" type="de:XmlOrgAttribute" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="model-version" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Major version number of the organization model. The contained organization model deployment records make up this version.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPushDestinations">
                <xs:annotation>
                    <xs:documentation>Request element for getPushDestinations. Specify the organization model entities for whom push destinations should be retrieved.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="org-entity" type="orgdto:XmlModelEntityId" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Definition of an organization model entity for whom push destinations should be retrieved.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPushDestinationsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for getPushDestinations. Lists the currently defined push destinations for each specified organization model entity.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="org-entity" type="ns7:XmlPushDestinationList" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Definition of an organization model entity and its currently defined push destinations.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="listOrgModelVersions" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Request element for listOrgModelVersions operation. This operation lists the available organization model major versions. 

For each major version, the organization model deployments that make up that version are detailed, giving their full version number, name and date deployed.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="listOrgModelVersionsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for listOrgModelVersions operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="version" type="de:XmlOrgModelVersionDetail" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Major version number(s) of the organization model. Each element lists the details of the deployment artifact that makes up that major version.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="processDynamicOrg" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Requests that the processing of the Extension Points and Candidate Queries is performed as soon as possible.
            The request will be placed on a queue for 'immediate' processing.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="processDynamicOrgResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response element. An unsuccessful request will be indicated with a fault.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="setCalendarReferences">
                <xs:annotation>
                    <xs:documentation>Request to assign calendar references to organization model entities. The assignments overwrite any existing assignments to the same model entities.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="assignment" type="orgdto:XmlCalendarAssignment" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="setCalendarReferencesResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response element for the setCalendarReferences operation. An unsuccessful assignment will be indicated with a fault.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="setCandidateQueries">
                <xs:annotation>
                    <xs:documentation>Sets, or updates, the Candidate Query assignments to identified org-model entities. Each org-model entity may only hold one Candidate Query. Any existing assignment will be ovewritten by a new assignment.
Candidate Queries span all org-model versions in which the identified org-model entity exists. Therefore, the request does not include a model version.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="assignment" type="de:XmlCandidateQueryAssignment" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies an org-model entity and the LDAP query to be assigned to that entity.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="remove" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Identifies one or more org-model entitoes from which any existing Candidate Query is to be removed.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:choice>
                                    <xs:element name="group" type="xs:string" maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Identifies the group, by its guid, to which the Candidate Query is assigned.</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="position" type="xs:string" maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Identifies the position, by its guid, to which the Candidate Query is assigned.</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="setCandidateQueriesResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response element. An unsuccessful update will be indicated with a fault.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="setExtensionPoints">
                <xs:annotation>
                    <xs:documentation>Sets, removes or updates, the Extension Point configurations assigned to identified organisations or organisation units. Removes are processed before sets and updates.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="ext-point" type="de:XmlExtensionPointAssignment" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies a Extension Point model entity and provides the configuration to be set against it.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="remove-ext-point" type="de:XmlExtensionPointRemoval" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies a Extension Point model entity to be removed. Missing entities are ignored.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="setExtensionPointsResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response element. An unsuccessful update will be indicated with a fault.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="updatePushDestinations" type="ns7:XmlUpdatePushDestinations"/>
            <xs:element name="updatePushDestinationsResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response element. An unsuccessful update will be indicated with a fault.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://base.api.de.bpm.tibco.com" xmlns:dex="http://api.de.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:channel="http://channeltype.common.n2.tibco.com" targetNamespace="http://base.api.de.bpm.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://channeltype.common.n2.tibco.com"/>
            <xs:import namespace="http://api.de.n2.tibco.com"/>
            <xs:annotation>
                <xs:documentation>
      A note on the naming conventions used:
      Element types from which Java classes are generated should be named using the
      same convention as Java classes (i.e. camel-casing). They should also have the
      prefix "Xml" in order to avoid any conflict with any POJO classes of the same
      name.
      Attributes, and the name of sub-elements, are in lower-case, with hyphens used
      to separate words. For example, "first-name", "primary-attribute" and "parent-id".
      Sub-element names should also be singular; e.g. "child" and not "children",
      "property" and not "properties".
        </xs:documentation>
            </xs:annotation>
            <xs:simpleType name="XmlAllocationMethod">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the method by which resources will be selected from a collection for work allocation. One of the following:
- ANY: use random selection.
- NEXT: use iterative selection.
- THIS: use the specifically identified resource.
- PLUGIN: use the named plugin code (where the name is given separately) to perform the selection.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ANY"/>
                    <xs:enumeration value="NEXT"/>
                    <xs:enumeration value="THIS"/>
                    <xs:enumeration value="PLUGIN"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="XmlBaseOrgUnit" abstract="true">
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="schema-type" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the organization model schema type from which this organization unit is derived.

This is an optional element, as an org-unit need not be derived from a schema type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="allocation-method" type="ns11:XmlSelectionMode" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the method of work allocation for this organization unit.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="location-ref" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Identifies the location to which this organization unit is associated.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="privilege-holding" type="ns11:XmlEntityAssignmentQualified" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Identifies the privileges held by this organization unit, and any qualifier values that may apply.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="attribute" type="ns11:XmlOrgAttributeValue" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Names an attribute assigned to this organization unit, and gives the definition for that attribute. Attributes can only be assigned to an organization unit if it has a schema-type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="push-destination" type="ns11:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes a push destination used to push work items to resources.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="calendar-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The alias of the calendar that this org-unit will use for deadline calculations.
                        This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlBasePosition" abstract="true">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Position and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="schema-type" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the org-model schema type from which this position is derived.

This is an optional element, as a position need not be derived from a schema type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="allocation-method" type="ns11:XmlSelectionMode" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the method of work allocation for this position.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="location-ref" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Identifies the location to which this position is associated.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="req-capability" type="ns11:XmlEntityAssignmentQualified" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Identifies a capability assignment that forms the collection of capabilities required to join this position.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="privilege-holding" type="ns11:XmlEntityAssignmentQualified" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Identifies the privileges held by this position, and any qualifier values that may apply.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="attribute" type="ns11:XmlOrgAttributeValue" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Names an attribute assigned to this position, and gives the definition for that attribute.  Attributes can only be assigned to a position if it has a schema-type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="push-destination" type="ns11:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes a Push Destinations, used to push work-items to Resources.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="candidate-query" type="ns11:XmlCandidateQuery" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>The optional query that will identify candidate Resource for this Position.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="calendar-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The alias of the calendar that this position will use for deadline calculations. This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="candidate-query" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Only used in the org-model drill-down API. Returns true if this Position holds a Candidate Query configuration.
                        </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ideal-number" use="required" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>For modelling purposes only, this returns the ideal number of resources that should be assigned to this Position.

A position can be filled by any number of human resources, but an ideal number can be specified. This ideal number is merely an indication, and a lower or higher number of human resource assignments can be made.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="XmlCandidateChoice">
                <xs:annotation>
                    <xs:documentation>Enumerated value indicating what entries should be included in the result set of a search
            of an LDAP Container's candidate Resources. One of the following:
                - EXISTING: include only entries from which a Resource has already been created.
                - NON-EXISTING: include only entries from which no Resource has yet been created.
                - ALL: include both existing and non-existing candidate Resources.
                - INVALID: include only Resources that exist in BPM but not in LDAP</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="EXISTING"/>
                    <xs:enumeration value="NON-EXISTING"/>
                    <xs:enumeration value="ALL"/>
                    <xs:enumeration value="INVALID"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="XmlCandidateError">
                <xs:annotation>
                    <xs:documentation>Enumerated value indicating an error in the identification of an LDAP Container's
            candidate Resource. Also used to report failure when attempting to create a Resource from a candidate.
                - MULTIPLE-ENTRIES: The Secondary LDAP Source mappings identify multiple entries.
                - MISSING-RESOURCE: The existing Resource's entry could not be found in the LDAP directory.
                - NAME-EXISTS: A Resource already exists with the name specified in a create Resource request.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="MULTIPLE-ENTRIES"/>
                    <xs:enumeration value="MISSING-RESOURCE"/>
                    <xs:enumeration value="NAME-EXISTS"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="XmlCandidateQuery">
                <xs:annotation>
                    <xs:documentation>Defines an LDAP Query that will identify candidates for Resources. The candidate Resources will be automatically created and assigned to the Group or Position to which this query is associated.
The query identifies an LDAP Container; the Primary LDAP Source of which will be used to evaluate the query.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="base-dn" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>(Optional) Provides an additional base DN that will be used to restrict the scope of the Candidate Query. This base DN is relative to, and in additon, to any base DN of the LDAP Container's primary LDAP Source.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="container-id" use="required" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>Identifies the LDAP Container whose the Primary LDAP Source will be used to evaluate the query.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="query" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The LDAP Query that will be combined with the query of the Primary LDAP Source to identify candidate Resources.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="search-scope" type="ns11:XmlLdapSearchScope">
                    <xs:annotation>
                        <xs:documentation>Enumerated value indicating the scope on which an LDAP search is to be performed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlCandidateQueryAssignment">
                <xs:annotation>
                    <xs:documentation>Used to persist the LDAP Query that is used to identify candidate Resources for the Position or Group to which the CandidateQuery is assigned.
            </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlCandidateQuery">
                        <xs:choice>
                            <xs:element name="group" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Identifies the group, by its guid, to which the Candidate Query is assigned.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="position" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Identifies the position, by its guid, to which the Candidate Query is assigned.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlCapability">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Capability and any qualifier attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlQualifiedEntity">
                        <xs:attribute name="resource-count" default="0" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Reports the number of resources assigned with this capability. This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlContainer">
                <xs:annotation>
                    <xs:documentation>Definition of an LDAP container and any LDAP source entries that it contains.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:choice>
                        <xs:element name="primary-group-ldap" type="ns11:XmlLdapGroupSource">
                            <xs:annotation>
                                <xs:documentation>Definition of the primary LDAP source for this LDAP container.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="primary-ldap" type="ns11:XmlLdapQuerySource">
                            <xs:annotation>
                                <xs:documentation>Definition of the primary LDAP source for this LDAP container.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="secondary-group-ldap" type="ns11:XmlSecondaryLdapGroupSource">
                            <xs:annotation>
                                <xs:documentation>(Optional) Definition of a secondary LDAP source for this LDAP container. An LDAP container can have any number of secondary LDAP sources.
	
	A secondary LDAP source provides the ability to retrieve some LDAP data from an alternative LDAP directory.
	
	Named LDAP attributes are used to map the secondary LDAP entries to the primary LDAP entries.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="secondary-ldap" type="ns11:XmlSecondaryLdapQuerySource">
                            <xs:annotation>
                                <xs:documentation>(Optional) Definition of a secondary LDAP source for this LDAP container. An LDAP container can have any number of secondary LDAP sources.
	
	A secondary LDAP source provides the ability to retrieve some LDAP data from an alternative LDAP directory.
	
	Named LDAP attributes are used to map the secondary LDAP entries to the primary LDAP entries.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                    <xs:element name="restricted-org" type="ns11:XmlRestrictedOrg" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>(Optional) Identifies the organisations to which access is restricted to only those resources derived from the LDAP container in which this element resides.

It also restricts the organizations to which resources derived from the LDAP container can be assigned.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="active" default="true" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Read-only - Indicates if this container has been marked as deleted. Containers will only be deleted when all resources derived from it are deleted.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description of the LDAP container.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="entity-count" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Read-only - only specified when this XmlContainer is used in a service response.

The count of the number of LDAP entries this container referenced. This count is set when the container is queried. The count may not be currently correct if the LDAP directory has been modified since the count was set.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="id" default="0" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>Unique ID of the LDAP container. Only given when updating an existing LDAP container.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="last-accessed" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Read-only - Date and time on which the LDAP container was last queried, and the date on which the entity-count above was set.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique name of the LDAP container.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlDateRangeAttribute">
                <xs:attribute name="end-date" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The optional date and time on which the resource's presence should end. If specified, a start-date must also be specified.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="start-date" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The optional date and time on which the resource's presence should begin.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlDeletedResource">
                <xs:annotation>
                    <xs:documentation>Identifies a resource that has been deleted but whose details have been recorded in order to allow the re-allocation of processes/work-items.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapContainerEntry">
                        <xs:attribute name="container-id" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Identifies the LDAP container from which the resource originated.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="date-deleted" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The date and time on which the resource was deleted.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="guid" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The GUID originally assigned to the resource..</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="label" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The alternative name assigned to the resource.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="name" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The name assigned to the resource.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityAssignmentDated">
                <xs:annotation>
                    <xs:documentation>Identifies an Organizational Model Entity to which a Resource is associated.
                   The association can be restricted by a date range, that specifies when the association is valid.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:attribute name="end-date" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The optional date and time on which the resource's membership to this entity ends.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="start-date" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The optional date and time on which the resource's membership to this entity starts.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityAssignmentQualified">
                <xs:annotation>
                    <xs:documentation>Identifies an Organizational Model Entity to which the enclosing entity is associated.
                   The association can be qualified by one or more values.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="qualifier-value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Any number of values that qualify this assignment.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityReference">
                <xs:attribute name="guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The GUID that uniquely identifies the entity.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlEntityReferenceAttributes">
                <xs:complexContent>
                    <xs:extension base="ns11:XmlEntityReference">
                        <xs:sequence>
                            <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>The collection of values assigned to this attribute instance.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityReferenceDateRange">
                <xs:complexContent>
                    <xs:extension base="ns11:XmlEntityReference">
                        <xs:attribute name="end-date" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The optional date and time on which the resource's presence should end. If specified, a start-date must also be specified.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="start-date" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The optional date and time on which the resource's presence should begin.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityReferenceQualified">
                <xs:complexContent>
                    <xs:extension base="ns11:XmlEntityReference">
                        <xs:sequence>
                            <xs:element name="qualifier-value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Any number of values that qualify this assignment.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlExtensionPoint">
                <xs:annotation>
                    <xs:documentation>It provides the configuration details of an Organisation Extension Point.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="instance-id-attr" type="ns11:XmlModelInstanceIdAttribute" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="base-dn" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Optionally names the LDAP branch to which the LDAP Query will be restricted. This will be in addition to any Base-DN already specified on the LDAP Connection.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-alias" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Identifies the LDAP Connection on which the LDAP Query will be performed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-attribute" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Names the LDAP Attribute from which the name of the new Model Template Instance will be taken. The root Organisation-Unit of the Model Template Instance will be named with the value of this attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="query" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>This LDAP Query expression will locate entries that identify new model template instances.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="search-scope" use="required" type="ns11:XmlLdapSearchScope">
                    <xs:annotation>
                        <xs:documentation>The Search Scope determines the depth to which the search will be performed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlExtensionPointAssignment">
                <xs:annotation>
                    <xs:documentation>Serves two purposes. Firstly, it identifies the entity in which it is an element as being an Organisation Extension Point.
            Secondly, it provides the configuration details of that Extension Point.
            </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlExtensionPoint">
                        <xs:attribute name="ext-point-guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique identifier of the organisation unit that is the Extension Point to which this configuration will be set.
		                The identified entity must have been deployed as an Extension Point holder.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="model-version" use="required" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Major version number of the organization model in which the Extension Point entity is found; and to which this Extension Point configuration will be set.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlExtensionPointRemoval">
                <xs:attribute name="ext-point-guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique identifier of the organisation unit that is the Extension Point to which this configuration will be set.
		                The identified entity must have been deployed as an Extension Point holder.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="model-version" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Major version number of the organization model in which the Extension Point entity is found; and to which this Extension Point configuration will be set.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlExtensionPointSetting">
                <xs:annotation>
                    <xs:documentation>Serves two purposes. Firstly, it identifies the entity in which it is an element as being an Organisation Extension Point.
            Secondly, it provides the configuration details of that Extension Point.
            </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlExtensionPoint">
                        <xs:attribute name="complete" default="true" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Indicates whether this Extension Point configuration is complete. If false then it will require configuration before it is used to generate dynamic org-model fragments.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="model-template" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Identifies the Model Template entity to which this Extension Point refers.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlGroup">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Group and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="allocation-method" type="ns11:XmlSelectionMode" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the method of work allocation for this group.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="group" type="ns11:XmlGroup" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Creates a nested collection of sub-groups for this group.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="req-capability" type="ns11:XmlEntityAssignmentQualified" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Identifies a capability assignment that forms the collection of capabilities required to join this group.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="privilege-holding" type="ns11:XmlEntityAssignmentQualified" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Identifies the privileges held by this group, and any qualifier values that may apply.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="push-destination" type="ns11:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes a Push Destinations, used to push work-items to Resources.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="candidate-query" type="ns11:XmlCandidateQuery" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>The optional query that will identify candidate Resource for this Group.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="calendar-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The alias of the calendar that this group will use for deadline calculations. This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="candidate-query" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Only used in the org-model drill-down API. Returns true if this Group holds a Candidate Query configuration.
                        </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="resource-count" default="0" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Reports the number of resources assigned to this group. This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlLdapAttribute">
                <xs:annotation>
                    <xs:documentation>Names an LDAP attribute and indicates whether its values are binary data.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="binary" default="false" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Indicates whether the data of the named attribute is binary.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the LDAP attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapAttributeMapping">
                <xs:annotation>
                    <xs:documentation>Mapping between a Resource Attribute, which is defined in the organization model and identified by its GUID, and an LDAP attribute, which is identified by its name.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="ldap-attribute" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>LDAP attribute that is to be mapped to the identified resource attribute. Whenever a value is required for the resource attribute, it will be provided by this LDAP attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="resource-attr-guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The GUID of the Resource Attribute as defined in the organization model.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapAttributeValue">
                <xs:annotation>
                    <xs:documentation>Names an LDAP Attribute and returns the values it holds. Includes an indication of whether its values are binary data. Binary values will be encoded in Base-64.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapAttribute">
                        <xs:sequence>
                            <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>The collection of values read from the named attribute.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlLdapContainerEntry">
                <xs:annotation>
                    <xs:documentation>Identifies the LDAP entries (both primary and secondaries) from which a Resource can be (or has been) created. The ldap-alias and ldap-dn identify the LDAP Entry within the Primary LDAP Source the LDAP Container from which the candidate was derived.

If the LDAP Container has any Secondary LDAP Sources, a "secondary-ref" identifies the LDAP Entry within each of those Secondary LDAP Sources.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapEntryId">
                        <xs:sequence>
                            <xs:element name="secondary-ref" type="ns11:XmlLdapEntryId" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Identifies the LDAP entry in the secondary LDAP source (which is itself identified by the ldap-alias) of an LDAP container.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlLdapEntry">
                <xs:annotation>
                    <xs:documentation>Details the properties of an LDAP entry; including its DN and attributes.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attribute" type="ns11:XmlLdapAttributeValue" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>The collection of named attributes read from the LDAP entry. This collection may be limited to those named in the request that returned this element.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="ldap-dn" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The full Distinguished Name (DN) of the LDAP entry from which this element was constructed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapEntryId">
                <xs:annotation>
                    <xs:documentation>Identifies an LDAP entry by the alias of the LDAP connection shared resource and the Distinguished Name (DN) of the entry within that LDAP.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="ldap-alias" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name (or alias) by which a configured LDAP connection shared resource is identified.

LDAP connection shared resources are named with the prefix "ldap/de/" in order to indicate that they are intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-dn" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The full Distinguished Name (DN) of the LDAP entry identified by this element.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapGroupSource">
                <xs:annotation>
                    <xs:documentation>Definition of an LDAP Source entry (identified by the LDAP alias) in an LDAP container.
            This class of LDAP Source is used to locate candidate entries using LDAP Groups.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapSource">
                        <xs:attribute name="group-dn" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The Group DN uniquely identifies the directory entry that is the group. This can be derived by performing a search based upon the base-DN, search filter and scope parameters described above. Or, it can be manually entered (with verification) by the user.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="member-attribute" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The member attribute names the attribute within the group entry that holds the collection of member idenifiers - their DNs. This will give the final list of candidate resources.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlLdapQuerySource">
                <xs:annotation>
                    <xs:documentation>Definition of an LDAP Source entry (identified by the LDAP alias) in an LDAP container.
            This class of LDAP Source is used to locate candidate entries using an LDAP Query, and optional base-dn.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapSource">
                        <xs:attribute name="base-dn" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>(Optional) Provides an additional base DN that will be used to restrict the scope of the LDAP query. This base DN is relative to, and in additon, to any base DN specified in the URL of the LDAP connection shared resource identified by the ldap-alias.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ldap-query" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>LDAP query expression used to identify the entries to be returned from this LDAP source.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="search-scope" type="ns11:XmlLdapSearchScope">
                            <xs:annotation>
                                <xs:documentation>The Search Scope determines the depth to which the search will be performed. By default the search will be SUBTREE.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="XmlLdapSearchScope">
                <xs:annotation>
                    <xs:documentation>Enumerated value indicating the scope on which an LDAP search is to be performed.
            ONELEVEL - contains elements with objects in the named context that satisfy the search filter.
            SUBTREE - contains elements of objects from the subtree (including the named context) that satisfy the search filter.
            </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ONELEVEL"/>
                    <xs:enumeration value="SUBTREE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="XmlLdapSource" abstract="true">
                <xs:annotation>
                    <xs:documentation>Definition of an LDAP shared resource entry (identified by the LDAP alias) in an LDAP container.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attribute-mapping" type="ns11:XmlLdapAttributeMapping" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="ldap-alias" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name (or alias) by which a configured LDAP connection shared resource is identified. LDAP connection shared resource are named with the prefix "ldap/de/" in order to indicate that they are intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.

An LDAP container can contain only one instance of an LDAP source for any alias.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="resource-name-attributes" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>(Optional) A space-separated list of named LDAP attributes, whose values will be concatenated to generate a default display name for resources derived from entries in this LDAP source.
When an LDAP container contains one or more secondary LDAP sources, and those LDAP sources also provide resource-name-attributes, those of the first entry encountered will be used.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapSourceLink">
                <xs:annotation>
                    <xs:documentation>Definition of a foreign key mapping between the primary LDAP source and a secondary LDAP source for an LDAP container.

Each element names an attribute within each LDAP source that, for a given entry in each LDAP source, holds the same value and thus provides an association between the two entries.

For example, if a resource has an entry of "UID=Clint Hill" in the primary LDAP source, and is uniquely identified in the secondary LDAP source as "CN=Clint Hill". The mappping would map the "UID" attribute in the primary LDAP source to the "CN" attribute in the secondary LDAP source.

In order to uniquely identify an entry in each LDAP source many of these elements may be required, naming several attributes in each LDAP source.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="primary-attribute" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The LDAP attribute in the primary LDAP source that is to be mapped to the LDAP attribute in the secondary LDAP source (name in the secondary-attribute).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="secondary-attribute" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The LDAP attribute in this secondary LDAP source that is to be mapped to from the LDAP attribute in the primary LDAP source (named in the primary-attribute)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLocation">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Location and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="schema-type" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the org-model schema type from which this location is derived. This is an optional element, as a location need not be derived from a schema type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="attribute" type="ns11:XmlOrgAttributeValue" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Names an attribute assigned to this location, and gives the definition for that attribute. Attributes can only be assigned to a location if it has a schema-type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlMappedAttributeValue">
                <xs:annotation>
                    <xs:documentation>Names an LDAP attribute and returns the values it holds. Includes an indication of whether its values are binary data. Binary values will be encoded in Base-64.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapAttributeValue">
                        <xs:attribute name="resource-attr-guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The GUID of the resource attribute as defined in the organization model.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlModelEntity">
                <xs:annotation>
                    <xs:documentation>Identifies an Organizational Model Entity to which a Resource is associated.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The GUID that uniquely identifies the entity.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="label" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The optional label assigned to the entity. This is used for display purposes. If not given, the name is used for display.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name assigned to the entity.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlModelInstanceIdAttribute">
                <xs:annotation>
                    <xs:documentation>Names an LDAP Attribute that will be used to populate the value of the named Model-Template Instance Identity attribute.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="ldap-attribute" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Names the LDAP Attribute from which the value of the model-template instance ID attribute will be populated.
                If the named LDAP Attribute holds many values, only one will be chosen - at random.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Names the model-template instance ID attribute that will take its value from the named LDAP Attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlModelInstanceIdValue">
                <xs:annotation>
                    <xs:documentation>Makes up one element of the Model-Template Identity; each element being a named attribute linked to a named LDAP attribute.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Names the model-template instance ID attribute that will take its value from the named LDAP Attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="value" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The value of the LDAP Attribute from which the model-template instance ID will be constructed.
                If the named LDAP Attribute holds many values, only one will be chosen - at random.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlModelOrgUnit">
                <xs:annotation>
                    <xs:documentation>Describes an organization model organization unit and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlBaseOrgUnit">
                        <xs:sequence>
                            <xs:element name="model-position" type="ns11:XmlModelPosition" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes the positions contained within this organization unit.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="model-org-unit" type="ns11:XmlModelOrgUnit" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes the organization units contained within this organization unit (the sub-organization units). Each organization unit described may have further sub-organization units.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlModelPosition">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Position and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlBasePosition"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlOptionalEntityReference">
                <xs:attribute name="guid" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The optional GUID that uniquely identifies the entity.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlOptionalStringAttribute">
                <xs:attribute name="value" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The optional text value of the attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlOrgAttribute">
                <xs:annotation>
                    <xs:documentation>Describes an organization model attribute that may be assigned to organization model entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="enum-val" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>For Enum and EnumSet attributes, these elements list the permitted values.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="type" use="required" type="dex:XmlParameterType">
                            <xs:annotation>
                                <xs:documentation>Indicates the data type of the attribute values.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlOrgAttributeValue">
                <xs:annotation>
                    <xs:documentation>Records the values held by an organization model entity for an attribute. The attribute is described by its definition.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="definition" type="ns11:XmlOrgAttribute">
                        <xs:annotation>
                            <xs:documentation>The definition of the attribute, including data type and possible values.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Lists the values assigned to this attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="XmlOrgModelDeployment">
                <xs:annotation>
                    <xs:documentation>Lists all the properties of an organization-model deployment artefact.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="deployed" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Timestamp on which the organization model deployment artifact was deployed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="major" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Major component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="micro" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Micro component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="minor" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Minor component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the organization model deployment artifact, as defined by TIBCO Business Studio.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="qualifier" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Qualifier component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlOrgModelVersionDetail">
                <xs:annotation>
                    <xs:documentation>Identifies a major version number of an organization model, detailing the deployment artifacts that make up that major version.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="deployment" type="ns11:XmlOrgModelDeployment" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="model-version" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Major version number of the organization model. The contained organization model deployment records make up this version.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlOrgUnit">
                <xs:annotation>
                    <xs:documentation>Describes an organization model organization unit and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlBaseOrgUnit">
                        <xs:sequence>
                            <xs:element name="extension-point" type="ns11:XmlExtensionPointSetting" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Marks this entity as being an Organisation Extension Point; and provides the configuration details of that Extension Point.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="instance-id-attr" type="ns11:XmlModelInstanceIdValue" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Only used for Dynamic Model-Template instances. Makes up one element of the Model-Template Identity; each element being a named attribute linked to a named LDAP attribute.
                            These elements are only included for the root org-unit of a Model-Template instance.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="position" type="ns11:XmlPosition" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes the positions contained within this organization unit.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="org-unit" type="ns11:XmlOrgUnit" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes the organization units contained within this organization unit (the sub-organization units). Each organization unit described may have further sub-organization units.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="dynamic" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Returns true if this entity was dynamically generated as a result of an
                        Organisational Model Extension Point; rather than part of an org-model deployment.
                        </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="extension-point" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Only used in the org-model drill-down API. Returns true if this Org-Unit has been designated as an Extension Point.
                        </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlOrganization">
                <xs:annotation>
                    <xs:documentation>Describes an organization model organization and its associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="schema-type" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the organization model schema type from which this organization is derived. This is an optional element, as an organization need not be derived from a schema type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="allocation-method" type="ns11:XmlSelectionMode" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Describes the method of work allocation for this organization.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="location-ref" type="ns11:XmlModelEntity" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Identifies the location to which this organization is associated.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="org-unit" type="ns11:XmlOrgUnit" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes the organizational-units directly associated with this organization.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="attribute" type="ns11:XmlOrgAttributeValue" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Names an attribute assigned to this organization, and gives the definition for that attribute. Attributes can only be assigned to an organization if it has a schema-type.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="push-destination" type="ns11:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Describes a push destination used to push work items to resources.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="calendar-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The alias of the calendar that this organization will use for deadline calculations. This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlPageControl">
                <xs:annotation>
                    <xs:documentation>Conveys the paged request for a list of entities.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="page" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Indicates the page requested. The first page is numbered 1. If the requested page, for a given page-size, exceeds the available entries, the resulting list will be empty.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="page-size" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Indicates the maximum number of entries per page.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlPageControlResponse">
                <xs:annotation>
                    <xs:documentation>Conveys the paged request for a list of entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlPageControl">
                        <xs:attribute name="total-entries" use="required" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Indicates the total number of entries available. Allowing the number of pages to be determined.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlPosition">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Position and the associated entities.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlBasePosition">
                        <xs:attribute name="dynamic" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Returns true if this Position was dynamically generated as a result of an
                        Organisational Model Extension Point; rather than part of an org-model deployment.
                        </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="resource-count" default="0" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Reports the number of resources assigned to this position. This information is only included if requested as part of the request parameters.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlPrivilege">
                <xs:annotation>
                    <xs:documentation>Describes an org-model Privilege and any qualifier attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlQualifiedEntity"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlPrivilegeAssignment">
                <xs:annotation>
                    <xs:documentation>Identifies a Privilege to which a Resource is associated.
                   The association can be qualified by one or more values.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlEntityAssignmentQualified">
                        <xs:choice>
                            <xs:element name="group" type="ns11:XmlModelEntity">
                                <xs:annotation>
                                    <xs:documentation>Identifies the group from which the resource inherits this privilege assignment.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="org-unit" type="ns11:XmlModelEntity">
                                <xs:annotation>
                                    <xs:documentation>Identifies the organization unit from which the resource inherits this privilege assignment.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="position" type="ns11:XmlModelEntity">
                                <xs:annotation>
                                    <xs:documentation>Identifies the position from which the resource inherits this privilege assignment.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlPushDestination">
                <xs:annotation>
                    <xs:documentation>Definition of a push destination.

When using these XML elements to set a push destination, if both the "resource-attr-guid" attribute and "value" elements are specified, the "value" elements will be ignored.
The value elements are used to pass the values of the push destination. If the push destination:
            - retrieves its value from an LDAP attribute (via a resource-attr-guid arameter descriptor) it can hold multiple values, so the value element can occur several times.
            - does not take its value from an LDAP attribute, it can hold only one value. If multiple values are given when setting the push destination, only the first value is recorded.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlPushDestinationId">
                        <xs:sequence>
                            <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Value to be used for this push destination.
When setting a push destination, this value is only used if no resource-attr-guid attribute is supplied.
When reading a push destination, this is the explicit value or the value(s) held by the Resource attribute identified by the resource-attr-guid attribute.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="enabled" use="required" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value indicating whether this push destination is currently enabled (TRUE) or not (FALSE).</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="resource-attr-guid" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique ID of a resource attribute whose value should be used for the push destination. The parameter descriptor must be assigned to the organization model entity for whom the push destination is being set.  If a value is assigned to both this attribute and the "value" element, the value of this attribute will be used.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlPushDestinationId">
                <xs:annotation>
                    <xs:documentation>Identifies a push destination.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="channel-id" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique ID of the channel associated with this push destination.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="channel-type" use="required" type="channel:ChannelType">
                    <xs:annotation>
                        <xs:documentation>Enumerated type defining the presentation technology used by the channel associated with this push destination.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the push destination.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlQualifiedEntity">
                <xs:annotation>
                    <xs:documentation>Describes an qualified org-model entity (i.e. Privilege or Capability).</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="qualifier" type="ns11:XmlOrgAttribute" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>For qualified entities, this element describes the qualifier attribute.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlResourceAttributeValue">
                <xs:annotation>
                    <xs:documentation>Identifies Resource Attribute and the values assigned to a Resource.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>The collection of values assigned to this attribute instance.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The GUID that uniquely identifies the resource attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="label" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the resource attribute used for display purposes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-alias" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>If the resource attribute takes its value from an LDAP attribute, this names the LDAP shared resource from which the LDAP entry was retrieved.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-attribute" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>If the resource attribute takes its value from an LDAP attribute, this names the LDAP attribute from which the values were retrieved.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-binary" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If the resource attribute takes its value from an LDAP attribute, this indicates whether its values are binary data. Binary values are encoded in Base-64.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-dn" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>If the resource attribute takes its value from an LDAP attribute, this is the DN of the LDAP entry from which the values were retrieved.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the resource attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" use="required" type="dex:XmlParameterType">
                    <xs:annotation>
                        <xs:documentation>Indicates the data type of the attribute values.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlResourceCandidate">
                <xs:annotation>
                    <xs:documentation>Identifies the LDAP entries (both primary and secondaries) from which a Resource can be (or has been) created. The ldap-alias and ldap-dn identify the LDAP Entry within the Primary LDAP Source the LDAP Container from which the candidate was derived. If the LDAP Container has any Secondary LDAP Sources, a "secondary-ref" identifies the LDAP Entry within each of those Secondary LDAP Sources. If the candidate is an existing Resource, the GUID for that Resource will be included. If a Resource cannot be created from the candidate, an error code will indicate the reason.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapContainerEntry">
                        <xs:attribute name="error" type="ns11:XmlCandidateError">
                            <xs:annotation>
                                <xs:documentation>Read-only - Indicates that the candidate is invalid, and provides a coded explanation why. If this attribute is not present, the candidate is valid.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="guid" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>If the candidate is one for which a Resource already exists, the GUID of that existing resource is given.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="name" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The name of the existing resource, or the name that will be assigned (by default) to the resource created from this candidate entry.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlResourceDetail">
                <xs:sequence>
                    <xs:element name="location" type="ns11:XmlModelEntity" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Identifies a location to which the resource is associated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="position" type="ns11:XmlEntityAssignmentDated" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies a position to which the resource is associated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="group" type="ns11:XmlEntityAssignmentDated" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies a group to which the resource is associated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="capability" type="ns11:XmlEntityAssignmentQualified" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies a capability to which the resource is associated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="privilege" type="ns11:XmlPrivilegeAssignment" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies a privilege to which the resource is associated. It also identifies the organizational model entity from which the resource inherits the privilege.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attribute" type="ns11:XmlResourceAttributeValue" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies a resource attribute, and the values assigned to the resource.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="push-destination" type="ns11:XmlPushDestination" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Describes a resource push destination, used to push work items to the resource.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ldap-reference" type="ns11:XmlLdapContainerEntry">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP entry from which the resource is derived.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="container-id" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>Identifies the LDAP container from which the candidate was resolved.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="container-name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of LDAP container from which the candidate was resolved.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="end-date" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The optional date and time on which the resource's presence should end.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The GUID assigned to the resource.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="label" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name assigned to the resource for display purposes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="model-version" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Identifies the model major version from which the resource's organization model entity associations are taken.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name assigned to the resource.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="resource-type" use="required" type="dex:ResourceType">
                    <xs:annotation>
                        <xs:documentation>Identifies the model major version from which the resource's organization model entity associations are taken.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="start-date" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The optional date and time on which the resource's presence should begin.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlRestrictedOrg">
                <xs:annotation>
                    <xs:documentation>Identifies an organisation to which access is restricted to only those Resource derived  from the LDAP Container in which this element resides. It also restricts the Organizations to which Resources derived from the LDAP Container can be assigned.
            </xs:documentation>
                </xs:annotation>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Read-only - Name of the organization to be administered. Only supplied for display purposes.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="org-guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique identifier of the organisation to be administered.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlSecondaryLdapGroupSource">
                <xs:annotation>
                    <xs:documentation>Extension of XmlLdapSource, which identifies a secondary LDAP Source entry within an LDAP container.

An LDAP container can hold a single primary LDAP Source and any number of secondary LDAP Sources. Secondary LDAP Sources hold "foreign-key" references that map their entries to those of the primary LDAP Source by named attribute values.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapGroupSource">
                        <xs:sequence>
                            <xs:element name="primary-link" type="ns11:XmlLdapSourceLink" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Definition of how this secondary LDAP source is mappped to the primary LDAP source. The mapping will allow an attribute's value in the primary LDAP source to map to an attribute's value in the secondary LDAP source.

For example, if a resource has an entry of "UID=Clint Hill" in the primary LDAP source, and is uniquely identified in the secondary LDAP source as "CN=Clint Hill". The mappping would map the "UID" attribute in the primary LDAP source to the "CN" attribute in the secondary LDAP source.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlSecondaryLdapQuerySource">
                <xs:annotation>
                    <xs:documentation>Extension of XmlLdapSource, which identifies a secondary LDAP Source entry within an LDAP container.

An LDAP container can hold a single primary LDAP Source and any number of secondary LDAP Sources. Secondary LDAP Sources hold "foreign-key" references that map their entries to those of the primary LDAP Source by named attribute values.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns11:XmlLdapQuerySource">
                        <xs:sequence>
                            <xs:element name="primary-link" type="ns11:XmlLdapSourceLink" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Definition of how this secondary LDAP source is mappped to the primary LDAP source. The mapping will allow an attribute's value in the primary LDAP source to map to an attribute's value in the secondary LDAP source.

For example, if a resource has an entry of "UID=Clint Hill" in the primary LDAP source, and is uniquely identified in the secondary LDAP source as "CN=Clint Hill". The mappping would map the "UID" attribute in the primary LDAP source to the "CN" attribute in the secondary LDAP source.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlSelectionMode">
                <xs:annotation>
                    <xs:documentation>Method used to select a resource from an identified collection of resources.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="method" use="required" type="ns11:XmlAllocationMethod">
                    <xs:annotation>
                        <xs:documentation>Algorithm used to select a resource. One of:
- ANY: use random selection.
- NEXT: use iterative selection.
- THIS: use the specifically identified resource.
- PLUGIN: use the named plugin code (where the name is given separately) to perform the selection.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="plugin" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of custom plugin implementation.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlStringAttribute">
                <xs:attribute name="value" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The text value of the attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="test" type="ns11:XmlContainer"/>
        </xs:schema>
        <xs:schema xmlns="http://exception.api.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://exception.api.common.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:complexType name="DetailedErrorLine">
                <xs:annotation>
                    <xs:documentation>Extension of ErrorLine, which adds a line number, column number and severity level.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns12:ErrorLine">
                        <xs:attribute name="columnNumber" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Column number in which the error occurred.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="lineNumber" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Line number on which the error occurred.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="severity" use="required">
                            <xs:annotation>
                                <xs:documentation>Severity of the message - for example, ERROR, WARNING or INFORMATION.</xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="WARNING"/>
                                    <xs:enumeration value="ERROR"/>
                                    <xs:enumeration value="INFORMATION"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DetailedException">
                <xs:sequence>
                    <xs:element name="error" type="ns12:ErrorLine" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ErrorLine">
                <xs:annotation>
                    <xs:documentation>Single error or warning message, containing an error code, message string and parameters.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="parameter" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Array of parameter values that can be applied to a foreign language message.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="code" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Code associated with this error.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Default English form of the error message.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="DeploymentParameterFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns12:ErrorLine" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="InternalServiceFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns12:ErrorLine"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="InvalidWorkTypeFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns12:ErrorLine"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="WorkTypeFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns12:ErrorLine"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://api.de.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://api.de.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://api.organisation.common.n2.tibco.com"/>
            <xs:complexType name="AdminLDAPContainer">
                <xs:annotation>
                    <xs:documentation>Complex type that defines an LDAP Container that can be used to administer an Organization.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="id" use="required" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>Unique ID reference of the LDAP container.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique name of the LDAP container.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:simpleType name="AllocationMethod">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the method by which resources will be selected from a collection for work allocation. One of the following:

- ANY: use random selection.
- NEXT: use iterative selection.
- THIS: use the specifically identified resource.
- PLUGIN: use the named plugin code (where the name is given separately) to perform the selection.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ANY"/>
                    <xs:enumeration value="NEXT"/>
                    <xs:enumeration value="THIS"/>
                    <xs:enumeration value="PLUGIN"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="EmptyRequest">
                <xs:annotation>
                    <xs:documentation>Dummy placeholder for an empty request.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="dummy" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Dummy placeholder for an empty request. Its value is not referenced in any request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ResourceType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the specific type of a resource.
      </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DURABLE"/>
                    <xs:enumeration value="CONSUMABLE"/>
                    <xs:enumeration value="HUMAN"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="SelectionMode">
                <xs:annotation>
                    <xs:documentation>Method used to select a resource from an identified collection of resources.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="method" use="required" type="ns13:AllocationMethod">
                    <xs:annotation>
                        <xs:documentation>Algorithm used to select a resource. One of:

- ANY: use random selection.
- NEXT: use iterative selection.
- THIS: use the specifically identified resource.
- PLUGIN: use the named plugin code (where the name is given separately) to perform the selection.			</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="plugin" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of plugin.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="SuccessFailureResponse">
                <xs:annotation>
                    <xs:documentation>Response indicating if a request succeeded or failed.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="successful" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value indicating if a request was successful (TRUE) or not (FALSE).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="XmlCapabilityAssignment">
                <xs:annotation>
                    <xs:documentation>Definition of a capability assignment, which is used to create or remove the assignment of a capability (iidentified by its GUID) to or from a resource (identified by its GUID). 

The capability assignment may also be qualified with the given qualifier value.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:sequence>
                            <xs:element name="qualifierSet" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>An optional collection of qualifying values. This overrides any qualifier attribute set on the parent element, allowing more than one value to be set. Multiple values will only be used for qualifiers of type "enumset".
                      </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute name="value" use="required" type="xs:string"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="capability-guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique ID of the capability that is to be removed or assigned.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="qualifier" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Qualifier value for the capability.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="remove" default="false" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value indicating whether the capability is to be removed from (TRUE) or assigned to (FALSE) the specified resource.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="resource-guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique ID of the resource that the capabilty is to be removed from or assigned to.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityAssociation">
                <xs:annotation>
                    <xs:documentation>Extension of XmlModelEntityId that identifies the association between one organization model entity (the enclosing element) and another. 

The association may have a duration over which it applies. This will be reflected by any startDate and endDate attributes.
      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlModelEntity">
                        <xs:attribute name="endDate" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>Date/time at which the entity becomes unavailable.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="startDate" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>Date/time at which the entity becomes available.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityDetail">
                <xs:annotation>
                    <xs:documentation>Details of an identified organization model entity. 

Not all elements are relevant to all organization model entity types.
      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="groups" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>GUIDs of the groups to which this resource belongs.

This attribute is only relevant for entities of type RESOURCE.
              </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="org-units" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>GUIDs of the organization units to which this resource belongs, via the positions to which it belongs.

This attribute is only relevant for entities of type RESOURCE.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="positions" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>GUIDs of the positions to which this resource belongs.

This attribute is only relevant for entities of type RESOURCE.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="privileges" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>GUIDs of the privileges currently held by this resource.

This attribute is only relevant for entities of type RESOURCE.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="capabilities" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>GUIDs of the capabilities currently associated with this resource.

This attribute is only relevant for entities of type RESOURCE.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="queries" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>GUIDs of the queries currently associated with this resource.

This attribute is only relevant for entities of type RESOURCE.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="selection-mode" type="ns13:SelectionMode" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Default algorithm used to select a resource from those associated with this organization model entity.

This attribute is only relevant for entities of type GROUP, ORGANIZATION, ORGANIZATIONAL_UNIT, POSITION and LOCATION.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="ldap-containers" type="ns13:AdminLDAPContainer" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>(Optional) Lists the LDAP Containers that can map resources to this Organisation.							
This element is only relevant for ORGANIZATION entity types.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Alias name by which the LDAP connection (from which the resource originates) is registered with Directory Engine.

This attribute is used with "dn" to locate the resource's entry in the LDAP directory.

The attribute is only relevant for entities of type RESOURCE.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="dn" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>DN of the LDAP entry for which the resource originates.

This attribute is used with "alias" to locate the resource's entry in the LDAP directory.

The attribute is only relevant for entities of type RESOURCE.
            </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="resource-type" default="HUMAN" type="ns13:ResourceType">
                            <xs:annotation>
                                <xs:documentation>Resouce type of this entity (for entities of type RESOURCE).</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlEntityInstantiatedList">
                <xs:annotation>
                    <xs:documentation>Details of the resources assigned to groups and positions.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="resource" type="ns13:XmlLdapEntity" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of a resource and the LDAP entries from which it is derived.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="modified" type="xs:int"/>
            </xs:complexType>
            <xs:complexType name="XmlEntityMapping">
                <xs:annotation>
                    <xs:documentation>Definition of a target organization model entity (a position or group) and the resources that are to be mapped to (created) or removed from it.

A collection of these elements form the request to the MapEntities operation in the Mapping service.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="target" type="orgdto:XmlModelEntityId">
                        <xs:annotation>
                            <xs:documentation>Target organization model entity (a position or group) to which resources should be mapped (created), or from which they should or removed.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:choice>
                        <xs:element name="create" type="ns13:XmlLdapEntity" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Details of the resources to be mapped to the target organization model entity.

A new resource will be created if no existing resource can be found for the specified organization model guid or LDAP entry identifier (ldap-dn).</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="remove" type="orgdto:XmlModelEntityId" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Details of the resources to be removed from the target organization model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="XmlInheritedAssociation">
                <xs:annotation>
                    <xs:documentation>Details of an association (such as a privilege or capability) inherited by one organization model entity from another organization model entity (the origin) to which it is connected.

For example, details of the privileges inherited by a resource from the groups to which it belongs.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlEntityAssociation">
                        <xs:sequence>
                            <xs:element name="origin" type="ns13:XmlModelEntity">
                                <xs:annotation>
                                    <xs:documentation>Identity of the organization model entity from which the association (such as a privilege or capability) is inherited.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlLdapAttribute">
                <xs:annotation>
                    <xs:documentation>Extension of XmlLdapAttributeSimple, which provides detailed information about the mapping of an organization model entity attribute to an LDAP attribute. 

An  organization model entity attribute that references an LDAP attribute can hold more than one value.

      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlLdapAttributeSimple">
                        <xs:attribute name="desc-guid" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique identifier of the parameter descriptor that describes the resource attribute.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ldap-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>For non-locally held resource attribute values, the alias by which the LDAP connection is registered within Directory Engine. Used to look up that connection so that the resource attribute's value can be read.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ldap-attribute" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>For non-locally held resource attribute values, the name of the LDAP attribute from which the attribute's value is read. Together with the ldap-alias and ldap-dn, this will uniquely identify an attribute of an entry within the LDAP directory.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ldap-dn" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>For non-locally held resource attribute values, the DN of the LDAP entry from which the attribute's value is read. Together with the ldap-alias, this will locate an entry within the LDAP directory.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="local" default="true" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value defining whether the resource attribute holds its value locally within Directory Engine (TRUE), or whether it reads the value from an identified LDAP attribute (FALSE).</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="type" default="String" type="ns13:XmlParameterType">
                            <xs:annotation>
                                <xs:documentation>Enumerated value defining the data type of this resource attribute's value.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlLdapAttributeSimple">
                <xs:annotation>
                    <xs:documentation>Definition of an attribute of an organization model entity, giving its name and value(s).</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>List of the values held by the resource attribute. 

An organization model entity that references an LDAP attribute can hold more than one value.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the resource attribute within the organization model (NOT the name of any LDAP attribute from which it takes its value).

Exception: When returned as part of a listLDAPAttributesResponse, name of the LDAP attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapEntity">
                <xs:annotation>
                    <xs:documentation>Organization model resource entity identifier (either its GUID or LDAP reference).

If the resource already exists the GUID will be available. If the resource does not exist, the LdapReference will be present and will provide the necessary information to derive an organization model resource from an LDAP entry or entries.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="LdapReference" type="ns13:XmlLdapReference" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Details of the LDAP entries from which the organization model resource is derived.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="endDate" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Date/time at which the entity becomes unavailable.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="guid" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique identifier of the resource.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="invalid" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Boolean value indicating whether the resource is valid (FALSE) or invalid (TRUE).

A resource may be invalid if, for example, the resource has been removed from the LDAP source, or if all of the data cannot be returned from the LDAP source. Check the invalidReason attribute for more details.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="invalidReason" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description of the reason why this resource is invalid.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Descriptive name of the resource.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="resource-type" default="HUMAN" type="ns13:ResourceType">
                    <xs:annotation>
                        <xs:documentation>Specifies the type of an organization model resource entity. One of:
- HUMAN
- DURABLE
- CONSUMABLE			</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="startDate" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Date/time at which the entity becomes available.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlLdapReference">
                <xs:annotation>
                    <xs:documentation>LDAP reference identifier, which identifies the LDAP entries from which an organization model resource is derived. It identifies both the LDAP container and the DN within the primary LDAP of that container.

If the LDAP container has any secondary LDAPs, the entry within each of those LDAPs is also identified (by its LDAP shared resource alias and DN). If there is more than one corresponding entry in a secondary LDAP for the primary LDAP entry, the number of additional entries is given in the "duplicate-count" attribute for that entry.
      </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="SecondaryLdapEntry" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of each secondary LDAP source associated with the primary LDAP source.</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:attribute name="duplicate-count" default="0" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>Number of entries, within the secondary LDAP resource, that match the foreign-key attributes of the primary LDAP resource; that join entries in the primary and secondary LDAP Resources. 

Although only one alias and DN pair will be listed for the secondary LDAP resource, there may be several possible matches for the primary LDAP resource entry. </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="ldap-alias" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Alias by which the LDAP connection is registered within Directory Engine. Used to look up that connection so that the attribute's value can be read.        </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="ldap-dn" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Distinguished Name (DN) that uniquely identifies an LDAP entry. Used to look up that entry so that the attribute values can be read.  </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="container-id" default="0" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>Identifier of the LDAP Container in which the referenced LDAP connections are defined, and from which this XmlLdapReference was constructed. </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="container-name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the LDAP Container in which the referenced LDAP connections are defined, and from which this XmlLdapReference was constructed. </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-alias" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Alias by which the LDAP connection is registered within Directory Engine. Used to look up that connection so that the attribute's value can be read.        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-dn" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Distinguished Name (DN) that uniquely identifies an LDAP entry. Used to look up that entry so that the attribute values can be read.  </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlModelEntity">
                <xs:annotation>
                    <xs:documentation>Extension of XmlModelEntityId that names the identified organization model entity.
		</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlModelEntityId">
                        <xs:attribute name="name" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the organization model entity. The name must be unique within entities of the same type and in the same majotr version of the organization model.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlOrgModelDeploymentInfo">
                <xs:annotation>
                    <xs:documentation>Lists all the properties of an organization-model deployment artefact.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="deployed" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Timestamp on which the organization model deployment artifact was deployed.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="major" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Major component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="micro" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Micro component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="minor" use="required" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Minor component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the organization model deployment artifact, as defined by TIBCO Business Studio.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="qualifier" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Qualifier component of the version number.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlOrgModelNode">
                <xs:annotation>
                    <xs:documentation>Details of the properties and children of an organization model entity. 

This information is used when browsing the organization model.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="selection-mode" type="ns13:SelectionMode" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Default algorithm used to select a resource from those associated with this organization model entity. 

Applies only to entities of type: GROUP, ORGANIZATION, ORGANIZATIONAL_UNIT, POSITION and LOCATION.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="child" type="ns13:XmlOrgModelNode" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of each child organization model entity belonging to the parent. If the child element array is:

- part of a listOrgModelOverviewResponse element, it will be populated for every entity (node) in the tree.

- part of another response element (e.g. openOrgModelResponse or browseModelNodeResponse), it will only be populated for the top-level node(s).</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="admin-restrictions" type="ns13:AdminLDAPContainer" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Only used if the  entity is of type organization.

If any LDAP containers are listed then this is the complete set of containers that are allowed to perform administration on this organization.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="calendar-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The optional alias by which a Calendar is referenced by the org-model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="has-children" default="false" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Whether the organization model entity (node) has any child nodes available. 

If these child nodes are not included within the current XmlOrgModelNode they can be retrieved with a subsequent call to Directory Engine, passing the current XmlOrgModelNode
as a parameter. This provides a mechanism for drilling down into the organization model.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ideal-number" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Number of resources that the organization model entity should hold, if its type is one that can hold resources. (This is just an indication, the value is not enforced.)   </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="location-guid" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>GUID of the location associated with the organization model entity (for those entities that have an association with a location: namely ORGANIZATION, ORGANIZATIONAL_UNIT and POSITION.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="resource-count" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Number of resources held by the organization model entity, if its type is one that can hold resources.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlOrgModelVersionDetail">
                <xs:annotation>
                    <xs:documentation>Identifies a major version number of an organization model, detailing the deployment artefacts that make up that major version.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:sequence>
                            <xs:element name="deployment" type="ns13:XmlOrgModelDeploymentInfo" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlParamDescriptor">
                <xs:annotation>
                    <xs:documentation>Definition of a parameter descriptor.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlQualifierDescriptor">
                        <xs:sequence minOccurs="0">
                            <xs:element name="alt-name" type="ns13:XmlVersionedName" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Definition of an alternative name for the parameter descriptor in another version of the organization model.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="name" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of this parameter descriptor.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="XmlParameterType">
                <xs:annotation>
                    <xs:documentation>Enumerated value identifying the type of a parameter descriptor, indicating the type of value it may hold.
      </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:NCName">
                    <xs:enumeration value="String"/>
                    <xs:enumeration value="Decimal"/>
                    <xs:enumeration value="Integer"/>
                    <xs:enumeration value="Boolean"/>
                    <xs:enumeration value="DateTime"/>
                    <xs:enumeration value="Date"/>
                    <xs:enumeration value="Time"/>
                    <xs:enumeration value="Enum"/>
                    <xs:enumeration value="EnumSet"/>
                    <xs:enumeration value="Set"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="XmlQualifiedEntity">
                <xs:annotation>
                    <xs:documentation>Description of a capability or privilege that can carry a parameter descriptor as a means of describing a qualifying value (that can be applied to that capability or privilege).
      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlModelEntity">
                        <xs:sequence>
                            <xs:element name="qualifier-desc" type="ns13:XmlQualifierDescriptor" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Description of the parameter descriptor used to validate any qualifying value that may be applied to the capability or privilege.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlQualifierDescriptor">
                <xs:annotation>
                    <xs:documentation>Definition of a parameter descriptor used as the qualifier for capabilities and privileges.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:sequence>
                            <xs:element name="enum-val" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>List of permitted enumeration values for this parameter descriptor (for a parameter descriptor which has a type of Enum or EnumSet).    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="default-value" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Default value of this parameter descriptor.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="description" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Description of this parameter descriptor.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique GUID of this parameter descriptor.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="type" default="String" type="ns13:XmlParameterType">
                            <xs:annotation>
                                <xs:documentation>Type of this parameter descriptor.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlResourceDetail">
                <xs:annotation>
                    <xs:documentation>Extension of XmlLdapEntity, which gives more detail on an LDAP entry - namely its attributes, capabilities and organization model entity associations.
      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns13:XmlLdapEntity">
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element name="attribute" type="ns13:XmlLdapAttribute" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of all organization model attributes held by the resource.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="capability" type="ns13:XmlModelEntity" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of all organization model capabilities possessed by the resource.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="group" type="ns13:XmlEntityAssociation" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of all organization model groups of which the resource is a member.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="position" type="ns13:XmlEntityAssociation" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of all organization model positions held by the resource.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="privilege" type="ns13:XmlInheritedAssociation" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of all organization model privileges held by the resource.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlVersionedName">
                <xs:annotation>
                    <xs:documentation>List of the names of an organization model entity as they are referenced in each major version of the organization model (for an entity whose names can vary across organization model versions).</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:attribute name="name" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the parameter descriptor in this version of the organization model.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:attributeGroup name="LdapIdentity">
                <xs:annotation>
                    <xs:documentation>LDAP directory entry identifier, using the entry's LDAP shared resource alias and Distinguished Name (DN).
      </xs:documentation>
                </xs:annotation>
                <xs:attribute name="ldap-alias" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Alias by which the LDAP connection is registered within Directory Engine. Used to look up that connection so that the attribute's value can be read.        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ldap-dn" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Distinguished Name (DN) that uniquely identifies an LDAP entry. Used to look up that entry so that the attribute values can be read.  </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:attributeGroup>
            <xs:attributeGroup name="XmlDuration">
                <xs:annotation>
                    <xs:documentation>Duration of time, expressed as a start and end date/time. Both values are optional but, if an end date is given, a start date must also be provided.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="endDate" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Date/time at which the entity becomes unavailable.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="startDate" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Date/time at which the entity becomes available.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:attributeGroup>
        </xs:schema>
        <xs:schema xmlns="http://api.brm.n2.tibco.com" xmlns:exception="http://exception.api.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://api.brm.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://api.organisation.common.n2.tibco.com"/>
            <xs:import namespace="http://datamodel.common.n2.tibco.com"/>
            <xs:import namespace="http://exception.api.common.n2.tibco.com"/>
            <xs:complexType name="getWorkListItemsResponseType">
                <xs:annotation>
                    <xs:documentation>Contains a page of work item returned from a user request.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startPosition" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work item list of the first work item on this page.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="endPosition" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work item list of the last work item on this page.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="totalItems" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The value returned in this attribute depends on the value specified for the getTotalCount attribute in the request. If:

- getTotalCount was 'true', totalItems returns the total number of work items in the work item list.

- getTotalCount was 'false', totalItems returns -1 if the work item list contains at least one work item, or 0 (zero) if the work item list is empty.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="workItems" type="ns1:WorkItem" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Complete details of each work item in this page of the work item  list.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="pendWorkItem">
                <xs:sequence maxOccurs="unbounded">
                    <xs:element name="workItemID" type="ns1:ManagedObjectID">
                        <xs:annotation>
                            <xs:documentation>ID of a work item that is to be pended.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="hiddenPeriod" type="ns1:HiddenPeriod">
                        <xs:annotation>
                            <xs:documentation>Information about how long the specified work item should remain hidden.

If a hiddenPeriod is specified the work item will transition to the PendHidden state, rather than Pended. Operations that work on the Pended state (e.g. reallocateWorkItem) cannot then access the work item until either of the following occurs.

- the hiddenPeriod expires.

- a further pendWorkItem operation is specified with a hiddenPeriod of 0. This cancels the current hiddenPeriod. (A negative duration or date that is in the past will have the same effect.)

The work item then transitions back to the Pended state.

NOTE: The duration of a hiddenPeriod can also be extended or reduced by issuing a further pendWorkItem operation with a new hiddenPeriod. The new hiddenPeriod overrides the existing hiddenPeriod and is calculated from the current date/time.

For example, suppose that a work item was pended at 2.30 with a hiddenPeriod of 30 minutes. If a further pendWorkItem is issued at 2.45 with:

- a hiddenPeriod of 2 hours, the work item will remain hidden until 4.45.

- a hiddenPeriod of 5 minutes, the work item will remain hidden until 2.50.

- a hiddenPeriod of 0, the work item will immediately transition to the Pended state.

- a hiddenPeriod of -5 minutes, the work item will immediately transition to the Pended state.
</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="reallocateWorkItemData">
                <xs:sequence maxOccurs="unbounded">
                    <xs:element name="workItemID" type="ns1:ManagedObjectID">
                        <xs:annotation>
                            <xs:documentation>ID of a work item that is to be reallocated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="resource" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the resource to whom the specified work item should be reallocated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="workItemPayload" type="ns1:WorkItemBody">
                        <xs:annotation>
                            <xs:documentation>Complete body of the specified work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="rescheduleWorkItem">
                <xs:sequence>
                    <xs:element name="workItemID" type="ns1:ObjectID">
                        <xs:annotation>
                            <xs:documentation>ID of a work item that is to be rescheduled. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="itemSchedule" type="ns1:ItemSchedule" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Optional item schedule period to be associated with the work item.   If no object is passed then the item schedule period will not be changed.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="itemBody" type="ns1:ItemBody" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Optional work item body containing data changes on a  reschedule. The body is the the data as a name/value pair.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="dynamicOrgAttributes" type="orgdto:XmlDynamicIdField" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>If specified the work item will be "re-offered" to the dynamic instance of the org model pointed to by the array of name / value pairs.  If the work item is opened / allocated to a resource and the resource still has visiblity of the work item in the new entities then it will remain allocated to them.   Otherwise it will be re-offered.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="setWorkItemPriority">
                <xs:sequence>
                    <xs:element name="workItemIDandPriority" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="workItemID" type="ns1:ManagedObjectID">
                                    <xs:annotation>
                                        <xs:documentation>ID of a work item that is to be allocated.</xs:documentation>
                                    </xs:annotation>
                                </xs:element>
                                <xs:element name="workItemPriority">
                                    <xs:complexType>
                                        <xs:choice>
                                            <xs:element name="absPriority" type="xs:int"/>
                                            <xs:element name="offsetPriority" type="xs:int"/>
                                        </xs:choice>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="addCurrentResourceToView">
                <xs:annotation>
                    <xs:documentation>Request element for addResourceToView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work view list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="addCurrentResourceToViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the addResourceToView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="allocateAndOpenNextWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for allocateAndOpenNextWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="resource" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the resource to whom the next work item should be allocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workListViewID" type="xs:long" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>The ID of an optional work list view to apply before selecting the next item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="allocateAndOpenNextWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for allocateAndOpenNextWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItem" type="ns1:WorkItem">
                            <xs:annotation>
                                <xs:documentation>Complete details of the work item that has been allocated and opened.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="allocateAndOpenWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for allocateAndOpenWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that is to be allocated and opened.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="resource" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the resource to whom the work item should be allocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="allocateAndOpenWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the allocateAndOpenWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItem" type="ns1:WorkItem">
                            <xs:annotation>
                                <xs:documentation>Complete details of a work item that has been allocated and opened.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="allocateWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for allocateWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that is to be allocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="resource" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the resource to whom the work item should be allocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="allocateWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the allocateWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItem" type="ns1:WorkItem">
                            <xs:annotation>
                                <xs:documentation>Complete details of a work item that has been allocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncCancelWorkItem">
                <xs:annotation>
                    <xs:documentation>Async - Request element for cancelWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncCancelWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the cancelWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncEndGroup">
                <xs:annotation>
                    <xs:documentation>Async - Request element for endGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="activityID" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique identifier for this operation, this identifier should be used to identify the reply to this message</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element ref="ns1:endGroup">
                            <xs:annotation>
                                <xs:documentation>Request element for endGroup operation.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncEndGroupResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the endGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="activityID" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique identifier for this message, this identifier will match the request identifier</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The ID of the group to end</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncRescheduleWorkItem">
                <xs:annotation>
                    <xs:documentation>Async - Request element for rescheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="itemSchedule" type="ns1:ItemSchedule" minOccurs="0"/>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="itemBody" type="ns1:ItemBody" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Optional work item body containing data changes on a  reschedule. The body is the the data as a name/value pair.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncRescheduleWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the rescheduleWorkItemResponse operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncResumeWorkItem">
                <xs:annotation>
                    <xs:documentation>Async - Request element for the resumeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncResumeWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the resumeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncScheduleWorkItem">
                <xs:annotation>
                    <xs:documentation>Async - Request element for scheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="ns1:scheduleWorkItem">
                            <xs:annotation>
                                <xs:documentation>Request element for scheduleWorkItem operation.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncScheduleWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the scheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncScheduleWorkItemWithModel">
                <xs:annotation>
                    <xs:documentation>Async - Request element for scheduleWorkItemWithModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="ns1:scheduleWorkItemWithModel">
                            <xs:annotation>
                                <xs:documentation>Request element for scheduleWorkItemWithModel operation.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncScheduleWorkItemWithModelResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the scheduleWorkItemWithModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncStartGroup">
                <xs:annotation>
                    <xs:documentation>Async - Request element for startGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="activityID" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique identifier for this operation, this identifier should be used to identify the reply to this message</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The ID of the group to start</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element ref="ns1:startGroup">
                            <xs:annotation>
                                <xs:documentation>Request element for startGroup operation.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncStartGroupResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for startGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="activityID" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Unique identifier for this message, this identifier will match the request identifier</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The ID of the group to start</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncSuspendWorkItem">
                <xs:annotation>
                    <xs:documentation>Async - Request element for the suspendWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="forceSuspend" default="false" type="xs:boolean" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If the suspend operation should be forced</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="asyncSuspendWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Async - Reply element for the suspendWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails">
                            <xs:annotation>
                                <xs:documentation>Information to track which work item this message is associated with.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="errorMessage" type="exception:ErrorLine" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Any error message that needs to be reported.  If the errorMessage element is not set, then the operation was successful.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="cancelWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for cancelWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ObjectID"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="cancelWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the cancelWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="chainedWorkItemNotification">
                <xs:annotation>
                    <xs:documentation>Request element for the chainedWorkItemNotification operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="groupID" type="xs:long"/>
                        <xs:element name="workItemID" type="ns1:ManagedObjectID" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>ID of the next work item in the chain, if there is no workItemID present then it means that the chaining group has been completed as there are no more work items in this chain.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="closeWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for closeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that is to be closed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItemPayload" type="ns1:WorkItemBody">
                            <xs:annotation>
                                <xs:documentation>Complete body of the specified work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="hiddenPeriod" type="ns1:HiddenPeriod">
                            <xs:annotation>
                                <xs:documentation>Information about how long the specified work item is hidden.


NOTE: If a hiddenPeriod is specified the work item will transition to the PendHidden state, rather than Pended. Operations that work on the Pended state (e.g. reallocateWorkItem) cannot then access the work item until the hiddenPeriod expires, at which point the system automatically transitions the work item back to the Pended state.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="closeWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the closeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that has been closed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="completeWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for completeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of the work item that is to be completed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItemPayload" type="ns1:WorkItemBody">
                            <xs:annotation>
                                <xs:documentation>Complete body of the specified work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="getNextPiledItem" type="xs:boolean" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>True, then return the next piled work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="completeWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the completeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice minOccurs="0">
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>ID of the work group that this work item belongs to.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="nextWorkItem" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of the next work item in the specified work group.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="createWorkListView" type="ns1:WorkListViewEdit">
                <xs:annotation>
                    <xs:documentation>Request element for createWorkListView operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="createWorkListViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the createWorkListView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteCurrentResourceFromView">
                <xs:annotation>
                    <xs:documentation>Request element for deleteResourceFromView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work view list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteCurrentResourceFromViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the deleteResourceFromView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteOrgEntityConfigAttributes">
                <xs:annotation>
                    <xs:documentation>Request element for deleteOrgEntityConfigAttributes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="attributeName" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of a configuration attribute that should be deleted from the specified resource.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="resource" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the resource from whom configuration attributes should be deleted.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteOrgEntityConfigAttributesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for deleteOrgEntityConfigAttributes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value indicating whether the request succeeded or failed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteWorkListView">
                <xs:annotation>
                    <xs:documentation>Request element for deleteWorkListView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteWorkListViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the deleteWorkListView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="editWorkListView">
                <xs:annotation>
                    <xs:documentation>Request element for editWorkListView operation.   If any of the opional elements are passed in they will overwrite any existing conguration for this view.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="ns1:WorkListViewEdit">
                            <xs:attribute name="workListViewID" use="required" type="xs:long">
                                <xs:annotation>
                                    <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="editWorkListViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the editWorkListView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workListViewID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The unique ID of the edited work list view.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="enableWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for enableWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ObjectID"/>
                        <xs:element name="itemBody" type="ns1:ItemBody"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="enableWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the enableWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="endGroup">
                <xs:annotation>
                    <xs:documentation>Request element for endGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The ID of the work group to be ended</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="endGroupResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the endGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Whether the request succeeded or failed</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllocatedWorkListItems">
                <xs:annotation>
                    <xs:documentation>Request element for getAllocatedWorkListItems operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="entityID" type="orgdto:XmlModelEntityId">
                            <xs:annotation>
                                <xs:documentation>ID of the organization model entity requiring an allocated work item list. </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="orderFilterCriteria" type="ns1:OrderFilterCriteria" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Specification of sort/filter criteria to be applied to the work item list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="getEnhancedAttributes" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>if true return a work item with all 40 Work Item attributes, otherwise only the original 14 Work Item Attributes.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="getTotalCount" default="true" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean defining whether BRM builds a count of the total number of work items in the work item list. If ‘false’ is passed in this attribute, and: 

- there is at least one item in the list, the totalItems value returned in the response is -1.

- there are no work items in the list, the totalItems value returned in the response is 0 (zero).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work items (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work item list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getBatchGroupIds" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Request element for getBatchGroupIds operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getBatchGroupIdsResponse">
                <xs:annotation>
                    <xs:documentation>Request element for getBatchGroupIds operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>List of group IDs that can be used when a group is required to be created.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getBatchWorkItemIds" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Request element for getBatchWorkItemIds operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getBatchWorkItemIdsResponse">
                <xs:annotation>
                    <xs:documentation>Request element for getBatchWorkItemIds operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ObjectID"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEditableWorkListViews">
                <xs:annotation>
                    <xs:documentation>Request element for getEditableWorkListViews operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="apiVersion" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Version of the work list view definition to be returned. Either:

- 2, to return a work list view that includes the getAllocatedItems attribute and resourcesRequired parameter, or

- 1, to return a work list view that omits the getAllocatedItems attribute and resourcesRequired parameter. (You should use this value to maintain compatibility with work list views created in pre-2.2 versions of BPM.) This is the default behaviour if apiVersion is not specified.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work views (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work view list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getEditableWorkListViewsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getEditableWorkListViews operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workListViews" type="ns1:WorkListViewPageItem" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Array of work list views the resource has permissions to edit.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOfferSet">
                <xs:annotation>
                    <xs:documentation>Request element for the getOfferSet operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of the work item for which an offer set is required.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="apiVersion" type="xs:int" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Specify the version of the return data set.   If omitted or set to 1 this API will return an array of GUIDs as it always has.  If specified as &gt; 1 it will return an array of XmlModelEntityIds.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOfferSetResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getOfferSet operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="entityGuid" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>ID of an organization model entitiy that belongs to the offer set.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="entityId" type="orgdto:XmlModelEntityId" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>The ID (including version and type) of the entity that belongs to the offer set.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgEntityConfigAttributes">
                <xs:annotation>
                    <xs:documentation>Request element for getOrgEntityConfigAttributes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="resource" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the resource for whom configuration attribute information is required.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgEntityConfigAttributesAvailable">
                <xs:annotation>
                    <xs:documentation>Request element for getOrgEntityConfigAttributesAvailable operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="startAt" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Position from which to start listing configuration attributes.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="numToReturn" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Number of configuration attributes to list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgEntityConfigAttributesAvailableResponse">
                <xs:annotation>
                    <xs:documentation>Response element for getOrgEntityConfigAttributesAvailable operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="orgEntityConfigAttributesAvailable" type="ns1:OrgEntityConfigAttributesAvailable">
                            <xs:annotation>
                                <xs:documentation>List of available configuration attributes that can be applied to an organization model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getOrgEntityConfigAttributesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for getOrgEntityConfigAttributes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="orgEntityConfigAttribute" type="ns1:OrgEntityConfigAttribute">
                            <xs:annotation>
                                <xs:documentation>Configuration attribute information for the specified resource.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPublicWorkListViews">
                <xs:annotation>
                    <xs:documentation>Request element for getPublicWorkViews operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="apiVersion" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Version of the work list view definition to be returned. Either:

- 2, to return a work list view that includes the getAllocatedItems attribute and resourcesRequired parameter, or

- 1, to return a work list view that omits the getAllocatedItems attribute and resourcesRequired parameter. (You should use this value to maintain compatibility with work list views created in pre-2.2 versions of BPM.) This is the default behaviour if apiVersion is not specified.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work views (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work view list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPublicWorkListViewsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getPublicWorkViews operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workListViews" type="ns1:WorkListViewPageItem" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Array of work list views the resource has permissions to use.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getResourceOrderFilterCriteria">
                <xs:annotation>
                    <xs:documentation>Request element for getResourceOrderFilterCriteria operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="resourceID" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>ID of the resource for whom work item list sort/filter criteria is required.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getResourceOrderFilterCriteriaResponse">
                <xs:annotation>
                    <xs:documentation>Response element for getResourceOrderFilterCriteria operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="orderFilterCriteria" type="ns1:OrderFilterCriteria">
                            <xs:annotation>
                                <xs:documentation>Specification of the work item list sort/filter defined for the requested resource.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getViewsForResource">
                <xs:annotation>
                    <xs:documentation>Request element for getViewsForResource operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="apiVersion" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Version of the work list view definition to be returned. Either:

- 2, to return a work list view that includes the getAllocatedItems attribute and resourcesRequired parameter, or

- 1, to return a work list view that omits the getAllocatedItems attribute and resourcesRequired parameter. (You should use this value to maintain compatibility with work list views created in pre-2.2 versions of BPM.) This is the default behaviour if apiVersion is not specified.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work items (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the list of views from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getViewsForResourceResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getViewsForResource operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workListViews" type="ns1:WorkListViewPageItem" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkItemHeader">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkItemHeader operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item for which header information is required.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkItemHeaderResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkItemHeader operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemHeader" type="ns1:WorkItemHeader">
                            <xs:annotation>
                                <xs:documentation>Header information about a work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkItemOrderFilter">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkItemOrderFilter operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="limitColumns" type="xs:short">
                            <xs:annotation>
                                <xs:documentation>Number of fields about which information should be returned. (Fields means the fields defined by BRM that can be used in sort/filter criteria expressions for work item lists.)

A value of 0 returns information about all fields.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="apiVersion" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Specify the version of the return data. If omitted or set to 1 this API will return standard Order and filter columns. If apiVersion &gt; 1 then it will return extra information about any work item attribute display name that exist.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkItemOrderFilterResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkListOrderFilter operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="columnData" type="ns1:ColumnDefinition" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Details of the fields defined by BRM that can be used in sort/filter criteria expressions for work item lists.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListItems">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkListItems operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:choice>
                            <xs:annotation>
                                <xs:documentation>Choice allows either:-
- Specifying a resourcesRequired of ALL will return a Work List for all resources.
- Specifying an entityID will return aWork List for that resource only.</xs:documentation>
                            </xs:annotation>
                            <xs:element name="entityID" type="orgdto:XmlModelEntityId">
                                <xs:annotation>
                                    <xs:documentation>ID of the organization model entity requiring a  work item list.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="resourcesRequired" type="ns1:ResourcesRequiredType">
                                <xs:annotation>
                                    <xs:documentation>Enumeration specifying what if any resource processing is required on the Work List.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                        <xs:element name="orderFilterCriteria" type="ns1:OrderFilterCriteria" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Specification of sort/filter criteria to be applied to the work item list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="getEnhancedAttributes" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>if true return a work item with all 40 Work Item attributes, otherwise only the original 14 Work Item Attributes.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="getTotalCount" default="true" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean defining whether BRM builds a count of the total number of work items in the work item list. If ‘false’ is passed in this attribute, and: 

- there is at least one item in the list, the totalItems value returned in the response is -1.

- there are no work items in the list, the totalItems value returned in the response is 0 (zero).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work items (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work item list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListItemsForGlobalData">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkLitsItemsForGlobalData operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="globalDataRef" type="xs:string" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>List of Global Data References to search for.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="orderFilterCriteria" type="ns1:OrderFilterCriteria" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Specification of sort/filter criteria to be applied to the work item list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work items (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work item list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListItemsForGlobalDataResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkLitsItemsForGlobalData operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Contains a page of work item returned from a user request.</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="startPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Position in the work item list of the first work item on this page.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="endPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Position in the work item list of the last work item on this page.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workListFacade" type="ns1:WorkListFacade" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If defined then this will list any display names that are specified for any Work Item Attributes.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItems" type="ns1:WorkItem" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Complete details of each work item in this page of the work item  list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListItemsForView">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkListItemsForView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="getAllocatedItems" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Optional default behaviour is false. If true then this is a request for allocated Work Items. If false then the request is for offered Work Items.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="getEnhancedAttributes" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>if true return a work item with all 40 Work Item attributes, otherwise only the original 14 Work Item Attributes.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="getTotalCount" default="true" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean defining whether BRM builds a count of the total number of work items in the work item list. If ‘false’ is passed in this attribute, and: 

- there is at least one item in the list, the totalItems value returned in the response is -1.

- there are no work items in the list, the totalItems value returned in the response is 0 (zero).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="numberOfItems" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Number of work items (in the work item list) to include in this page.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startPosition" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position in the work item list from which to start this page. (The list is zero-based. To start at the first item, specify 0.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The ID of the work list view from which to get the page of work items.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListItemsForViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkListItemsForView operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Contains a page of work item returned from a user request.</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="startPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Position in the work item list of the first work item on this page.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="endPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Position in the work item list of the last work item on this page.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="totalItems" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The value returned in this attribute depends on the value specified for the getTotalCount attribute in the request. If:

- getTotalCount was 'true', totalItems returns the total number of work items in the work item list.

- getTotalCount was 'false', totalItems returns -1 if the work item list contains at least one work item, or 0 (zero) if the work item list is empty.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workListFacade" type="ns1:WorkListFacade" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If the request is made with getEnhancedAttributes set, and any are defined then this will list any display names that are specified for any Work Item Attributes.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItems" type="ns1:WorkItem" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Complete details of each work item in this page of the work item  list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="customData" type="xs:string" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>A string attribute the caller can use to provide and custom data they wish to store with the work list view.  BRM will not look at or use this attribute value but will just store it with the work view definition.   If storing XML data the value should be wrapped in a CDATA section.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListItemsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkListItems operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Contains a page of work item returned from a user request.</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="startPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Position in the work item list of the first work item on this page.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="endPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Position in the work item list of the last work item on this page.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="totalItems" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The value returned in this attribute depends on the value specified for the getTotalCount attribute in the request. If:

- getTotalCount was 'true', totalItems returns the total number of work items in the work item list.

- getTotalCount was 'false', totalItems returns -1 if the work item list contains at least one work item, or 0 (zero) if the work item list is empty.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workListFacade" type="ns1:WorkListFacade" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If the request is made with getEnhancedAttributes set, and any are defined then this will list any display names that are specified for any Work Item Attributes.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItems" type="ns1:WorkItem" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Complete details of each work item in this page of the work item  list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListViewDetails">
                <xs:annotation>
                    <xs:documentation>Request element for the getWorkViewListDetails operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="apiVersion" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Version of the work list view definition to be returned. Either:

- 2, to return a work list view that includes the getAllocatedItems attribute and resourcesRequired parameter, or

- 1, to return a work list view that omits the getAllocatedItems attribute and resourcesRequired parameter. (You should use this value to maintain compatibility with work list views created in pre-2.2 versions of BPM.) This is the default behaviour if apiVersion is not specified.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="lockView" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Should this work list view be locked for editing?  A lock record will be placed against this view for the calling resource ID.   This lock is only removed when the view is updated or an explicit unlock is called.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkListViewDetailsResponse" type="ns1:WorkListView">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkViewListDetails operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="getWorkModel">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workModelID" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkModelResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workModel" type="ns1:WorkModel"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkModels">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkModels operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="startPosition" type="xs:long"/>
                        <xs:element name="numberOfItems" type="xs:long"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkModelsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkModels operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workModelList" type="ns1:WorkModelList"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkType">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkType operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workTypeID" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkTypeResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkType operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workType" type="dm:WorkType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkTypes">
                <xs:annotation>
                    <xs:documentation>Request element for getWorkTypes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="startPosition" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The position in BRM's complete set of Work Types to start the list from.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="numberOfItems" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The number of Work Types to include in the list.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getWorkTypesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getWorkTypes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workTypelList" type="ns1:WorkTypeList">
                            <xs:annotation>
                                <xs:documentation>Defines a 'page' of work type objects, which is a window over the entire set of work types defined in BRM.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="onNotification">
                <xs:annotation>
                    <xs:documentation>Request element for onNotification operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="messageDetails" type="ns1:AsyncWorkItemDetails"/>
                        <xs:element name="itemBody" type="ns1:ItemBody"/>
                        <xs:element name="allocationHistory" type="ns1:AllocationHistory" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="onNotificationResponse">
                <xs:annotation>
                    <xs:documentation>Request element for onNotification operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="openWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for openWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item to be opened.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="openWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the openWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemBody" type="ns1:WorkItemBody">
                            <xs:annotation>
                                <xs:documentation>Complete body of an opened work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="pendWorkItem" type="ns1:pendWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for pendWorkItem operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="pendWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the pendWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that has been pended.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="previewWorkItemFromList">
                <xs:annotation>
                    <xs:documentation>Request element for previewWorkItemFromList operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="entityID" type="orgdto:XmlModelEntityId">
                            <xs:annotation>
                                <xs:documentation>ID of the organization model entity for whom work items are to be previewed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItemID" type="ns1:ObjectID" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>ID of a work item to be previewed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="requiredField" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Fieldname to be included in the returned data. This defines the set of fields for which preview data is to be to be returned:

- If any fieldnames are specified, only those fields will be returned for each work item.

- If no fieldnames are specified, all fields will be returned for each work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="requireWorkType" type="xs:boolean" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Optiional element if set to true, then the response should include Work Type information.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="previewWorkItemFromListResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the previewWorkItemFromList operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemPreview" type="ns1:WorkItemPreview">
                            <xs:annotation>
                                <xs:documentation>Data field and value pairs for a previewed work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="pushNotification">
                <xs:annotation>
                    <xs:documentation>Request element for the pushNotification operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of the work item</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workTypeID" type="dm:WorkTypeSpec">
                            <xs:annotation>
                                <xs:documentation>ID of the work type</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="resourceIDs" type="orgdto:XmlModelEntityId" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>list of resource Ids with push destinations</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="reallocateWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for reallocateWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that is to be reallocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="resource" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Name of the resource to whom the specified work item should be reallocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="revertData" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean that defines whether the data associated with the specified work item is to be reverted or not.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="reallocateWorkItemData" type="ns1:reallocateWorkItemData">
                <xs:annotation>
                    <xs:documentation>Request element for reallocateWorkItemData operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="reallocateWorkItemDataResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the reallocateWorkItemData operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItem" type="ns1:WorkItem">
                            <xs:annotation>
                                <xs:documentation>Complete details of a work item that has been reallocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="reallocateWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the reallocateWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItem" type="ns1:WorkItem">
                            <xs:annotation>
                                <xs:documentation>Complete details of a work item that has been reallocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="rescheduleWorkItem" type="ns1:rescheduleWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for rescheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="rescheduleWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the rescheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Response indicates whether the operation has succeeded.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="resumeWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for the resumeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ObjectID"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="resumeWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the resumeWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="saveOpenWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for saveOpenWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of the open work item that is to be saved.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="workItemPayload" type="ns1:WorkItemBody">
                            <xs:annotation>
                                <xs:documentation>Complete body of the specified work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="saveOpenWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for saveOpenWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of the work item that has been saved.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="scheduleWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for scheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="item" type="ns1:Item">
                            <xs:annotation>
                                <xs:documentation>Basic, participant and work type information about the work item</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="itemSchedule" type="ns1:ItemSchedule" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>The schedule period to be associated with the work item.   If no object is passed then the item with have no schedule and cannot be worked on.   If an empty object is passed BRM will default this to immediately available with no target date.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="itemContext" type="ns1:ItemContext">
                            <xs:annotation>
                                <xs:documentation>The work item's context, as supplied by the application that scheduled the work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="itemBody" type="ns1:ItemBody">
                            <xs:annotation>
                                <xs:documentation>The work item body, containing each data field (as a name/value pair) required by the data model in the work item's work type. </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="dynamicOrgAttributes" type="orgdto:XmlDynamicIdField" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>If specified, this will specifiy the array of name / value pairs of attributes that DE will use to identify the correct dynamic instance for any template org model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="scheduleWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the scheduleWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ObjectID">
                            <xs:annotation>
                                <xs:documentation>The ID of the scheduled work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="scheduleWorkItemWithModel">
                <xs:annotation>
                    <xs:documentation>Request element for scheduleWorkItemWithModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="itemSchedule" type="ns1:ItemSchedule" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>The schedule period to be associated with the work item.   If no object is passed then the item with have no schedule and cannot be worked on.   If an empty object is passed BRM will default this to immediately available with no target date.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="itemContext" type="ns1:ItemContext">
                            <xs:annotation>
                                <xs:documentation>The work item's context, as supplied by the application that scheduled the work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="itemBody" type="ns1:ItemBody">
                            <xs:annotation>
                                <xs:documentation>The work item body, containing each data field (as a name/value pair) required by the data model in the work item's work type.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="dynamicEntities" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>If specified, this will be used to determine the entity that is used to schedule the work item. It will override any settings associated with the work model being used.

This field describes 1 of the following dynamic entities:-

An single resource query that will resolve the entity or entities. The query must conform to the Resource Query Language (RQL) specification. See the product documentation for detailed information about RQL syntax.

1 or more entity GUIDS defining the who the item is scheduled too.
</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="dynamicOrgAttributes" type="orgdto:XmlDynamicIdField" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>If specified, this will specifiy the array of name / value pairs of attributes that DE will use to identify the correct dynamic instance for any template org model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="groupID" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The ID of the group associated with this operation, if there is one.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="workModelUID" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The UID of the work model to scehdule this item against.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="workModelVersion" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The OSGi version range string of the work model to use.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="scheduleWorkItemWithModelResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the scheduleWorkItemWithModel operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ObjectID"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="setOrgEntityConfigAttributes">
                <xs:annotation>
                    <xs:documentation>Request element for setOrgEntityConfigAttributes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="orgEntityConfigAttributeSet" type="ns1:OrgEntityConfigAttributeSet">
                            <xs:annotation>
                                <xs:documentation>Set of configuration attributes and values to be set for the specified resource.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="resource" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the resource for whom configuration attributes should be set.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="setOrgEntityConfigAttributesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for setOrgEntityConfigAttributes operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value indicating whether the request succeeded or failed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="setResourceOrderFilterCriteria">
                <xs:annotation>
                    <xs:documentation>Request element for setResourceOrderFilterCriteria operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="orderFilterCriteria" type="ns1:OrderFilterCriteria">
                            <xs:annotation>
                                <xs:documentation>Specification of the work item list sort/filter criteria that should be be set for the specified resource.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="resourceID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>ID of the resource for whom work item list sort/filter criteria should be set.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="setResourceOrderFilterCriteriaResponse">
                <xs:annotation>
                    <xs:documentation>Response element for setResourceOrderFilterCriteria operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value that defines whether the request succeedeed or failed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="setWorkItemPriority" type="ns1:setWorkItemPriority">
                <xs:annotation>
                    <xs:documentation>Request element for setWorkItemPriority operation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="setWorkItemPriorityResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the setWorkItemPriority operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that has had a priority set</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="skipWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for skipWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that is to be skipped.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="skipWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the skipWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value that defines whether the request succeedeed or failed.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startGroup">
                <xs:annotation>
                    <xs:documentation>Request element for startGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="groupType" type="ns1:WorkGroupType">
                            <xs:annotation>
                                <xs:documentation>Enumeration identifying the type of work group to be used.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="description" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Textual description of the work group</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startGroupResponse">
                <xs:annotation>
                    <xs:documentation>Response element for startGroup operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="groupID" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The ID of the new work group</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="suspendWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for the suspendWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="workItemID" type="ns1:ObjectID"/>
                        <xs:element name="forceSuspend" default="false" type="xs:boolean" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="suspendWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the suspendWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="success" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unallocateWorkItem">
                <xs:annotation>
                    <xs:documentation>Request element for unallocateWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItemID" type="ns1:ManagedObjectID">
                            <xs:annotation>
                                <xs:documentation>ID of a work item that is to be deallocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unallocateWorkItemResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the unallocateWorkItem operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="workItem" type="ns1:WorkItem">
                            <xs:annotation>
                                <xs:documentation>Complete details of a work item that has been deallocated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unlockWorkListView">
                <xs:annotation>
                    <xs:documentation>Request element for the unlockWorkViewList operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="unlockWorkListViewResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the unlockWorkViewList operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="workListViewID" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The unique ID of the work list view to delete.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:complexType name="AllocationHistory" abstract="true">
                <xs:annotation>
                    <xs:documentation>Contains single allocation history record</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="resourceID" type="xs:string"/>
                </xs:sequence>
                <xs:attribute name="allocationDate" use="required" type="xs:dateTime"/>
                <xs:attribute name="allocationID" use="required" type="xs:long"/>
            </xs:complexType>
            <xs:complexType name="AsyncWorkItemDetails">
                <xs:annotation>
                    <xs:documentation>Definition of the additional information required for asynchronous work item handling.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="workItemId" type="ns1:ObjectID"/>
                    <xs:element name="activityID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Unique identifier for this message, this identifier will match the request and the response</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="uaSequenceId" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Order in which to process the messages for this work item, starting at 1 for the first message in the case of a request. (For a response this is the last message processed from User Task) [A zero implies no messages processed for this work item]</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="brmSequenceId" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Order in which to process the messages for this work item, starting at 1 for the first message in the case of a request. (For a response this is the last BRM sequence ID processed for this work item before sending this message). [A zero implies no messages processed for this work item]</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BaseItemInfo" abstract="true">
                <xs:annotation>
                    <xs:documentation>Base information required for all work items.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="description" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Textual description of the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="distributionStrategy" use="required" type="ns1:DistributionStrategy">
                    <xs:annotation>
                        <xs:documentation>Distribution strategy to be used for the work item - either OFFER or ALLOCATE.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="groupID" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>ID of the work group that the work item belongs to.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="priority" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Priority of the work item.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="BaseModelInfo">
                <xs:annotation>
                    <xs:documentation>Base model definition, containing all model informaion that is static (i.e. not subject to change via a runtime expression).</xs:documentation>
                </xs:annotation>
                <xs:attribute name="description" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The description of the work model.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the work model</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="priority" default="50" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>The priority of the work item this model will create (defaults to 50).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:simpleType name="ColumnCapability">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the type of operations supported by a column for work list sorting and/or filtering (e.g. NONE, ORDER, FILTER).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="NONE"/>
                    <xs:enumeration value="ORDER"/>
                    <xs:enumeration value="FILTER"/>
                    <xs:enumeration value="BOTH_ORDER_FILTER"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="ColumnDefinition">
                <xs:annotation>
                    <xs:documentation>Details of a field defined by BRM that can be used in sort/filter criteria expressions for work item lists.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="capability" type="ns1:ColumnCapability">
                    <xs:annotation>
                        <xs:documentation>Enumerated value that defines whether the field can be used in expressions that define sort criteria and/or filter criteria.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Textual description of the field.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="displayName" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>If requested by setting API Version &gt; 1, then this attribute will provide the Display Name if this column is a Work Item Attribute and has an display name defined.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="id" use="required" type="xs:short">
                    <xs:annotation>
                        <xs:documentation>ID of the field.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="isWorkListAttribute" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If requested If requested by setting API Version &gt; 1, this  atrribute will be true if the specified field is a work list attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the field.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" type="ns1:ColumnType">
                    <xs:annotation>
                        <xs:documentation>Type of the field (for example, string or numeric).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="ColumnOrder">
                <xs:annotation>
                    <xs:documentation>Details of the sort order of a field defined by BRM that can be used in sort/filter criteria expressions for work item lists.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="columnDef" type="ns1:ColumnDefinition">
                        <xs:annotation>
                            <xs:documentation>Details of the field.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="ascending" use="required" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Boolean value defining whether the column should be sorted in ascending (TRUE) or descending (FALSE) order.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:simpleType name="ColumnType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the type of a work list (e.g. COL_NUMERIC, COL_DATETIME).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="COL_UNSPECIFIED"/>
                    <xs:enumeration value="COL_NUMERIC"/>
                    <xs:enumeration value="COL_STRING"/>
                    <xs:enumeration value="COL_DATETIME"/>
                    <xs:enumeration value="COL_BOOLEAN"/>
                    <xs:enumeration value="COL_STATE"/>
                    <xs:enumeration value="COL_DISTSTRATEGY"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="DistributionStrategy" final="restriction">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the the allowable types of distribution strategy (e.g. OFFER, ALLOCATE).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="OFFER"/>
                    <xs:enumeration value="ALLOCATE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="HiddenPeriod">
                <xs:annotation>
                    <xs:documentation>Information about how long the specified work item should remain hidden.

If a hiddenPeriod is specified the work item will transition to the PendHidden state, rather than Pended. Operations that work on the Pended state (e.g. reallocateWorkItem) cannot then access the work item until either of the following occurs.

- the hiddenPeriod expires.

- a further pendWorkItem operation is specified with a hiddenPeriod of 0. This cancels the current hiddenPeriod. (A negative duration or date that is in the past will have the same effect.)

The work item then transitions back to the state that was in before it was hidden.

NOTE: The duration of a hiddenPeriod can also be extended or reduced by issuing a further pendWorkItem operation with a new hiddenPeriod. The new hiddenPeriod overrides the existing hiddenPeriod and is calculated from the current date/time.

For example, suppose that a work item was pended at 2.30 with a hiddenPeriod of 30 minutes. If a further pendWorkItem is issued at 2.45 with:

- a hiddenPeriod of 2 hours, the work item will remain hidden until 4.45.

- a hiddenPeriod of 5 minutes, the work item will remain hidden until 2.50.

- a hiddenPeriod of 0, the work item will immediately transition to the Allocated state.

- a hiddenPeriod of -5 minutes, the work item will immediately transition to the Allocated state.</xs:documentation>
                </xs:annotation>
                <xs:choice minOccurs="0">
                    <xs:element name="hiddenDuration" type="ns1:ItemDuration">
                        <xs:annotation>
                            <xs:documentation>Duration that the work item is hidden.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="visibleDate" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Fixed date/time when the work item becomes visible.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="Item">
                <xs:annotation>
                    <xs:documentation>Definition of a work item that is to be scheduled, providing basic, participant and work type information about the work item.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:BaseItemInfo">
                        <xs:choice>
                            <xs:element name="entities" type="orgdto:XmlModelEntityId" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Details of the organization model entities for whom the work item is to be scheduled.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="entityQuery" type="orgdto:XmlResourceQuery">
                                <xs:annotation>
                                    <xs:documentation>Specification of a resource query.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                        <xs:attribute name="workTypeUID" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>ID of the work type that defines the data specification for this work item.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="workTypeVersion" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>OSGi version range string of the work type that is to be used.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ItemBody">
                <xs:annotation>
                    <xs:documentation>Work item body definition, containing each data field (as a name/value pair) required by the data model defined in the work item's work type. 

				The associated work type specifies each data field's type and whether it is an INPUT, OUTPUT or INOUT parameter.</xs:documentation>
                </xs:annotation>
                <xs:choice>
                    <xs:element name="parameter" type="ns1:ParameterType" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the data fields associated with this work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="ItemContext">
                <xs:annotation>
                    <xs:documentation>Context of the work item, as supplied by the application that scheduled the work item.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="activityID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>ID of the activity from which the work item was generated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="activityName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the activity from which the work item was generated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="appInstance" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Identifier of the application instance.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="appName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the application.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="appID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>ID of the application.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="appInstanceDescription" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Description of the application instance.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ItemDuration">
                <xs:annotation>
                    <xs:documentation>Amount of time that can be spent on a work item, or for which a work item can be hidden.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="days" default="0" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Number of days in this duration period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="hours" default="0" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Number of hours in this duration period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="minutes" default="0" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Number of minutes in this duration period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="months" default="0" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Number of months in this duration period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="weeks" default="0" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Number of weeks in this duration period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="years" default="0" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Number of years in this duration period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="ItemPrivilege">
                <xs:annotation>
                    <xs:documentation>Definition of the privileges required to perform specific actions on a work item.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="Suspend" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to suspend a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="StatelessRealloc" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to (statelessly) reallocate a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="StatefulRealloc" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to (statefully) reallocate a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Dellocate" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to deallocate a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Delegate" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to delegate a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Skip" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to skip a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Piling" type="ns1:Privilege" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Details of the privileges required to pile a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ItemSchedule">
                <xs:annotation>
                    <xs:documentation>Schedule information to be associated with a work item.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startDate" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Date at which this work item can be started.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:choice minOccurs="0">
                        <xs:element name="maxDuration" type="ns1:ItemDuration">
                            <xs:annotation>
                                <xs:documentation>Duration of the work item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="targetDate" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>Date by which this work item must be finished.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ManagedObjectID">
                <xs:annotation>
                    <xs:documentation>ID of a specific version of a work item.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:ObjectID">
                        <xs:attribute name="version" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>Version of the work item.

If not set, the latest version will be used.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="MethodAuthorisationAction">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="scheduleWorkItem"/>
                    <xs:enumeration value="cancelWorkItem"/>
                    <xs:enumeration value="suspendWorkItem"/>
                    <xs:enumeration value="viewWorkList"/>
                    <xs:enumeration value="setResourceOrderFilterCriteria"/>
                    <xs:enumeration value="openOtherResourcesItems"/>
                    <xs:enumeration value="closeOtherResourcesItems"/>
                    <xs:enumeration value="skipWorkItem"/>
                    <xs:enumeration value="reallocateWorkItemToWorld"/>
                    <xs:enumeration value="reallocateToOfferSet"/>
                    <xs:enumeration value="pendWorkItem"/>
                    <xs:enumeration value="workItemAllocation"/>
                    <xs:enumeration value="autoOpenNextWorkItem"/>
                    <xs:enumeration value="rescheduleWorkItem"/>
                    <xs:enumeration value="enableWorkItem"/>
                    <xs:enumeration value="changeAllocatedWorkItemPriority"/>
                    <xs:enumeration value="changeAnyWorkItemPriority"/>
                    <xs:enumeration value="viewGlobalWorkList"/>
                    <xs:enumeration value="authenticatedUser"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="MethodAuthorisationComponent">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="BRM"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="NextWorkItem">
                <xs:annotation>
                    <xs:documentation>Definition of the next work item that is of the same piled type as the work item just processed.

(BRM uses this definition with the Piling pattern to identify the next work item to Work Presentation.)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="nextItem" type="ns1:ManagedObjectID" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Unique ID of the next work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ObjectID">
                <xs:annotation>
                    <xs:documentation>ID of a work item (without specifying any particular version of the object).</xs:documentation>
                </xs:annotation>
                <xs:attribute name="id" use="required" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>Unique ID of the work item.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="OrderFilterCriteria">
                <xs:annotation>
                    <xs:documentation>Specification of sort/filter criteria to be applied to a work item list.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="order" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Expression defining the sort criteria to be applied to the work item list. 

Refer to the developer's guide for more information about how to define this expression.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="filter" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Expression defining the filter criteria to be applied to the work item list. 

Refer to the developer's guide for more information about how to define this expression.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="OrgEntityConfigAttribute">
                <xs:annotation>
                    <xs:documentation>Definition of a configuration attribute for an organizational model entity.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attributeName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the configuration attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeValue" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Value of the configuration attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="readOnly" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value specifying whether the configuration attribute is read only.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="OrgEntityConfigAttributeSet">
                <xs:annotation>
                    <xs:documentation>Definition of a configuration attribute setting (a name/value pair).</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attributeName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the configuration attribute. This must be one of the following:

- MaxOpenWorkItemCount, which defines the maximum number of open work items allowed concurrently (for the specified organization model entity).

- WorkItemAutoOpen, which defines whether to automatically open the next work item when completing a work item.

NOTE: Other configuration attributes are part of the private API and reserved for internal use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeValue" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Value of the configuration attribute. This must be one of the following:

- for MaxOpenWorkItemCount, an integer.
- for WorkItemAutoOpen, a boolean.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="OrgEntityConfigAttributesAvailable">
                <xs:annotation>
                    <xs:documentation>Set of configuration attributes provided by BRM that can be applied to organization model entities.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attributeName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Name of the configuration attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="readOnly" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value specifying whether the configuration attribute is read only.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ParameterType">
                <xs:annotation>
                    <xs:documentation>Definition of a data parameter passed to BRM when a work item is scheduled.</xs:documentation>
                </xs:annotation>
                <xs:choice>
                    <xs:element name="ComplexValue" type="xs:anyType" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Value(s) of the complex object.  The value is of xs:anyType as it contains the entire complex object as XML.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Value" type="xs:string" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Parameter value(s) - for example, 10.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:choice>
                <xs:attribute name="Array" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Boolean value indicating whether this parameter contains an array of values (default is false).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Parameter name - for example, Age.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="Privilege">
                <xs:annotation>
                    <xs:documentation>Definition of a privilege.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the required privilege (i.e. what BRM will look for in DE).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="qualifier" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>(Optional) qualifier for this privilege.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:simpleType name="ResourcesRequiredType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining if specific resources are being requested. Currently the only supported option is ALL.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ALL"/>
                    <xs:enumeration value="MINE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ScheduleStatus">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining whether a work item is within its schedule period (e.g. BEFORE, DURING, AFTER).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="NO_SCHEDULE"/>
                    <xs:enumeration value="BEFORE"/>
                    <xs:enumeration value="DURING"/>
                    <xs:enumeration value="AFTER"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="WorkGroupType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the the types of work group supported by BRM for implementing group patterns (e.g. CHAINING, SEPARATION_OF_CONCERNS).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CHAINING"/>
                    <xs:enumeration value="SEPARATION_OF_CONCERNS"/>
                    <xs:enumeration value="RETAIN_MOST_FAMILIAR"/>
                    <xs:enumeration value="RETAIN_FAMILIAR"/>
                    <xs:enumeration value="CASE_HANDLING"/>
                    <xs:enumeration value="NO_GROUP"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="WorkItem">
                <xs:annotation>
                    <xs:documentation>Complete details of a work item.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="id" type="ns1:ManagedObjectID">
                        <xs:annotation>
                            <xs:documentation>ID of the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="header" type="ns1:WorkItemHeader">
                        <xs:annotation>
                            <xs:documentation>Header information about the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributes" type="ns1:WorkItemAttributes" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Data attributes that can be set on a work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="body" type="ns1:WorkItemBody" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Complete body of the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="workType" type="dm:WorkTypeSpec" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Details of the work type associated with the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="state" type="ns1:WorkItemState">
                        <xs:annotation>
                            <xs:documentation>Enumerated value defining the current state of the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="visible" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value indicating whether or not the work item is visible.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkItemAttributes">
                <xs:annotation>
                    <xs:documentation>Custom data attributes that can be set for a work item.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="attribute1" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>The first custom data attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute10">
                    <xs:annotation>
                        <xs:documentation>The tenth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute11">
                    <xs:annotation>
                        <xs:documentation>The eleventh custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute12">
                    <xs:annotation>
                        <xs:documentation>The twelfth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute13">
                    <xs:annotation>
                        <xs:documentation>The thirteenth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute14">
                    <xs:annotation>
                        <xs:documentation>The fourteenth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute15" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>15th work item attribute</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute16" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>16th work item attribute</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute17" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>17th work item attribute</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute18" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>18th work item attribute</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute19" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>19th work item attribute</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute2">
                    <xs:annotation>
                        <xs:documentation>The second custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute20" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>20th work item attribute</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute21">
                    <xs:annotation>
                        <xs:documentation>21st work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute22">
                    <xs:annotation>
                        <xs:documentation>22nd work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute23">
                    <xs:annotation>
                        <xs:documentation>23rd work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute24">
                    <xs:annotation>
                        <xs:documentation>24th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute25">
                    <xs:annotation>
                        <xs:documentation>25th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute26">
                    <xs:annotation>
                        <xs:documentation>26th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute27">
                    <xs:annotation>
                        <xs:documentation>27th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute28">
                    <xs:annotation>
                        <xs:documentation>28th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute29">
                    <xs:annotation>
                        <xs:documentation>29th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute3">
                    <xs:annotation>
                        <xs:documentation>The third custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute30">
                    <xs:annotation>
                        <xs:documentation>30th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute31">
                    <xs:annotation>
                        <xs:documentation>31st work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute32">
                    <xs:annotation>
                        <xs:documentation>32nd work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute33">
                    <xs:annotation>
                        <xs:documentation>33rd work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute34">
                    <xs:annotation>
                        <xs:documentation>34th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute35">
                    <xs:annotation>
                        <xs:documentation>35th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute36">
                    <xs:annotation>
                        <xs:documentation>36th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute37">
                    <xs:annotation>
                        <xs:documentation>37th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute38">
                    <xs:annotation>
                        <xs:documentation>38th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute39">
                    <xs:annotation>
                        <xs:documentation>39th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="255"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute4">
                    <xs:annotation>
                        <xs:documentation>The fourth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute40">
                    <xs:annotation>
                        <xs:documentation>40th work item attribute</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="255"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute5" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>The fifth custom data attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute6" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The sixth custom data attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute7" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The seventh custom data attribute.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="attribute8">
                    <xs:annotation>
                        <xs:documentation>The eighth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="attribute9">
                    <xs:annotation>
                        <xs:documentation>The ninth custom data attribute.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="20"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkItemBody">
                <xs:annotation>
                    <xs:documentation>Complete work item body returned when a client opens the work item.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="dataModel" type="dm:DataModel">
                        <xs:annotation>
                            <xs:documentation>Sets of INPUT, OUTPUT and INOUT parameters that define the data model for the work item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkItemFlags">
                <xs:annotation>
                    <xs:documentation>Various flags that can be set against a work item.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="scheduleStatus" type="ns1:ScheduleStatus">
                        <xs:annotation>
                            <xs:documentation>Enumerated value defining whether a work item is within its schedule period.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkItemHeader">
                <xs:annotation>
                    <xs:documentation>Main information about a work item used in a work list.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:BaseItemInfo">
                        <xs:sequence>
                            <xs:element name="flags" type="ns1:WorkItemFlags">
                                <xs:annotation>
                                    <xs:documentation>Various flags that can be set against a work item in a work list.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="itemContext" type="ns1:ItemContext">
                                <xs:annotation>
                                    <xs:documentation>Context of the work item, as supplied by the application that scheduled the work item.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="endDate" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>Date / time by which work on this work item must be completed.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="startDate" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>Date / time from which work on this work item may start.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkItemPreview">
                <xs:annotation>
                    <xs:documentation>Definition of the work item data set for a previewed work item.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:ManagedObjectID">
                        <xs:sequence>
                            <xs:element name="FieldPreview" type="dm:FieldType" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Data field and value pairs for a previewed work item.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="workType" type="dm:WorkTypeSpec" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Details of the work type associated with the work item only if this has been requested.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="WorkItemScriptOperation">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the operation on which a work item script is performed (e.g. OPEN, CLOSE, CANCEL).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="OPEN"/>
                    <xs:enumeration value="CLOSE"/>
                    <xs:enumeration value="COMPLETE"/>
                    <xs:enumeration value="PEND"/>
                    <xs:enumeration value="SCHEDULE"/>
                    <xs:enumeration value="RESCHEDULE"/>
                    <xs:enumeration value="SYSAPPEND"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="WorkItemScriptType">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the type of a work item script (e.g. JSCRIPT, JPYTHON).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="JSCRIPT"/>
                    <xs:enumeration value="JYTHON"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="WorkItemState">
                <xs:annotation>
                    <xs:documentation>Enumerated value defining the current lifecycle state of a work item (e.g. CREATED, OFFERED, ALLOCATED).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CREATED"/>
                    <xs:enumeration value="OFFERED"/>
                    <xs:enumeration value="ALLOCATED"/>
                    <xs:enumeration value="OPENED"/>
                    <xs:enumeration value="PENDED"/>
                    <xs:enumeration value="PENDHIDDEN"/>
                    <xs:enumeration value="SUSPENDED"/>
                    <xs:enumeration value="COMPLETED"/>
                    <xs:enumeration value="CANCELLED"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="WorkListFacade">
                <xs:annotation>
                    <xs:documentation>Definition of a Work List Facade list any attributes that have a display name defined.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="facade" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:attribute name="attributeName" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The attribute name for which a display name is available. This is the real attribute name provided by BRM i.e.Attribute1, Attribute2 .......</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="displayName" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>This is the name that should be used when displaying this attribute, and is defined and deployed from Business Studio. </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkListView">
                <xs:annotation>
                    <xs:documentation>Definition of a full work list view object.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:WorkListViewEdit">
                        <xs:attribute name="creationDate" use="required" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The date the work view was created.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="locker">
                            <xs:annotation>
                                <xs:documentation>The GUID of the resource that currently had this work list view locked for editing.</xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:maxLength value="36"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="modificationDate" use="required" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The date the work view was last modified.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="workViewID" use="required" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The uniique ID of the work view.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkListViewCommon">
                <xs:annotation>
                    <xs:documentation>Definition of common base object used for reading and writing work list views.</xs:documentation>
                </xs:annotation>
                <xs:sequence minOccurs="0">
                    <xs:choice>
                        <xs:element name="entityID" type="orgdto:XmlModelEntityId" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>ID of the organization model entity that this view is to be for.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="resourcesRequired" type="ns1:ResourcesRequiredType" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Specifying what if any resource processing is required on the Work List. If sspecified and the user has the correct priviliege, this will ignore any entity specified in the Work View itself.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                    <xs:element name="orderFilterCriteria" type="ns1:OrderFilterCriteria" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Specification of sort/filter criteria to be applied to the work item list.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="description">
                    <xs:annotation>
                        <xs:documentation>Optional description that can be given to the work list view.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="255"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="getAllocatedItems" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Optional default behaviour is false. If true then this is a request for allocated Work Items. If false then the request is for offered Work Items.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required">
                    <xs:annotation>
                        <xs:documentation>The user defined name of the view.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="64"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="owner">
                    <xs:annotation>
                        <xs:documentation>The resourceID of the owner of this view.   If omitted the ID of the resource calling the createWorkListView API will  be used.   This resource can always edit or use this view.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="36"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="public" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Is this view publlic, i.e. can it be used by any AMX-BPM user.   If TRUE then it will be visible to ALL users, not just those in the "users" set.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkListViewEdit">
                <xs:annotation>
                    <xs:documentation>Definition of a work list view used for editing (i.e. create and delete operations).</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:WorkListViewCommon">
                        <xs:sequence minOccurs="0">
                            <xs:element name="authors" type="orgdto:XmlModelEntityId" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Array of XmlModelEntityId objects for entities (GROUPS, POSITIONS, ORGUNITS and RESOURCES) who are allowed to edit the view.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="users" type="orgdto:XmlModelEntityId" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Array of XmlModelEntityId objects for resources who are allowed to use the view.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="customData" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>A string attribute the caller can use to provide and custom data they wish to store with the work list view.  BRM will not look at or use this attribute value but will just store it with the work view definition.   If storing XML data the value should be wrapped in a CDATA section.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkListViewPageItem">
                <xs:annotation>
                    <xs:documentation>Definition of a work list view used for paginated lists.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns1:WorkListViewCommon">
                        <xs:attribute name="creationDate" use="required" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The date the work view was created.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="modificationDate" use="required" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>The date the work view was last modified.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="workViewID" use="required" type="xs:long">
                            <xs:annotation>
                                <xs:documentation>The uniique ID of the work view.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkModel">
                <xs:annotation>
                    <xs:documentation>Definition of a work model.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="BaseModelInfo" type="ns1:BaseModelInfo"/>
                    <xs:element name="WorkModelSpecification" type="ns1:WorkModelSpecification"/>
                    <xs:element name="WorkModelEntities" type="ns1:WorkModelEntities"/>
                    <xs:element name="WorkModelTypes" type="ns1:WorkModelTypes"/>
                    <xs:element name="ItemPrivileges" type="ns1:ItemPrivilege" minOccurs="0"/>
                    <xs:element name="WorkModelScripts" type="ns1:WorkModelScripts" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="workModelUID" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unique ID (or GUID) of the work model.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkModelEntities">
                <xs:annotation>
                    <xs:documentation>Complete entity definition for a work model. 

This includes mutluple entity sets or expressions with a single expression that determines which set to use.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="WorkModelEntity" type="ns1:WorkModelEntity" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="expression" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The expression that BRM should use to chose one of the WorkModelEntity objects at runtime.   If no expression is supplied then BRM will always choose the first entry</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkModelEntity">
                <xs:annotation>
                    <xs:documentation>Definition of a work model entity, either as a set of entities or as an expression to evalute at runtime.</xs:documentation>
                </xs:annotation>
                <xs:choice minOccurs="0">
                    <xs:element name="Entities" type="orgdto:XmlModelEntityId" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>A set of organisational entities that should be used by BRM at runtime when scheduling the item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="EntityQuery" type="orgdto:XmlResourceQuery">
                        <xs:annotation>
                            <xs:documentation>This is an expression that should be used by BRM at runtime to query Directory Engine for a set of organistion enities to use when scheduling the item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:choice>
                <xs:attribute name="distributionStrategy" use="required" type="ns1:DistributionStrategy">
                    <xs:annotation>
                        <xs:documentation>Whether to use ALLOCATE or OFFER with the provided set to entities or entity expression.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkModelList">
                <xs:annotation>
                    <xs:documentation>Definition of a 'page' of work model objects, which is a window over the entire set of work models defined in BRM.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startPosition" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The starting position of the first work model in the requested page.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="endPosition" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>The end position of the last work model in the requested page.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="type" type="ns1:WorkModel" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Array of work models that constitute the page.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkModelMapping">
                <xs:annotation>
                    <xs:documentation>Definition of a mapping of a work model parameter to a work type parameter.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="TypeParamName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name of the WorkType parameter this mapping relates to.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:choice>
                        <xs:annotation>
                            <xs:documentation>Users should map either Model parameter or if no appropriate one exists provide default value.</xs:documentation>
                        </xs:annotation>
                        <xs:element name="DefaultValue" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>A default value to specify for the WorkType parameter if no appropriate Model parameter exist to map from.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="ModelParamName" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The name of the Model parameter whose value should be mapped to map to this WorkType parameter.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkModelScript">
                <xs:annotation>
                    <xs:documentation>Definition of a work model script</xs:documentation>
                </xs:annotation>
                <xs:attribute name="scriptBody" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The body of the script to be run on the specified work item operation.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="scriptLanguage" use="required" type="ns1:WorkItemScriptType">
                    <xs:annotation>
                        <xs:documentation>The language of the script to be run e.g. JSCRIPT, JYTHON etc...</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="scriptLanguageExtension" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The file extension of the language of the script to be run e.g. js, py etc...</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="scriptLanguageVersion" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The version of the language of the script to be run e.g. 2.2.1, 1.2a etc...</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="scriptOperation" use="required" type="ns1:WorkItemScriptOperation">
                    <xs:annotation>
                        <xs:documentation>What work item operation is the script for e.g. OPEN, CLOSE, COMPLETE etc...</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="scriptTypeID" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The ID of the script type used during the use of complex fields in scripts.
					This will either be populated with a task library ID or process ID.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkModelScripts">
                <xs:annotation>
                    <xs:documentation>Definition of a set of work model scripts.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="WorkModelScript" type="ns1:WorkModelScript" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkModelSpecification">
                <xs:annotation>
                    <xs:documentation>Specification of a work model, defining the input, output and inout paramaters defined by the model.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="dm:DataModel"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="WorkModelType">
                <xs:annotation>
                    <xs:documentation>Work type definition for a work model, containing the GUID of the work type to reference along with paramater mapping information.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="WorkModelMapping" type="ns1:WorkModelMapping" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="version" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The OSGi version range of the required work type.   If omitted the latest version will be used.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="workTypeID" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The unique ID of the work type as generated by the design type environment.   This will be a GUID.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkModelTypes">
                <xs:annotation>
                    <xs:documentation>Complete work type definition for a work model. This includes multiple work type ID references and an expression that determines which work type to use.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="WorkModelType" type="ns1:WorkModelType" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="expression" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The expression that BRM should use to chose one of the WorkModelType objects at runtime.   If no expression is supplied then BRM will always choose the first entry</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkTypeList">
                <xs:annotation>
                    <xs:documentation>Defines a 'page' of work type objects, which is a window over the entire set of work types defined in BRM.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startPosition" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position (in BRM's complete work type set) of the first work type in the WorkTypeList.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="endPosition" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Position (in BRM's complete work type set) of the last work type in the WorkTypeList.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="types" type="dm:WorkType" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Contents of the WorkTypeList (as an array of work types).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns="http://directory.api.de.bpm.tibco.com" xmlns:de="http://base.api.de.bpm.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://directory.api.de.bpm.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://base.api.de.bpm.tibco.com"/>
            <xs:annotation>
                <xs:documentation>
      A note on the naming conventions used:
      Element types from which Java classes are generated should be named using the same convention as Java classes (i.e. camel-casing). They should also have the  prefix "Xml" in order to avoid any conflict with any POJO classes of the same       name.
      Attributes, and the name of sub-elements, are in lower-case, with hyphens used to separate words. For example, "first-name", "primary-attribute" and "parent-id".
      Sub-element names should also be singular; e.g. "child" and not "children","property" and not "properties".
        </xs:documentation>
            </xs:annotation>
            <xs:element name="deleteContainer">
                <xs:annotation>
                    <xs:documentation>Request element for deleteLDAPContainer operation. This service will delete the configuration of the identified LDAP container.
            
An LDAP container can only be deleted if it no longer has any resources associated with it.
           
If the attribute "delete-resources" is true, and the caller has the required privileges for either of the system action "resourceAdmin" or "deleteResourceAdmin", any associated resources will be deleted before the LDAP container is deleted.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="container-id" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Unique ID of the LDAP container to be deleted.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="delete-resources" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Indicates whether the resources derived from the LDAP container should also be deleted.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteContainerResponse">
                <xs:annotation>
                    <xs:documentation>Response element for deleteLDAPContainer operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="successful" use="required" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Boolean value that indicates whether the LDAP container was successfully deleted (TRUE) or not (FALSE).</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="executeLdapQuery">
                <xs:annotation>
                    <xs:documentation>Request element for the executeLdapQuery operation. Gets the Distinguished Names (DNs) of those entries that match the given LDAP query. The query will traverse all sub-tree nodes starting from node identified by the "base-dn" attribute.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="base-dn" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The base DN to which the query is to be restricted. This will be relative, and in  addition to, any base DN specified in the LDAP connection shared resource's URL.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="bookmark" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Opaque marker for progress through a paged result set. Not specified on the first paging request. Only specified on subsequent paging requests. Content must be Base64 encoded.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-alias" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP connection shared resource on which the LDAP query is to be evaluated.

LDAP connection shared resource are named with the prefix "ldap/de/" in order to indicate that they are  intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-query" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The LDAP query to be evaluated. The query must conform to the RFC 2254 LDAP Search Filter standard.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="page-size" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Requested page size for paged result sets. If not specified then paging will not be used. To be specified on every paging request.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="search-scope" type="de:XmlLdapSearchScope">
                        <xs:annotation>
                            <xs:documentation>The Search Scope determines the depth to which the search will be performed. By default the search will be SUBTREE.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="executeLdapQueryResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the executeLdapQuery operation. Returns the Distinguished Names (DNs) resolved by the given LDAP query.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ldap-entry" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>The collection of fully Distinguished Names (DNs) resolved by the given LDAP query.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:attribute name="ldap-dn" use="required" type="xs:string"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="base-dn" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The base DN to which the query was restricted. This will be relative, and in additition to, any base DN specified in the LDAP connection shared resource's rURL.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="bookmark" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Opaque marker for progress through a paged result set. Specified but empty if there are no more results left in the paged result set. Response will be Base64 encoded.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="estimated-size" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Estimated size of all results from LDAP server. Only specified if paged result sets are requested, and only if supported by the LDAP server.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-alias" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP connection shared resource on which the LDAP query was evaluated.

LDAP connection shared Resource are named with the prefix "ldap/de/" in order to indicate that they are 
intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-query" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The LDAP query that was evaluated.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="search-scope" type="de:XmlLdapSearchScope">
                        <xs:annotation>
                            <xs:documentation>The Search Scope determines the depth to which the search will be performed. By default the search will be SUBTREE.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCandidateDetail">
                <xs:annotation>
                    <xs:documentation>Request element for the getCandidateDetail operation. Having retrieved a list of the candidate resources, this operation will allow the caller to retrieve additional information about one candidate.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="de:XmlLdapContainerEntry">
                            <xs:attribute name="container-id" use="required" type="xs:long">
                                <xs:annotation>
                                    <xs:documentation>Identifies the LDAP container from which the candidate was resolved.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCandidateDetailResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getCandidateDetail operation. Returns the name and GUID of the existing resource, if one already exists for the candidate. Includes the values for any resource attributes mapped to the LDAP attributes of the identified LDAP container.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="de:XmlLdapContainerEntry">
                            <xs:sequence>
                                <xs:element name="attribute" type="de:XmlMappedAttributeValue" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>Names an LDAP attribute mapped to the resource attribute identified by its GUID, and provides the values derived from the named LDAP attribute.</xs:documentation>
                                    </xs:annotation>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="container-id" use="required" type="xs:long">
                                <xs:annotation>
                                    <xs:documentation>Identifies the LDAP container from which the candidate was resolved.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="end-date" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>If the candidate is one for which a resource already exists, this optional date and time shows when the resource's presence ends.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="guid" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>If the candidate is one for which a resource already exists, the GUID of that existing resource is given.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="name" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The name of the existing resource, or the name that will be assigned (by default) to the resource created from this candidate entry.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="start-date" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>If the candidate is one for which a resource already exists, this optional date and time shows when the resource's presence begins.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLdapEntry">
                <xs:annotation>
                    <xs:documentation>Request element for the getLdapEntry operation. Returns the named attributes from the LDAP entry identified by the given LDAP alias and DN.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="de:XmlLdapEntryId">
                            <xs:sequence>
                                <xs:element name="attribute" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>Names an LDAP attribute to be included for each entry in the result set. If no names are specified in the request, all the entry's attributes will be returned.</xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                        <xs:attribute name="name" use="required" type="xs:string"/>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="getLdapEntryResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getLdapEntry operation. Returns the requested attributes of the LDAP entry identified in the request. If the identifed LDAP entry does not exist, the response will be empty.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="de:XmlLdapEntry">
                            <xs:attribute name="ldap-alias" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Identifies the LDAP connection shared resource from which the entry was read.

LDAP connection shared resource are named with the prefix "ldap/de/" in order to indicate that they are intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="not-found" default="false" type="xs:boolean">
                                <xs:annotation>
                                    <xs:documentation>Indicates that the identified LDAP entry cannot be found.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="listAttributeNames">
                <xs:annotation>
                    <xs:documentation>Request element for the listAttributeNames operation. Lists the names of those attributes that are available from the LDAP entries identified by a search of the LDAP connection shared resource. The LDAP connection is identified by its alias, and the search is limited to the LDAP query given in the filter.

A base-dn also limits the search to the LDAP entries that lie within that branch of the LDAP directory.

A sample of the values held by the resulting named attributes can be requested by specifying a sample-size. This value specifies the number of sample values to be returned for each named attribute.

The response also includes the number of LDAP entries identified in the search.        </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="base-dn" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The base DN to which the query is to be restricted. This will be relative to, and in  addition to, any base DN specified in the LDAP connection shared resource's URL.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-alias" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP connection shared resource on which the LDAP query is to be evaluated.

LDAP connection shared resource are named with the prefix "ldap/de/" in order to indicate that they are intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-query" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The LDAP query to be evaluated. The query must conform to the RFC 2254 LDAP Search Filter standard.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="sample-size" default="0" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>The maximum number of random example LDAP entries to be returned.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="search-scope" type="de:XmlLdapSearchScope">
                        <xs:annotation>
                            <xs:documentation>The Search Scope determines the depth to which the search will be performed. By default the search will be SUBTREE.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="listAttributeNamesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the listAttributeNames operation Returns a list of attribute names and counts the LDAP entries identified in the search.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="attribute" type="de:XmlLdapAttribute" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>The collection of attribute names resolved from the LDAP entries identified 
by the given LDAP query.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="sample-entry" type="de:XmlLdapEntry" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>The collection of sample LDAP entries resolved by the given LDAP query.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="base-dn" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The base DN to which the query was restricted. This will be relative to, and in  addition to, any base DN specified in the LDAP Connection Shared Resource's URL.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="entry-count" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>The number of LDAP entries encountered in the search.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-alias" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP connection shared resource on which the LDAP query was evaluated.

LDAP connection shared resources are named with the prefix "ldap/de/" in order to indicate that they are intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ldap-query" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The LDAP query that was evaluated.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="search-scope" type="de:XmlLdapSearchScope">
                        <xs:annotation>
                            <xs:documentation>The Search Scope determines the depth to which the search will be performed. By default the search will be SUBTREE. This is only returned if it was specified in the request.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="listCandidateResources">
                <xs:annotation>
                    <xs:documentation>Request element for the listCandidateResources operation. Lists the candidate resources (including existing eesources) from the identified LDAP container. The entries in the response are suitable to be passed to the createResource operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="bookmark" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Opaque marker for progress through a paged result set. Not specified on the first paging request. Only specified on subsequent paging requests. Content must be Base64 encoded.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="container-id" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP container from which the candidates are to be resolved.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="include" default="ALL" type="de:XmlCandidateChoice">
                        <xs:annotation>
                            <xs:documentation>Determines what entries should be included in the response.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="page-size" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Requested page size for paged result sets. If not specified then paging will not be used. To be specified on every paging request.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="listCandidateResourcesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the listCandidateResources operation.  Returns a list of candidate resources from the requested container.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="candidate" type="de:XmlResourceCandidate" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="bookmark" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Opaque marker for progress through a paged result set. Specified but empty if there are no more results left in the paged result set. Response will be Base64 encoded.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="container-id" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Identifies the LDAP container from which the candidates were resolved.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="estimated-size" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Estimated size of all results from LDAP server. Only specified if paged result sets are requested, and only if supported by the LDAP server.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="include" default="ALL" type="de:XmlCandidateChoice">
                        <xs:annotation>
                            <xs:documentation>Indicates what entries are be included in the collection of candidate entries.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="listContainers">
                <xs:annotation>
                    <xs:documentation>Request element for the listContainers operation. This service returns the configuration detail of all LDAP containers to which the caller has access permission. Access can be restricted by the organizations to which the caller is associated.</xs:documentation>
                </xs:annotation>
                <xs:complexType/>
            </xs:element>
            <xs:element name="listContainersResponse">
                <xs:annotation>
                    <xs:documentation>Response element for listLDAPContainers operation. Includes the full details of the LDAP containers, including the LDAP sources and resource  attribute mappings.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>A list of the configured LDAP Containers.</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="ldap-container" type="de:XmlContainer" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Definition of an LDAP container, including its LDAP source(s) and any attribute mappings.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="listLdapConnections">
                <xs:annotation>
                    <xs:documentation>Request element for the listLdapConnections operation. Gets a list of the LDAP connection shared resources available to Directory Engine.

Those LDAP connection shared resources named with the prefix "ldap/de/" will be included. Each will be
identified by its alias (which is the name minus the "ldap/de/" prefix).</xs:documentation>
                </xs:annotation>
                <xs:complexType/>
            </xs:element>
            <xs:element name="listLdapConnectionsResponse">
                <xs:annotation>
                    <xs:documentation>Response element for listLdapConnections operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ldap-connection" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies an LDAP connection shared resource by its alias, and also provides the URL used by that connection.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:attribute name="ldap-alias" use="required" type="xs:string">
                                    <xs:annotation>
                                        <xs:documentation>The name (or alias) by which a configured LDAP connection shared resource is identified.

LDAP connection shared resource are named with the prefix "ldap/de/" in order to indicate that they are intended for Directory Engine use. The alias given here is that name without the "ldap/de/" prefix.</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                <xs:attribute name="provider-url" use="required" type="xs:string">
                                    <xs:annotation>
                                        <xs:documentation>The URL (including any base DN) to which configured LDAP connection shared resource is connected.</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="saveContainer" type="de:XmlContainer">
                <xs:annotation>
                    <xs:documentation>Request element for saveLDAPContainerDetail operation. This service will save the given LDAP container configuration. See the description of XmlLdapContainer for more detail on the request parameter.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="saveContainerResponse">
                <xs:annotation>
                    <xs:documentation>Response element for saveLDAPContainerDetail operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="container-id" use="required" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>Unique ID of the newly-created or updated LDAP container.

(This value is returned only if the LDAP container was successfully saved.)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://resource.api.de.bpm.tibco.com" xmlns:de="http://base.api.de.bpm.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://resource.api.de.bpm.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://base.api.de.bpm.tibco.com"/>
            <xs:annotation>
                <xs:documentation>
      A note on the naming conventions used:
      Element types from which Java classes are generated should be named using the
      same convention as Java classes (i.e. camel-casing). They should also have the
      prefix "Xml" in order to avoid any conflict with any POJO classes of the same
      name.
      Attributes, and the name of sub-elements, are in lower-case, with hyphens used
      to separate words. For example, "first-name", "primary-attribute" and "parent-id".
      Sub-element names should also be singular; e.g. "child" and not "children",
      "property" and not "properties".
        </xs:documentation>
            </xs:annotation>
            <xs:complexType name="XmlCreateResource">
                <xs:annotation>
                    <xs:documentation>Having retrieved a list of the candidate resources, this method is used to create resources from the LDAP references returned with each candidate resource. The response returns the GUID assigned to the newly created resources. Each element in the response identifies the candidate to which it relates using the primary LDAP Source reference and the LDAP container ID.

If a resource already exists with a given LDAP reference, no update is made to that resource, and the GUID of the existing resource is returned in the response (along with a boolean attribute "already-present").

For those candidates for which a resource could not be created (due to some logical error, rather than a system failure), the response includes a "failure" element identifying the candidate, as well as a reason for the failure. System failures are reported using a SOAP fault response.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="candidate" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>A list of candidate resources to be created.</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="de:XmlLdapContainerEntry">
                                    <xs:attribute name="container-id" use="required" type="xs:long">
                                        <xs:annotation>
                                            <xs:documentation>Identifies the LDAP container from which the candidate was resolved.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="end-date" type="xs:dateTime">
                                        <xs:annotation>
                                            <xs:documentation>The optional date and time on which the resource's presence should end. If specified, a start-date must also be specified.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="label" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>The name assigned to the resource for display purposes.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="name" use="required" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>The name to be assigned to the resource created from this candidate entry.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="start-date" type="xs:dateTime">
                                        <xs:annotation>
                                            <xs:documentation>The optional date and time on which the resource's presence should begin.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="schema-version" default="1" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Indicates the version of the request schema; which determines what information is to be included in the response. This allows for future, backward compatible modifications to the schema.
The following values are recognised:
1: Include candidate name in failure elements of response.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlDeleteResource">
                <xs:annotation>
                    <xs:documentation>Request element for the deleteResource operation. This service is used to delete the resource identified by its GUID.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="guid" type="xs:string" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>List of GUIDs of the resources to be deleted.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="XmlGetResource">
                <xs:annotation>
                    <xs:documentation>Request element for the getResource operation. Returns detailed information for the resource identified by its GUID. The organization model version in the request identifies the organization model major version from which the resource's model entity associations are to be taken. The default value of -1 indicates that the latest version should be used.
            </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="guid" type="xs:string" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>List of GUIDs that identifies the resource(s).</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="model-version" default="-1" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Identifies the model major version from which the resource's organization model entity associations are to be taken. The default value of -1 indicates that the latest version should be used.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlUpdateResource">
                <xs:annotation>
                    <xs:documentation>Request element for updateResource operation. Allows the properties of the identified resource to be modified. Many of the parameters within this request document are optional; only those that are provided in the request will be set on the identified resource. Returns detailed information for the resource identified by its GUID. The model version in the request identifies the organization model major version from which the resource's model entity associations are to be taken. The default value of -1 indicates that the latest version should be used.
            </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="resource" type="ns3:XmlUpdateResourceType" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>A list of candidate resources to be updated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="model-version" default="-1" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Identifies the model major version from which the resource's organization model entity associations are to be taken. The default value of -1 indicates that the latest version should be used.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlUpdateResourceType">
                <xs:sequence>
                    <xs:element name="set-name" type="de:XmlStringAttribute" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The name value to be assigned to the resource.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="set-label" type="de:XmlOptionalStringAttribute" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The name to be assigned to the resource that is used for display purposes. To remove the label from a resource, do not include a value attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="set-date-range" type="de:XmlDateRangeAttribute" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Identifies the date range for which the resource should be present. To remove a date range, do not set any attribute values.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ldap-reference" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Lists the LDAP mappings of the resource to be modified. The LDAP alias's listed must correspond to those of the LDAP container to which the resource belongs.</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="de:XmlLdapContainerEntry">
                                    <xs:attribute name="container-id" type="xs:long">
                                        <xs:annotation>
                                            <xs:documentation>Identifies the LDAP container to which the candidate is to be moved.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="set-location" type="de:XmlOptionalEntityReference" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Identifies a location to which the resource is to be associated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="add-position" type="de:XmlEntityReferenceDateRange" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the positions to which the resource is to be associated. Note that add requests are processed ahead of remove requests when included in the same update. Adding the same position multiple times, overwrites any existing positions.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="remove-position" type="de:XmlEntityReference" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the positions from which the resource is to be removed. Note that add requests are processed ahead of remove requests when included in the same update. Removing the same position multiple times in the same request is acceptable.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="add-group" type="de:XmlEntityReferenceDateRange" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the groups to which the resource is to be associated. Note that add requests are processed ahead of remove requests when included in the same update. Adding the same group multiple times overwrites any existing groups.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="remove-group" type="de:XmlEntityReference" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the groups from which the resource is to be removed. Note that add requests are processed ahead of remove requests when included in the same update. Removing the same group multiple times in the same request is acceptable.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="add-capability" type="de:XmlEntityReferenceQualified" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the capabilities to which the resource is to be associated. Note that add requests are processed ahead of remove requests when included in the same update. Adding the same capability multiple times overwrites any existing capabilities.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="remove-capability" type="de:XmlEntityReference" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the capabilities from which the resource is to be removed. Note that add requests are processed ahead of remove requests when included in the same update. Removing the same capability multiple times in the same request is acceptable.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="set-attribute" type="de:XmlEntityReferenceAttributes" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Identifies the resource attributes, and the values to be assigned to the resource. Adding the same attribute multiple times overwrites any existing attributes. To remove an attribute value, do not include the value attribute. Note that for an EnumSet type, the value attribute is repeated as a list. For all other types, there should be just one value attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="guid" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The GUID that identifies the Resource.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="createResource" type="ns3:XmlCreateResource"/>
            <xs:element name="createResourceResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the createResource operation. Details the properties and attributes of the resource identified in the request.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="entity" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>List of successfully created resources.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:annotation>
                                    <xs:documentation>Identifies the candidate to which the Resource refers.</xs:documentation>
                                </xs:annotation>
                                <xs:complexContent>
                                    <xs:extension base="de:XmlLdapEntryId">
                                        <xs:attribute name="already-present" default="false" type="xs:boolean">
                                            <xs:annotation>
                                                <xs:documentation>Indicates whether a resource already exists for the given LDAP references.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="container-id" use="required" type="xs:long">
                                            <xs:annotation>
                                                <xs:documentation>Identifies the LDAP Container from which the candidate was resolved.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="guid" use="required" type="xs:string">
                                            <xs:annotation>
                                                <xs:documentation>The GUID assigned to the newly created resource.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="label" type="xs:string">
                                            <xs:annotation>
                                                <xs:documentation>The name assigned to the resource for dispay purposes.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="name" use="required" type="xs:string">
                                            <xs:annotation>
                                                <xs:documentation>The name assigned to the resource.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="failure" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>List of resources that could not be created due to an error.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:annotation>
                                    <xs:documentation>Identifies the candidate to which the failure refers.</xs:documentation>
                                </xs:annotation>
                                <xs:complexContent>
                                    <xs:extension base="de:XmlLdapEntryId">
                                        <xs:attribute name="container-id" use="required" type="xs:long">
                                            <xs:annotation>
                                                <xs:documentation>Identifies the LDAP container from which the candidate was resolved.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="error" use="required" type="de:XmlCandidateError">
                                            <xs:annotation>
                                                <xs:documentation>Provides a coded explanation of why a resource could not be created from the corresponding candidate.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="name" use="required" type="xs:string">
                                            <xs:annotation>
                                                <xs:documentation>Identifies the Resource name given in the failing entry.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="deleteResource" type="ns3:XmlDeleteResource"/>
            <xs:element name="deleteResourceResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the deleteResource operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="guid" type="xs:string" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>GUIDs of the resources that were deleted. Indicates a successful deletion.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="findResources">
                <xs:annotation>
                    <xs:documentation>Request element for the findResource operation. The request identifies any number of groups, positions, organization units, organizations, locations, capabilities, or privileges from which the associated resources will be identified.

The request may also identify resources by their name.

Normally either GUIDs or resource names are specified in the request, however a mixture can be specified if necessary. Note that a request with no GUIDs or resource names is invalid - at least one of the two must be specified.

Where both GUIDs and resource names are specified in the request these lists are independent of each of other - the GUIDs do not need to match up with corresponding resource names.
			
The response lists those resources, giving their GUID, name, and label properties. If the same resource is associated with more than one of the entities identified in the request, that resource only appears once in the response. The response does not indicate the entity from which the resource was located.
			
The model version in the request identifies the organization model major version in which the search for the entities should be performed. The default value of -1 indicates that the latest version should be used. When the request is to locate resources by their names, the model version is not used (but must still be valid).

As a resource's associations, and the resource itself, can be limited by a date range, the search can selectively include only those resources that are currently associated with the identified entities. When searching by resource name or associations, a true value ensures that the response only includes those resources whose date restrictions fall within the current date/time. </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="entity-ref" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies an organization model entity (by its unique GUID) whose associated resources are to be included in the response.

The 'deep-search' attribute determines whether the search for resources should extend to logical associations (true). This only applies to groups (where sub-groups will also be included) and locations (where associations by positions, organization units, and organizations will be included). For other entity types, the deep-search attribute is ignored.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:attribute name="deep-search" default="false" type="xs:boolean">
                                    <xs:annotation>
                                        <xs:documentation>Determines whether the search for resources should extend to logical associations (true). This only applies to groups (where sub-groups will also be included) and locations (where associations by positions, organization units, and organizations will be included). For other entity types, this attribute is ignored.</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                <xs:attribute name="guid" use="required" type="xs:string"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="resource-name" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Names the resource(s) to be searched for. There may be two, or more, resources that share the same name, so the response may include more than one result for each name provided.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="current-only" default="false" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Determines whether only resources currently associated with the identified entities are to be include (true). If false, any date ranges applied to the resource or its associations are ignored.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="model-version" default="-1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Identifies the major organization model version in which the identified entities are to be searched. The default value of -1 indicates that the latest version should be used. When searching for resources by name, this attribute is ignored.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="findResourcesResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the findResource operation. The request identifies any number of groups, positions, organization units, organizations, locations, capabilities or privileges, from which the associated resources are to be identified.
			
The response lists those resources, giving their GUID, name, and label properties. If the same resource is associated with more than one of the entities identified in the request, that resource only appears once in the response. The response does not indicate the entity from which the resource was located.

Any date range that applies to either the resource or its association with the entity is ignored, unless the request indicates that only current resources are to be included.

The GUIDs of the resources included in the response can be passed to the getResource operation in order to retrieve detailed information on any resource.
			
The model version in the response identifies the organization model major version in which the search for the entities was performed.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="resource" type="de:XmlModelEntity" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies a resource associated with one or more of the organization model entities identified in the request.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="model-version" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>Identifies the major organization model version in which the search was performed.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeletedResources">
                <xs:annotation>
                    <xs:documentation>Requests a list of the deleted resources. The results will be ordered by name, and may be, optionally, paged.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="page-control" type="de:XmlPageControl" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>Allows results to be paged. This is optional. If not specified, the entire list of deleted resources are returned.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeletedResourcesResponse">
                <xs:annotation>
                    <xs:documentation>The response object for XmlGetDeletedResources. Lists the details of the deleted resources.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="page-control" type="de:XmlPageControlResponse" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>If a page control was given in the request, this will convey the same information and also indicate the number of pages</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="resource" type="de:XmlDeletedResource" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Lists the summary details of the deleted resources/users.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getResource" type="ns3:XmlGetResource"/>
            <xs:element name="getResourceResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the getResource operation. Details the properties and attributes of the resources identified in the request.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="resource" type="de:XmlResourceDetail" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>List of resources to be retrieved.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="purgeDeletedResources">
                <xs:annotation>
                    <xs:documentation>Requests that the identified, deleted resource records be purged.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="all" type="xs:anyType">
                            <xs:annotation>
                                <xs:documentation>Specifies that all deletion records are to be purged.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="guid" type="xs:string" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>Identifies individual deletion records that are to be purged.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="purgeDeletedResourcesResponse">
                <xs:annotation>
                    <xs:documentation>The response object for purgeDeletedResources requests.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="purge-count" use="required" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>The number of records that were purged.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateResource" type="ns3:XmlUpdateResource"/>
            <xs:element name="updateResourceResponse">
                <xs:annotation>
                    <xs:documentation>Response element for the updateResource operation. Provides an acknowledgement of the update and details the properties and attributes of the resources identified in the request.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="resource" type="de:XmlResourceDetail" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>List of resources that have been updated.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xsd:schema xmlns="http://xmlns.example.com/unique/default/namespace/1344674220961" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://xmlns.example.com/unique/default/namespace/1344674220961" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:element name="Fault">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="StackTrace" form="unqualified" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="Msg" form="unqualified" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="FullClass" form="unqualified" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="Class" form="unqualified" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="ProcessStack" form="unqualified" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="MsgCode" form="unqualified" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tibco.com/XPD/ScriptDescriptor/" targetNamespace="http://www.tibco.com/XPD/ScriptDescriptor/" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <complexType name="CacType">
                <annotation>
                    <documentation>Definition of a CAC Type (Case Access Class).</documentation>
                </annotation>
                <sequence>
                    <element name="scriptingName" type="string">
                        <annotation>
                            <documentation>Name that will be used to refer to the Case Access Class from within the script. For example: cac_com_example_claimmodel_Claim. </documentation>
                        </annotation>
                    </element>
                    <element name="canonicalClassName" type="string">
                        <annotation>
                            <documentation>Fully qualified class name. For example: com.example.claimmodel.si.cac.ClaimCAC.</documentation>
                        </annotation>
                    </element>
                </sequence>
            </complexType>
            <complexType name="EnumType">
                <annotation>
                    <documentation>Definition of an EnumType.</documentation>
                </annotation>
                <sequence>
                    <element name="scriptingName" type="string" minOccurs="0">
                        <annotation>
                            <documentation>Name that will be used to refer to the EMF factory class from within the script.

For example: com_example_customer_CustomerFactory. </documentation>
                        </annotation>
                    </element>
                    <element name="canonicalClassName" type="string">
                        <annotation>
                            <documentation>Fully qualified class name of the class derived from a BOM enumeration. 

For example, an enum named Title in a BOM whose name is com.example.customer would be: com.example.customer.TitleType. </documentation>
                        </annotation>
                    </element>
                </sequence>
            </complexType>
            <complexType name="FactoryType">
                <annotation>
                    <documentation>Definition of a FactoryType.</documentation>
                </annotation>
                <sequence>
                    <element name="scriptingName" type="string">
                        <annotation>
                            <documentation>Name that will be used to refer to the EMF factory class from within the script.

For example: com_example_customer_CustomerFactory. </documentation>
                        </annotation>
                    </element>
                    <element name="canonicalClassName" type="string">
                        <annotation>
                            <documentation>Fully qualified class name.

For example: com.example.customer.CustomerFactory. </documentation>
                        </annotation>
                    </element>
                    <element name="namespace" type="string">
                        <annotation>
                            <documentation>Namespace of the XSD representation of the BOM. 

For example, for a BOM whose model package is com.example.customer the namespace will be http://example.com/customer/. </documentation>
                        </annotation>
                    </element>
                </sequence>
            </complexType>
            <complexType name="ScriptDescriptorType">
                <sequence>
                    <element name="script" type="tns:ScriptType" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="version" use="required" type="string"/>
            </complexType>
            <complexType name="ScriptType">
                <annotation>
                    <documentation>Definition of a ScriptType.</documentation>
                </annotation>
                <sequence>
                    <choice>
                        <element name="process">
                            <complexType>
                                <sequence>
                                    <element name="processId" type="NMTOKEN"/>
                                    <element name="packageId" type="NMTOKEN"/>
                                </sequence>
                            </complexType>
                        </element>
                        <element name="taskLibraryId" type="NMTOKEN"/>
                    </choice>
                    <element name="factory" type="tns:FactoryType" minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>Details of factory types used by this script.</documentation>
                        </annotation>
                    </element>
                    <element name="enum" type="tns:EnumType" minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>Details of enum types used by this script.</documentation>
                        </annotation>
                    </element>
                    <element name="cac" type="tns:CacType" minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>Details of Case Access Class(es) used by these script(s).</documentation>
                        </annotation>
                    </element>
                </sequence>
            </complexType>
            <element name="scriptdescriptor" type="tns:ScriptDescriptorType"/>
        </schema>
        <xs:schema xmlns="http://channeltype.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://channeltype.common.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:simpleType name="ChannelType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="JSPChannel"/>
                    <xs:enumeration value="GIChannel"/>
                    <xs:enumeration value="PageflowChannel"/>
                    <xs:enumeration value="EmailChannel"/>
                    <xs:enumeration value="RssChannel"/>
                    <xs:enumeration value="openspaceChannel"/>
                    <xs:enumeration value="MobileChannel"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ImplementationType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Pull"/>
                    <xs:enumeration value="Push"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="PresentationType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="JSP"/>
                    <xs:enumeration value="GI"/>
                    <xs:enumeration value="Pageflow"/>
                    <xs:enumeration value="Email"/>
                    <xs:enumeration value="Rss"/>
                    <xs:enumeration value="GWT"/>
                    <xs:enumeration value="iPhone"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:schema>
        <xs:schema xmlns="http://datamodel.common.n2.tibco.com" xmlns:df="http://datafeed.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://datamodel.common.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:complexType name="DataModel">
                <xs:annotation>
                    <xs:documentation>Sets of INPUT, OUTPUT and INOUT parameters that define the complete data model for a work item or page activity.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="inputs" type="dm:FieldType" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>An array of parameters passed to a work item or page activity.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="outputs" type="dm:FieldType" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>An array of parameters passed from a work item or page activity.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="inouts" type="dm:FieldType" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>An array of parameters passed to/from a work item or page activity.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FieldType">
                <xs:annotation>
                    <xs:documentation>Defines a single data field (its name, type and an optional value).</xs:documentation>
                </xs:annotation>
                <xs:choice>
                    <xs:element name="complexSpec" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Value of the data field as a complex type.</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:annotation>
                                <xs:documentation>The Global Object Business Reference ID</xs:documentation>
                            </xs:annotation>
                            <xs:choice>
                                <xs:element name="globalValue" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="value" type="xs:anyType">
                                                <xs:annotation>
                                                    <xs:documentation>The value(s) of the complex object. Note that:

- This value is of xs:anyType since it contains the eintire complex object as XML.

- The XML specified for the value can be either element-based or type-based. See "Handling a Work Item That Contains Business Data &gt; Valid Format for ComplexSpec Business Data" in the BPM Developer's Guide for more information.
</xs:documentation>
                                                </xs:annotation>
                                            </xs:element>
                                            <xs:element name="goRefId" type="xs:string">
                                                <xs:annotation>
                                                    <xs:documentation>The Global Object Reference ID for BDS data.</xs:documentation>
                                                </xs:annotation>
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element name="value" type="xs:anyType" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>The value(s) of the complex object. Note that:

- This value is of xs:anyType since it contains the eintire complex object as XML.

- The XML specified for the value can be either element-based or type-based. See "Handling a Work Item That Contains Business Data &gt; Valid Format for ComplexSpec Business Data" in the BPM Developer's Guide for more information.
</xs:documentation>
                                    </xs:annotation>
                                </xs:element>
                            </xs:choice>
                            <xs:attribute name="className" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The fully qualified name of the complex class from the Business Object Model (BOM).</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="goRefId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The Global Object Reference ID for BDS data.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="simpleSpec" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Value of the data field as a simple type.</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>If this is a standard type filed this will be the real value of the data field. If the data is of type Data Reference this value will be a reference to a Global Data Object.</xs:documentation>
                                    </xs:annotation>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="decimal" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>Number of decimal places allowed for the data field.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="length" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>Maximum length allowed for the data field (not including decimal places).</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
                <xs:attribute name="array" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Indicates whether this parameter contains an array of values (default is false).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of the data field.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="optional" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Boolean value that defines whether the parameter is optional (default is false).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" use="required">
                    <xs:annotation>
                        <xs:documentation>Type of the data field (e.g. string, integer etc.).</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="String"/>
                            <xs:enumeration value="Decimal Number"/>
                            <xs:enumeration value="Integer Number"/>
                            <xs:enumeration value="Boolean"/>
                            <xs:enumeration value="Date"/>
                            <xs:enumeration value="Time"/>
                            <xs:enumeration value="Date Time"/>
                            <xs:enumeration value="Performer"/>
                            <xs:enumeration value="Complex"/>
                            <xs:enumeration value="Data Reference"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="WorkType">
                <xs:annotation>
                    <xs:documentation>Work type definition. (This should be considered as the API specification of any work item created for this work type.)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="workTypeID" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Internal unique ID of the work type as generated by BRM when the work type is registered.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="workTypeUID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Unique ID of the work type.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="workTypeDescription" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Textual description of the work type.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="dataModel" type="dm:DataModel">
                        <xs:annotation>
                            <xs:documentation>Specification of INPUT, OUTPUT and INOUT parameters, which comprise the data model for the work type.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="typePiled" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Flag indicating whether the work type supports the "Piling" workforce resource pattern.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="pilingLimit" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Number of work items of this type that can be successively piled.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ignoreIncomingData" default="true" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Specifies incoming data changes, for example a Work Item reschedule will be ignored if the item data has been changed locally. The default is true so any locally changed data will not be overwritten by a reschedule.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="reofferOnClose" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Whether the work item is to be re-offered when it is closed. If false (default behaviour) the item will not be re-offered, but will remian allocated to the resource.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="reofferOnCancel" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Whether the work item is to be re-offered on cancel. If true (default behaviour) it will be re-offered to the candidate resource set as if it was new work 
</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WorkTypeSpec">
                <xs:annotation>
                    <xs:documentation>Complex type for work type UID and version</xs:documentation>
                </xs:annotation>
                <xs:attribute name="version" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The OSGi version number of this work type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="workTypeDescription" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The description of the work type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="workTypeID" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The UID of the work type</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns="http://api.organisation.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://api.organisation.common.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:simpleType name="OrganisationalEntityType">
                <xs:annotation>
                    <xs:documentation>Definition of the available organizational entity types.

IMPORTANT:Do not delete or re-position any of the enumeration values. If a value must be removed, simply replace it with a "dummy" value.
      </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ORGANIZATION"/>
                    <xs:enumeration value="ORGANIZATIONAL_UNIT"/>
                    <xs:enumeration value="GROUP"/>
                    <xs:enumeration value="POSITION"/>
                    <xs:enumeration value="PRIVILEGE"/>
                    <xs:enumeration value="CAPABILITY"/>
                    <xs:enumeration value="RESOURCE"/>
                    <xs:enumeration value="LOCATION"/>
                    <xs:enumeration value="ORGANIZATION_TYPE"/>
                    <xs:enumeration value="ORGANIZATIONAL_UNIT_TYPE"/>
                    <xs:enumeration value="POSITION_TYPE"/>
                    <xs:enumeration value="LOCATION_TYPE"/>
                    <xs:enumeration value="ORGUNIT_RELATIONSHIP_TYPE"/>
                    <xs:enumeration value="POSITION_HELD"/>
                    <xs:enumeration value="ORGUNIT_RELATIONSHIP"/>
                    <xs:enumeration value="ORGUNIT_FEATURE"/>
                    <xs:enumeration value="POSITION_FEATURE"/>
                    <xs:enumeration value="PARAMETER_DESCRIPTOR"/>
                    <xs:enumeration value="CANDIDATE_QUERY"/>
                    <xs:enumeration value="MODEL_ORG_UNIT"/>
                    <xs:enumeration value="MODEL_POSITION"/>
                    <xs:enumeration value="QUERY"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="XmlCalendarAssignment">
                <xs:annotation>
                    <xs:documentation>Identifies the assignment of the given calendar alias to the identified organization model entity.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:attribute name="calendar-alias" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The calendar alias to be assigned to the organization model entity. If not specified, or an empty string, any existing calendar assignment will be removed.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="entity-guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The unique identifier of the organization model entity to which the calendar reference is to be assigned.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlCalendarRef">
                <xs:annotation>
                    <xs:documentation>Identifies the assignment of a calendar to an organizational entity (group, position, organization unit, or organization).</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:attribute name="calendar-alias" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The alias by which the calendar is referenced by the organization model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="entity-guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The unique identifier of the organization model entity to which the calendar reference belongs.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="entity-label" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The display name of the organization model entity to which the calendar reference belongs. If this is not present, the entity-name value is used for display.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="entity-name" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>The name of the organization model entity to which the calendar reference belongs.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="entity-type" use="required" type="orgdto:OrganisationalEntityType">
                            <xs:annotation>
                                <xs:documentation>The type identifier of the organization model entity to which the calendar reference belongs.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlDynOrgEntityId">
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlModelEntityId">
                        <xs:sequence minOccurs="0">
                            <xs:element name="dynamic-id-attr" type="orgdto:XmlDynamicIdField" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Provides a collection of name/value pairs that identify a Dynamic Organisational Instance.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlDynamicIdField">
                <xs:annotation>
                    <xs:documentation>Forms optional part of a XmlParticipantId to support the use of Dynamic Participants.
When the Participant is part of a Dynamic Organisation Template, the identity must carry additional name/value pairs in order to identify the Dynamic Organisationl Instance in which the entity is located.
The names of these additional attributes are defined on the Dynamic Organisation Template, at design time.
Although the values are optional, if no value is given it will only match against a Dynamic Organisationl Instance with a null value for the same attribute.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="name" use="required" type="xs:token"/>
                <xs:attribute name="value" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="XmlExecuteQuery">
                <xs:annotation>
                    <xs:documentation>Definition of an executable resource query, used to identify a collection of resources that match the criteria specified in the query.

Extension of XmlOrgModelVersion, which provides the organization model version in which the resources to be queried reside.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlResourceQuery">
                        <xs:attribute name="implementation" default="1" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Identifies the implementation version, and governs what style of response will be generated. This allows for the XML schema of the response to vary but remain backward compatible.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="singleRandomResult" type="xs:boolean">
                            <xs:annotation>
                                <xs:documentation>Boolean value specifying whether the query should return a single, randomly selected user from the result set (TRUE), or all the resources in the result set (FALSE).</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlModelEntityId">
                <xs:annotation>
                    <xs:documentation>Unique identifier for an organization model entity.

Used, and extended, throughout Directory Engine to identify an organization model entity. Extends XmlOrgModelVersion, which provides the organization model version attribute.
      </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:sequence>
                            <xs:element name="qualifierSet" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
An optional collection of qualifying values. This overrides any qualifier attribute set on the parent element, allowing more than one value to be set. Multiple values will only be used for qualifiers of type "enumset".</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute name="value" use="required" type="xs:string"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="entity-type" use="required" type="orgdto:OrganisationalEntityType">
                            <xs:annotation>
                                <xs:documentation>Enumerated value defining the type of the organization model entity.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="guid" use="required" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Globally unique ID of the organization model entity.

(Although this value is unique across all entities, if the entity exists within more than one major version, it will share the same GUID.)</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="qualifier" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Only applicable in certain circumstances, and only to organization model entities whose entity-type is PRIVILEGE or CAPABILITY. These entities can have an association with other entities - for example, a resource may hold many capabilities, or a position may have many privileges. 

These associations can have a qualifying value, according to their nature, to differentiate them. For example, the PRIVILEGE to sign off a purchase order may be qualified with the maximum amount that can be signed off.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlOrgModelVersion">
                <xs:annotation>
                    <xs:documentation>Major version number of the organization model.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="model-version" default="-1" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>Major version number of the organization model in which an organization model entity resides. 

If not specified, the default value will be the latest version of the organization model.

(Version numbers must be compatible with, and conform to, the OSGi version number schema. For Directory Engine, only the major part of the version number is significant.)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="XmlParticipantId">
                <xs:annotation>
                    <xs:documentation>Identifier for a participant, by either GUID or name. 

Extension of XmlOrgModelVersion, which provides the organization model version in which the participant resides.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:sequence>
                            <xs:element name="guid" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Globally unique identifier for the organization model entity. 

This value is unique across all entities. However, if the entity exists within more than one major organization model version, it will share the same GUID.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="name" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Name of the organization model entity.

An entity's name will be unique within its entity type and organization model version.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="dynamic-id-attr" type="orgdto:XmlDynamicIdField" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Provides a collection of name/value pairs that identify a Dynamic Organisational Instance.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="entity-type" type="orgdto:OrganisationalEntityType">
                            <xs:annotation>
                                <xs:documentation>Category of this organization model entity (used to improve and validate the search).</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="qualifier" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Qualifier value. This is only applicable in certain circumstances, and only to entities of the entity-type PRIVILEGE or CAPABILITY. 

These entities can have an association with other entities - for example, a resource may hold many capbilities a position may have many privileges. Those associations can have a qualifying value, according to their nature, to differentiate them. 

For example, the privilege to sign off a purchase order may be qualified with the maximum amount for which the purchase order is made.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="XmlResourceQuery">
                <xs:annotation>
                    <xs:documentation>Base type for the specification of a resource query.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="orgdto:XmlOrgModelVersion">
                        <xs:sequence>
                            <xs:element name="query" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>Resource query to be executed. The query must conform to the Resource Query Language (RQL) specification. See the product documentation for detailed information about RQL syntax.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:hdr="http://www.dbs.com/schema/header" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.dbs.com/schema/header" version="1.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="RqHeader">
                <xs:sequence>
                    <xs:element name="ID" type="xs:string" minOccurs="0"/>
                    <xs:element name="SamlTokenStringReq" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="RqHeader" type="hdr:RqHeader"/>
        </xs:schema>
    </wsdl:types>
    <wsdl:service name="Service">
        <wsdl:port name="PortTypeEndpoint1" binding="tns:PortTypeEndpoint1Binding">
            <soap:address location="http://localhost:40000/BPMWrapperServices/AMXPortType"/>
        </wsdl:port>
    </wsdl:service>
    <wsdl:portType name="PortType">
        <wsdl:operation name="getWorkListItemsForView">
            <wsdl:input message="tns:getWorkListItemsForViewRequest"/>
            <wsdl:output message="tns:getWorkListItemsForViewResponse"/>
            <wsdl:fault name="fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="createResource">
            <wsdl:input message="tns:createResourceRequest"/>
            <wsdl:output message="tns:createResourceResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="deleteResource">
            <wsdl:input message="tns:deleteResourceRequest"/>
            <wsdl:output message="tns:deleteResourceResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="updateResource">
            <wsdl:input message="tns:updateResourceRequest"/>
            <wsdl:output message="tns:updateResourceResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="executeGenericQuery">
            <wsdl:input message="tns:executeGenericQueryRequest"/>
            <wsdl:output message="tns:executeGenericQueryResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="listContainers">
            <wsdl:input message="tns:listContainersRequest"/>
            <wsdl:output message="tns:listContainersResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="reallocateWorkItem">
            <wsdl:input message="tns:reallocateWorkItemRequest"/>
            <wsdl:output message="tns:reallocateWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="unallocateWorkItem">
            <wsdl:input message="tns:unallocateWorkItemRequest"/>
            <wsdl:output message="tns:unallocateWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="rescheduleWorkItem">
            <wsdl:input message="tns:rescheduleWorkItemRequest"/>
            <wsdl:output message="tns:rescheduleWorkItemResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="cancelProcessInstance">
            <wsdl:input message="tns:cancelProcessInstanceRequest"/>
            <wsdl:output message="tns:successMessage"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="cancelWorkItemSchedulerService">
            <wsdl:input message="tns:cancelWorkItemRequest"/>
            <wsdl:output message="tns:cancelWorkItemResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="closeWorkItem">
            <wsdl:input message="tns:closeWorkItemRequest"/>
            <wsdl:output message="tns:closeWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="submitWorkItem">
            <wsdl:input message="tns:completeWorkItemRequest"/>
            <wsdl:output message="tns:completeWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="allocateAndOpenWorkItem">
            <wsdl:input message="tns:allocateAndOpenWorkItemRequest"/>
            <wsdl:output message="tns:allocateAndOpenWorkItemResponse"/>
            <wsdl:fault name="fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="allocateAndOpenNextWorkItem">
            <wsdl:input message="tns:allocateAndOpenNextWorkItemRequest"/>
            <wsdl:output message="tns:allocateAndOpenNextWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="getResource">
            <wsdl:input message="tns:getResourceRequest"/>
            <wsdl:output message="tns:getResourceResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="allocateWorkItem">
            <wsdl:input message="tns:allocateWorkItemRequest"/>
            <wsdl:output message="tns:allocateWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="listCandidateResources">
            <wsdl:input message="tns:listCandidateResourcesRequest"/>
            <wsdl:output message="tns:listCandidateResourcesResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="setResourceOrderFilterCriteria">
            <wsdl:input message="tns:setResourceOrderFilterCriteriaRequest"/>
            <wsdl:output message="tns:setResourceOrderFilterCriteriaResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="getWorkListItems">
            <wsdl:input message="tns:getWorkListItemsRequest"/>
            <wsdl:output message="tns:getWorkListItemsResponse"/>
            <wsdl:fault name="fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="getViewsForResource">
            <wsdl:input message="tns:getViewsForResourceRequest"/>
            <wsdl:output message="tns:getViewsForResourceResponse"/>
            <wsdl:fault name="fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="queryProcessInstance">
            <wsdl:input message="tns:queryProcessInstancesRequest"/>
            <wsdl:output message="tns:queryProcessInstancesResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="queryProcessInstanceCount">
            <wsdl:input message="tns:queryProcessInstanceCountRequest"/>
            <wsdl:output message="tns:queryProcessInstanceCountResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="findResources">
            <wsdl:input message="tns:findResourcesRequest"/>
            <wsdl:output message="tns:findResourcesResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="getOrgModel">
            <wsdl:input message="tns:getOrgModelRequest"/>
            <wsdl:output message="tns:getOrgModelResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="getOrgModelEntity">
            <wsdl:input message="tns:getOrgModelEntityRequest"/>
            <wsdl:output message="tns:getOrgModelEntityResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="getOfferSet">
            <wsdl:input message="tns:getOfferSetRequest"/>
            <wsdl:output message="tns:getOfferSetResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="lookupUser">
            <wsdl:input message="tns:lookupUserRequest"/>
            <wsdl:output message="tns:lookupUserResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="listAssociatedResources">
            <wsdl:input message="tns:listAssociatedResourcesRequest"/>
            <wsdl:output message="tns:listAssociatedResourcesResponse"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="cancelWorkItem">
            <wsdl:input message="tns:cancelWorkItemRequest"/>
            <wsdl:output message="tns:cancelWorkItemResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="createProcessInstance">
            <wsdl:input message="tns:createProcessInstanceRequest"/>
            <wsdl:output message="tns:createProcessInstanceResponse"/>
            <wsdl:fault name="Fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="ChangePriority">
            <wsdl:input message="tns:setWorkItemPriorityRequest"/>
            <wsdl:output message="tns:setWorkItemPriorityReponse"/>
            <wsdl:fault name="fault" message="tns:Fault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="PortTypeEndpoint1Binding" type="tns:PortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="getWorkListItemsForView">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent/PortTypeEndpoint1/getWorkListItemsForView"/>
            <wsdl:input>
                <soap:body use="literal" parts="getWorkListItemsForViewDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getWorkListItemsForViewResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createResource">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//createResource"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteResource">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//deleteResource"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateResource">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//updateResource"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="executeGenericQuery">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//executeGenericQuery"/>
            <wsdl:input>
                <soap:body use="literal" parts="executeGenericQueryDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="executeGenericQueryResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="listContainers">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//listContainers"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="reallocateWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//reallocateWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="reallocateWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="reallocateWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unallocateWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//unallocateWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="unallocateWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="unallocateWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="rescheduleWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//rescheduleWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="rescheduleWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="rescheduleskipWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="cancelProcessInstance">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//cancelProcessInstance"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="cancelWorkItemSchedulerService">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//cancelWorkItemSchedulerService"/>
            <wsdl:input>
                <soap:body use="literal" parts="cancelWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="cancelWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="closeWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//closeWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="closeWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="closeWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="submitWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//submitWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="completeWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="completeWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="allocateAndOpenWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//allocateAndOpenWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="allocateAndOpenWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="allocateAndOpenWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="allocateAndOpenNextWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//allocateAndOpenNextWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="allocateAndOpenNextWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="allocateAndOpenNextWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getResource">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//getResource"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="allocateWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//allocateWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="allocateWorkItemDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="allocateWorkItemResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="listCandidateResources">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//listCandidateResources"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="setResourceOrderFilterCriteria">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//setResourceOrderFilterCriteria"/>
            <wsdl:input>
                <soap:body use="literal" parts="setWorkItemOrderFilterCriteriaDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="setWorkItemOrderFilterCriteriaResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getWorkListItems">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent/PortTypeEndpoint1/getWorkListItems"/>
            <wsdl:input>
                <soap:body use="literal" parts="getWorkListItemsRequestDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getWorkListItemsResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getViewsForResource">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent/PortTypeEndpoint1/getViewsForResource"/>
            <wsdl:input>
                <soap:body use="literal" parts="getViewsForResourceDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getViewsForResourceResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="queryProcessInstance">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//queryProcessInstance"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="queryProcessInstanceCount">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//queryProcessInstanceCount"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findResources">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//findResources"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getOrgModel">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//getOrgModel"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getOrgModelEntity">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//getOrgModelEntity"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getOfferSet">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//getOfferSet"/>
            <wsdl:input>
                <soap:body use="literal" parts="getOfferSetDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getOfferSetResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="lookupUser">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//lookupUser"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="listAssociatedResources">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//listAssociatedResources"/>
            <wsdl:input>
                <soap:body use="literal" parts="parameters"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="response"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="cancelWorkItem">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//cancelWorkItem"/>
            <wsdl:input>
                <soap:body use="literal" parts="request"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="workResponse"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createProcessInstance">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//createProcessInstance"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="Fault">
                <soap:fault use="literal" name="Fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="ChangePriority">
            <soap:operation style="document" soapAction="/SharedResources/WrapperService/Service.serviceagent//ChangePriority"/>
            <wsdl:input>
                <soap:body use="literal" parts="setWorkItemPriorityRequestDoc"/>
                <soap:header use="literal" message="tns:Header" part="reqHeader"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="setWorkItemPriorityResponseDoc"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:message name="Header">
        <wsdl:part name="reqHeader" element="ns0:RqHeader"/>
    </wsdl:message>
    <wsdl:message name="getWorkListItemsForViewRequest">
        <wsdl:part name="getWorkListItemsForViewDoc" element="ns1:getWorkListItemsForView"/>
    </wsdl:message>
    <wsdl:message name="getWorkListItemsForViewResponse">
        <wsdl:part name="getWorkListItemsForViewResponseDoc" element="ns1:getWorkListItemsForViewResponse"/>
    </wsdl:message>
    <wsdl:message name="Fault">
        <wsdl:part name="part1" element="ns2:Fault"/>
    </wsdl:message>
    <wsdl:message name="createResourceRequest">
        <wsdl:part name="parameters" element="ns3:createResource"/>
    </wsdl:message>
    <wsdl:message name="createResourceResponse">
        <wsdl:part name="response" element="ns3:createResourceResponse"/>
    </wsdl:message>
    <wsdl:message name="deleteResourceRequest">
        <wsdl:part name="parameters" element="ns3:deleteResource"/>
    </wsdl:message>
    <wsdl:message name="deleteResourceResponse">
        <wsdl:part name="response" element="ns3:deleteResourceResponse"/>
    </wsdl:message>
    <wsdl:message name="updateResourceRequest">
        <wsdl:part name="parameters" element="ns3:updateResource"/>
    </wsdl:message>
    <wsdl:message name="updateResourceResponse">
        <wsdl:part name="response" element="ns3:updateResourceResponse"/>
    </wsdl:message>
    <wsdl:message name="executeGenericQueryRequest">
        <wsdl:part name="executeGenericQueryDoc" element="ns4:executeGenericQueryRequest"/>
    </wsdl:message>
    <wsdl:message name="executeGenericQueryResponse">
        <wsdl:part name="executeGenericQueryResponseDoc" element="ns4:executeGenericQueryResponse"/>
    </wsdl:message>
    <wsdl:message name="listContainersRequest">
        <wsdl:part name="parameters" element="ns5:listContainers"/>
    </wsdl:message>
    <wsdl:message name="listContainersResponse">
        <wsdl:part name="response" element="ns5:listContainersResponse"/>
    </wsdl:message>
    <wsdl:message name="reallocateWorkItemRequest">
        <wsdl:part name="reallocateWorkItemDoc" element="ns1:reallocateWorkItem"/>
    </wsdl:message>
    <wsdl:message name="reallocateWorkItemResponse">
        <wsdl:part name="reallocateWorkItemResponseDoc" element="ns1:reallocateWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="unallocateWorkItemRequest">
        <wsdl:part name="unallocateWorkItemDoc" element="ns1:unallocateWorkItem"/>
    </wsdl:message>
    <wsdl:message name="unallocateWorkItemResponse">
        <wsdl:part name="unallocateWorkItemResponseDoc" element="ns1:unallocateWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="rescheduleWorkItemRequest">
        <wsdl:part name="rescheduleWorkItemDoc" element="ns1:rescheduleWorkItem"/>
    </wsdl:message>
    <wsdl:message name="rescheduleWorkItemResponse">
        <wsdl:part name="rescheduleskipWorkItemResponseDoc" element="ns1:rescheduleWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="cancelProcessInstanceRequest">
        <wsdl:part name="params" element="ns6:processID"/>
    </wsdl:message>
    <wsdl:message name="successMessage">
        <wsdl:part name="params" element="ns6:success"/>
    </wsdl:message>
    <wsdl:message name="cancelWorkItemRequest">
        <wsdl:part name="cancelWorkItemDoc" element="ns1:cancelWorkItem"/>
    </wsdl:message>
    <wsdl:message name="cancelWorkItemResponse">
        <wsdl:part name="cancelWorkItemResponseDoc" element="ns1:cancelWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="closeWorkItemRequest">
        <wsdl:part name="closeWorkItemDoc" element="ns1:closeWorkItem"/>
    </wsdl:message>
    <wsdl:message name="closeWorkItemResponse">
        <wsdl:part name="closeWorkItemResponseDoc" element="ns1:closeWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="completeWorkItemRequest">
        <wsdl:part name="completeWorkItemDoc" element="ns1:completeWorkItem"/>
    </wsdl:message>
    <wsdl:message name="completeWorkItemResponse">
        <wsdl:part name="completeWorkItemResponseDoc" element="ns1:completeWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="allocateAndOpenWorkItemRequest">
        <wsdl:part name="allocateAndOpenWorkItemDoc" element="ns1:allocateAndOpenWorkItem"/>
    </wsdl:message>
    <wsdl:message name="allocateAndOpenWorkItemResponse">
        <wsdl:part name="allocateAndOpenWorkItemResponseDoc" element="ns1:allocateAndOpenWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="allocateAndOpenNextWorkItemRequest">
        <wsdl:part name="allocateAndOpenNextWorkItemDoc" element="ns1:allocateAndOpenNextWorkItem"/>
    </wsdl:message>
    <wsdl:message name="allocateAndOpenNextWorkItemResponse">
        <wsdl:part name="allocateAndOpenNextWorkItemResponseDoc" element="ns1:allocateAndOpenNextWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="getResourceRequest">
        <wsdl:part name="parameters" element="ns3:getResource"/>
    </wsdl:message>
    <wsdl:message name="getResourceResponse">
        <wsdl:part name="response" element="ns3:getResourceResponse"/>
    </wsdl:message>
    <wsdl:message name="allocateWorkItemRequest">
        <wsdl:part name="allocateWorkItemDoc" element="ns1:allocateWorkItem"/>
    </wsdl:message>
    <wsdl:message name="allocateWorkItemResponse">
        <wsdl:part name="allocateWorkItemResponseDoc" element="ns1:allocateWorkItemResponse"/>
    </wsdl:message>
    <wsdl:message name="listCandidateResourcesRequest">
        <wsdl:part name="parameters" element="ns5:listCandidateResources"/>
    </wsdl:message>
    <wsdl:message name="listCandidateResourcesResponse">
        <wsdl:part name="response" element="ns5:listCandidateResourcesResponse"/>
    </wsdl:message>
    <wsdl:message name="setResourceOrderFilterCriteriaRequest">
        <wsdl:part name="setWorkItemOrderFilterCriteriaDoc" element="ns1:setResourceOrderFilterCriteria"/>
    </wsdl:message>
    <wsdl:message name="setResourceOrderFilterCriteriaResponse">
        <wsdl:part name="setWorkItemOrderFilterCriteriaResponseDoc" element="ns1:setResourceOrderFilterCriteriaResponse"/>
    </wsdl:message>
    <wsdl:message name="getWorkListItemsRequest">
        <wsdl:part name="getWorkListItemsRequestDoc" element="ns1:getWorkListItems"/>
    </wsdl:message>
    <wsdl:message name="getWorkListItemsResponse">
        <wsdl:part name="getWorkListItemsResponseDoc" element="ns1:getWorkListItemsResponse"/>
    </wsdl:message>
    <wsdl:message name="getViewsForResourceRequest">
        <wsdl:part name="getViewsForResourceDoc" element="ns1:getViewsForResource"/>
    </wsdl:message>
    <wsdl:message name="getViewsForResourceResponse">
        <wsdl:part name="getViewsForResourceResponseDoc" element="ns1:getViewsForResourceResponse"/>
    </wsdl:message>
    <wsdl:message name="queryProcessInstancesRequest">
        <wsdl:part name="params" element="ns6:queryProcessInstancesInput"/>
    </wsdl:message>
    <wsdl:message name="queryProcessInstancesResponse">
        <wsdl:part name="params" element="ns6:queryProcessInstancesOutput"/>
    </wsdl:message>
    <wsdl:message name="queryProcessInstanceCountRequest">
        <wsdl:part name="params" element="ns6:queryString"/>
    </wsdl:message>
    <wsdl:message name="queryProcessInstanceCountResponse">
        <wsdl:part name="params" element="ns6:itemCount"/>
    </wsdl:message>
    <wsdl:message name="findResourcesRequest">
        <wsdl:part name="parameters" element="ns3:findResources"/>
    </wsdl:message>
    <wsdl:message name="findResourcesResponse">
        <wsdl:part name="response" element="ns3:findResourcesResponse"/>
    </wsdl:message>
    <wsdl:message name="getOrgModelRequest">
        <wsdl:part name="parameters" element="ns7:getOrgModel"/>
    </wsdl:message>
    <wsdl:message name="getOrgModelResponse">
        <wsdl:part name="response" element="ns7:getOrgModelResponse"/>
    </wsdl:message>
    <wsdl:message name="getOrgModelEntityRequest">
        <wsdl:part name="parameters" element="ns7:getOrgModelEntity"/>
    </wsdl:message>
    <wsdl:message name="getOrgModelEntityResponse">
        <wsdl:part name="response" element="ns7:getOrgModelEntityResponse"/>
    </wsdl:message>
    <wsdl:message name="getOfferSetRequest">
        <wsdl:part name="getOfferSetDoc" element="ns1:getOfferSet"/>
    </wsdl:message>
    <wsdl:message name="getOfferSetResponse">
        <wsdl:part name="getOfferSetResponseDoc" element="ns1:getOfferSetResponse"/>
    </wsdl:message>
    <wsdl:message name="lookupUserRequest">
        <wsdl:part name="parameters" element="ns8:lookupUser"/>
    </wsdl:message>
    <wsdl:message name="lookupUserResponse">
        <wsdl:part name="response" element="ns8:lookupUserResponse"/>
    </wsdl:message>
    <wsdl:message name="listAssociatedResourcesRequest">
        <wsdl:part name="parameters" element="ns8:listAssociatedResources"/>
    </wsdl:message>
    <wsdl:message name="listAssociatedResourcesResponse">
        <wsdl:part name="response" element="ns8:listAssociatedResourcesResponse"/>
    </wsdl:message>
    <wsdl:message name="createProcessInstanceRequest">
        <wsdl:part name="params" element="ns6:createProcessInstanceInput"/>
    </wsdl:message>
    <wsdl:message name="createProcessInstanceResponse">
        <wsdl:part name="params" element="ns6:processID"/>
    </wsdl:message>
    <wsdl:message name="setWorkItemPriorityRequest">
        <wsdl:part name="setWorkItemPriorityRequestDoc" element="ns1:setWorkItemPriority"/>
    </wsdl:message>
    <wsdl:message name="setWorkItemPriorityReponse">
        <wsdl:part name="setWorkItemPriorityResponseDoc" element="ns1:setWorkItemPriorityResponse"/>
    </wsdl:message>
</wsdl:definitions>