<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://xmlns.example.com/1429342289226" xmlns:pfx2="http://www.tibco.com/bs3.0/_IfQRQOS-EeS1Z9zi9Np1Zw/iwf_cc_fraudsalert_process_wsp" xmlns:ns="http://api.brm.n2.tibco.com" xmlns:pfx3="http://schemas.dbs.com/icc/BasicSvc" xmlns:pfx4="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx5="http://www.dbs.com/iwf/bpm/services/token" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.dbs.com/schema/header" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:ns3="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns13="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/file/v2">
    <xsd:import namespace="urn:oasis:names:tc:SAML:2.0:assertion" schemaLocation="/Shared Resources/wsdl/concrete/saml/saml-schema-assertion-2.0.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1429342289226" location="/SharedResources/WSDL/Concrete/AMXBPMWrapper.wsdl"/>
    <pd:name>HFA/BPM/bpmGetWorkListItems.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="casenum" type="xsd:string"/>
                    <xsd:element name="SAMLTokenString" type="xsd:string"/>
                    <xsd:element name="GUID" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>78</pd:startX>
    <pd:startY>97</pd:startY>
    <pd:returnBindings>
        <pfx:getWorkListItemsResponse>
            <getWorkListItemsResponseDoc>
                <xsl:for-each select="$SOAPRequestReply/outputMessage/ns:getWorkListItemsResponse">
                    <ns:getWorkListItemsResponse>
                        <startPosition>
                            <xsl:value-of select="startPosition"/>
                        </startPosition>
                        <endPosition>
                            <xsl:value-of select="endPosition"/>
                        </endPosition>
                        <totalItems>
                            <xsl:value-of select="totalItems"/>
                        </totalItems>
                        <xsl:for-each select="workListFacade">
                            <workListFacade>
                                <xsl:for-each select="facade">
                                    <facade>
                                        <xsl:attribute name="attributeName">
                                            <xsl:value-of select="@attributeName"/>
                                        </xsl:attribute>
                                        <xsl:if test="@displayName">
                                            <xsl:attribute name="displayName">
                                                <xsl:value-of select="@displayName"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                    </facade>
                                </xsl:for-each>
                            </workListFacade>
                        </xsl:for-each>
                        <xsl:for-each select="workItems">
                            <workItems>
                                <xsl:for-each select="id">
                                    <id>
                                        <xsl:attribute name="id">
                                            <xsl:value-of select="@id"/>
                                        </xsl:attribute>
                                        <xsl:if test="@version">
                                            <xsl:attribute name="version">
                                                <xsl:value-of select="@version"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                    </id>
                                </xsl:for-each>
                                <xsl:for-each select="header">
                                    <header>
                                        <xsl:attribute name="distributionStrategy">
                                            <xsl:value-of select="@distributionStrategy"/>
                                        </xsl:attribute>
                                        <xsl:if test="@groupID">
                                            <xsl:attribute name="groupID">
                                                <xsl:value-of select="@groupID"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@priority">
                                            <xsl:attribute name="priority">
                                                <xsl:value-of select="@priority"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@endDate">
                                            <xsl:attribute name="endDate">
                                                <xsl:value-of select="@endDate"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@startDate">
                                            <xsl:attribute name="startDate">
                                                <xsl:value-of select="@startDate"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                        <xsl:if test="description">
                                            <description>
                                                <xsl:value-of select="description"/>
                                            </description>
                                        </xsl:if>
                                        <xsl:for-each select="flags">
                                            <flags>
                                                <scheduleStatus>
                                                    <xsl:value-of select="scheduleStatus"/>
                                                </scheduleStatus>
                                            </flags>
                                        </xsl:for-each>
                                        <xsl:for-each select="itemContext">
                                            <itemContext>
                                                <activityID>
                                                    <xsl:value-of select="activityID"/>
                                                </activityID>
                                                <activityName>
                                                    <xsl:value-of select="activityName"/>
                                                </activityName>
                                                <appInstance>
                                                    <xsl:value-of select="appInstance"/>
                                                </appInstance>
                                                <appName>
                                                    <xsl:value-of select="appName"/>
                                                </appName>
                                                <appID>
                                                    <xsl:value-of select="appID"/>
                                                </appID>
                                                <xsl:if test="appInstanceDescription">
                                                    <appInstanceDescription>
                                                        <xsl:value-of select="appInstanceDescription"/>
                                                    </appInstanceDescription>
                                                </xsl:if>
                                            </itemContext>
                                        </xsl:for-each>
                                    </header>
                                </xsl:for-each>
                                <xsl:for-each select="attributes">
                                    <attributes>
                                        <xsl:if test="@attribute1">
                                            <xsl:attribute name="attribute1">
                                                <xsl:value-of select="@attribute1"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute10">
                                            <xsl:attribute name="attribute10">
                                                <xsl:value-of select="@attribute10"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute11">
                                            <xsl:attribute name="attribute11">
                                                <xsl:value-of select="@attribute11"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute12">
                                            <xsl:attribute name="attribute12">
                                                <xsl:value-of select="@attribute12"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute13">
                                            <xsl:attribute name="attribute13">
                                                <xsl:value-of select="@attribute13"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute14">
                                            <xsl:attribute name="attribute14">
                                                <xsl:value-of select="@attribute14"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute15">
                                            <xsl:attribute name="attribute15">
                                                <xsl:value-of select="@attribute15"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute16">
                                            <xsl:attribute name="attribute16">
                                                <xsl:value-of select="@attribute16"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute17">
                                            <xsl:attribute name="attribute17">
                                                <xsl:value-of select="@attribute17"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute18">
                                            <xsl:attribute name="attribute18">
                                                <xsl:value-of select="@attribute18"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute19">
                                            <xsl:attribute name="attribute19">
                                                <xsl:value-of select="@attribute19"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute2">
                                            <xsl:attribute name="attribute2">
                                                <xsl:value-of select="@attribute2"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute20">
                                            <xsl:attribute name="attribute20">
                                                <xsl:value-of select="@attribute20"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute21">
                                            <xsl:attribute name="attribute21">
                                                <xsl:value-of select="@attribute21"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute22">
                                            <xsl:attribute name="attribute22">
                                                <xsl:value-of select="@attribute22"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute23">
                                            <xsl:attribute name="attribute23">
                                                <xsl:value-of select="@attribute23"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute24">
                                            <xsl:attribute name="attribute24">
                                                <xsl:value-of select="@attribute24"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute25">
                                            <xsl:attribute name="attribute25">
                                                <xsl:value-of select="@attribute25"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute26">
                                            <xsl:attribute name="attribute26">
                                                <xsl:value-of select="@attribute26"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute27">
                                            <xsl:attribute name="attribute27">
                                                <xsl:value-of select="@attribute27"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute28">
                                            <xsl:attribute name="attribute28">
                                                <xsl:value-of select="@attribute28"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute29">
                                            <xsl:attribute name="attribute29">
                                                <xsl:value-of select="@attribute29"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute3">
                                            <xsl:attribute name="attribute3">
                                                <xsl:value-of select="@attribute3"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute30">
                                            <xsl:attribute name="attribute30">
                                                <xsl:value-of select="@attribute30"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute31">
                                            <xsl:attribute name="attribute31">
                                                <xsl:value-of select="@attribute31"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute32">
                                            <xsl:attribute name="attribute32">
                                                <xsl:value-of select="@attribute32"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute33">
                                            <xsl:attribute name="attribute33">
                                                <xsl:value-of select="@attribute33"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute34">
                                            <xsl:attribute name="attribute34">
                                                <xsl:value-of select="@attribute34"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute35">
                                            <xsl:attribute name="attribute35">
                                                <xsl:value-of select="@attribute35"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute36">
                                            <xsl:attribute name="attribute36">
                                                <xsl:value-of select="@attribute36"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute37">
                                            <xsl:attribute name="attribute37">
                                                <xsl:value-of select="@attribute37"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute38">
                                            <xsl:attribute name="attribute38">
                                                <xsl:value-of select="@attribute38"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute39">
                                            <xsl:attribute name="attribute39">
                                                <xsl:value-of select="@attribute39"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute4">
                                            <xsl:attribute name="attribute4">
                                                <xsl:value-of select="@attribute4"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute40">
                                            <xsl:attribute name="attribute40">
                                                <xsl:value-of select="@attribute40"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute5">
                                            <xsl:attribute name="attribute5">
                                                <xsl:value-of select="@attribute5"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute6">
                                            <xsl:attribute name="attribute6">
                                                <xsl:value-of select="@attribute6"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute7">
                                            <xsl:attribute name="attribute7">
                                                <xsl:value-of select="@attribute7"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute8">
                                            <xsl:attribute name="attribute8">
                                                <xsl:value-of select="@attribute8"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:if test="@attribute9">
                                            <xsl:attribute name="attribute9">
                                                <xsl:value-of select="@attribute9"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                    </attributes>
                                </xsl:for-each>
                                <xsl:for-each select="body">
                                    <body>
                                        <xsl:for-each select="dataModel">
                                            <dataModel>
                                                <xsl:for-each select="inputs">
                                                    <inputs>
                                                        <xsl:if test="@array">
                                                            <xsl:attribute name="array">
                                                                <xsl:value-of select="@array"/>
                                                            </xsl:attribute>
                                                        </xsl:if>
                                                        <xsl:attribute name="name">
                                                            <xsl:value-of select="@name"/>
                                                        </xsl:attribute>
                                                        <xsl:if test="@optional">
                                                            <xsl:attribute name="optional">
                                                                <xsl:value-of select="@optional"/>
                                                            </xsl:attribute>
                                                        </xsl:if>
                                                        <xsl:attribute name="type">
                                                            <xsl:value-of select="@type"/>
                                                        </xsl:attribute>
                                                    </inputs>
                                                </xsl:for-each>
                                                <xsl:for-each select="outputs">
                                                    <outputs>
                                                        <xsl:if test="@array">
                                                            <xsl:attribute name="array">
                                                                <xsl:value-of select="@array"/>
                                                            </xsl:attribute>
                                                        </xsl:if>
                                                        <xsl:attribute name="name">
                                                            <xsl:value-of select="@name"/>
                                                        </xsl:attribute>
                                                        <xsl:if test="@optional">
                                                            <xsl:attribute name="optional">
                                                                <xsl:value-of select="@optional"/>
                                                            </xsl:attribute>
                                                        </xsl:if>
                                                        <xsl:attribute name="type">
                                                            <xsl:value-of select="@type"/>
                                                        </xsl:attribute>
                                                    </outputs>
                                                </xsl:for-each>
                                                <xsl:for-each select="inouts">
                                                    <inouts>
                                                        <xsl:if test="@array">
                                                            <xsl:attribute name="array">
                                                                <xsl:value-of select="@array"/>
                                                            </xsl:attribute>
                                                        </xsl:if>
                                                        <xsl:attribute name="name">
                                                            <xsl:value-of select="@name"/>
                                                        </xsl:attribute>
                                                        <xsl:if test="@optional">
                                                            <xsl:attribute name="optional">
                                                                <xsl:value-of select="@optional"/>
                                                            </xsl:attribute>
                                                        </xsl:if>
                                                        <xsl:attribute name="type">
                                                            <xsl:value-of select="@type"/>
                                                        </xsl:attribute>
                                                    </inouts>
                                                </xsl:for-each>
                                            </dataModel>
                                        </xsl:for-each>
                                    </body>
                                </xsl:for-each>
                                <xsl:for-each select="workType">
                                    <workType>
                                        <xsl:if test="@version">
                                            <xsl:attribute name="version">
                                                <xsl:value-of select="@version"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:attribute name="workTypeDescription">
                                            <xsl:value-of select="@workTypeDescription"/>
                                        </xsl:attribute>
                                        <xsl:attribute name="workTypeID">
                                            <xsl:value-of select="@workTypeID"/>
                                        </xsl:attribute>
                                    </workType>
                                </xsl:for-each>
                                <state>
                                    <xsl:value-of select="state"/>
                                </state>
                                <visible>
                                    <xsl:value-of select="visible"/>
                                </visible>
                            </workItems>
                        </xsl:for-each>
                    </ns:getWorkListItemsResponse>
                </xsl:for-each>
            </getWorkListItemsResponseDoc>
        </pfx:getWorkListItemsResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:getWorkListItemsResponse"/>
    <pd:endX>646</pd:endX>
    <pd:endY>99</pd:endY>
    <pd:errorSchemas>
        <BPMUtilityError>
            <xsd:element name="BPMUtilityError">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ErrorMessage" type="xsd:string" minOccurs="0"/>
                        <xsd:element name="logMessage" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </BPMUtilityError>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1429704241392</pd:targetNamespace>
    <pd:activity name="SOAPRequestReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>297</pd:x>
        <pd:y>97</pd:y>
        <config>
            <timeout>%%BPM/AMX/timeout%%</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx:Service</service>
            <servicePort>PortTypeEndpoint1</servicePort>
            <operation>getWorkListItems</operation>
            <soapAction>/SharedResources/WrapperService/Service.serviceagent/PortTypeEndpoint1/getWorkListItems</soapAction>
            <endpointURL>http://%%BPM/Token/host%%:%%BPM/Wrapper/port%%/BPMWrapperServices/AMXPortType</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <ns:getWorkListItems>
                    <xsl:attribute name="getEnhancedAttributes">
                        <xsl:value-of select="true()"/>
                    </xsl:attribute>
                    <xsl:attribute name="getTotalCount">
                        <xsl:value-of select="true()"/>
                    </xsl:attribute>
                    <xsl:attribute name="numberOfItems">
                        <xsl:value-of select="5"/>
                    </xsl:attribute>
                    <xsl:attribute name="startPosition">
                        <xsl:value-of select="0"/>
                    </xsl:attribute>
                    <entityID>
                        <xsl:attribute name="model-version">
                            <xsl:value-of select="-1"/>
                        </xsl:attribute>
                        <xsl:attribute name="entity-type">
                            <xsl:value-of select="&quot;RESOURCE&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="guid">
                            <xsl:value-of select="$Start/Input/GUID"/>
                        </xsl:attribute>
                    </entityID>
                    <orderFilterCriteria>
                        <order>
                            <xsl:value-of select="&quot;id ASC&quot;"/>
                        </order>
                        <filter>
                            <xsl:value-of select="concat(&quot;(&quot;,&quot;attribute2 = &quot;,&quot;'&quot;,$Start/Input/casenum,&quot;'&quot;,&quot;)&quot;)"/>
                        </filter>
                    </orderFilterCriteria>
                </ns:getWorkListItems>
                <headers>
                    <Header.reqHeader>
                        <ns2:RqHeader>
                            <ns2:SamlTokenStringReq>
                                <xsl:value-of select="$Start/Input/SAMLTokenString"/>
                            </ns2:SamlTokenStringReq>
                        </ns2:RqHeader>
                    </Header.reqHeader>
                </headers>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CatchAllError">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>174</pd:x>
        <pd:y>406</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>291</pd:x>
        <pd:y>408</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx4:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Error occured in /Process/BPMProcesses/bpmGetWorkListItems. Error stack trace is &quot;,$CatchAllError/exceptiondata )"/>
                </message>
            </pfx4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Rethrow">
        <pd:type>com.tibco.pe.core.RethrowActivity</pd:type>
        <pd:resourceType>ae.activities.rethrow</pd:resourceType>
        <pd:x>447</pd:x>
        <pd:y>407</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="BPMUtilityError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>591</pd:x>
        <pd:y>184</pd:y>
        <config>
            <faultName>BPMUtilityError</faultName>
        </config>
        <pd:inputBindings>
            <ns13:ActivityInput>
                <data>
                    <BPMUtilityError>
                        <ErrorMessage>
                            <xsl:value-of select="&quot;Error occured in BPM Utility Call: bpmGetWorkListItems service&quot;"/>
                        </ErrorMessage>
                        <logMessage>
                            <xsl:value-of select="tib:render-xml($_error/ns4:ErrorReport)"/>
                        </logMessage>
                    </BPMUtilityError>
                </data>
            </ns13:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CBPMUtilityError">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>381</pd:x>
        <pd:y>305</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=BPMUtilityError</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Rethrow-1">
        <pd:type>com.tibco.pe.core.RethrowActivity</pd:type>
        <pd:resourceType>ae.activities.rethrow</pd:resourceType>
        <pd:x>650</pd:x>
        <pd:y>308</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log_ERROR">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>460</pd:x>
        <pd:y>184</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx4:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Error occured in BPM Utility Call. Error stack trace is &quot;,$_error, $_error_SOAPRequestReply)"/>
                </message>
            </pfx4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogStart">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>188</pd:x>
        <pd:y>96</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx4:ActivityInput>
                <message>
                    <xsl:value-of select="concat('Start bpmGetWorkListItems input ',tib:render-xml($Start/Input,1,1))"/>
                </message>
            </pfx4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogEnd">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>491</pd:x>
        <pd:y>98</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx4:ActivityInput>
                <message>
                    <xsl:value-of select="concat('Start Scan Client Action ',tib:render-xml($SOAPRequestReply/outputMessage/ns:getWorkListItemsResponse,1,1))"/>
                </message>
            </pfx4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>LogStart</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CatchAllError</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>Rethrow</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>Log_ERROR</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CBPMUtilityError</pd:from>
        <pd:to>Rethrow-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>LogEnd</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_ERROR</pd:from>
        <pd:to>BPMUtilityError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogStart</pd:from>
        <pd:to>SOAPRequestReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogEnd</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>